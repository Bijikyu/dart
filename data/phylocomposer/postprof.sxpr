;; Example input describing a Handel MCMC move with path constraints on some branches


(branch (from $NULL) (to $ROOT)
 (transducer TKF91_ROOT)
 ;; note that start, wait & end states can be omitted from these paths
 ;; (it's easy to sum them out, but in fact they can just be ignored)
 (state (I I I I I I I))
 (branch (transducer TKF91_BRANCH) (to $L)
	 (state (S M M M M
		   W M W M  ;; wait states like this should be ignored
		   M E))  ;; so should end & start states
	 (branch (transducer TKF91_BRANCH) (to $L1)
		 (state (S M M M M M M M E))
		 (sequence (A G G C C C A)))
	 (branch (transducer TKF91_BRANCH) (to $L2)
		 (state (M M M M M M M))
		 (sequence (A G G T C C G))))

 (branch (transducer TKF91_BRANCH) (from $ROOT) (to $R)
;; We leave the following branch unspecified, as we want to sample it.
;; 	 (state (S M M M I M M M M E))
	 (branch (transducer TKF91_BRANCH) (to $R1)
		 (state (M M M M M M M M))
		 (sequence (A G G G C C C A)))
	 (branch (transducer TKF91_BRANCH) (to $R2)
		 (state (M M M D I M M M M))
		 (sequence (A G G A T C C G)))))


(token (A C G T))

(transducer

 (name TKF91_ROOT)

 (state (name S) (type start))
 (state (name E) (type end))
 (state (name W) (type wait))
 (state (name I) (type insert) (label pi))

 (transition (from S) (to I) (label kappa))
 (transition (from S) (to W) (label ~kappa))

 (transition (from I) (to I) (label kappa))
 (transition (from I) (to W) (label ~kappa))

 (transition (from W) (to E)))

(transducer

 (name TKF91_BRANCH)

 (state (name S) (type start))
 (state (name E) (type end))
 (state (name W) (type wait))

 (state (name M) (type match) (label Q))
 (state (name D) (type delete))
 (state (name I) (type insert) (label pi))

 (transition (from S) (to I) (label beta))
 (transition (from S) (to W) (label ~beta))

 (transition (from W) (to M) (label alpha))
 (transition (from W) (to D) (label ~alpha))
 (transition (from W) (to E))

 (transition (from M) (to I) (label beta))
 (transition (from M) (to W) (label ~beta))

 (transition (from D) (to I) (label gamma))
 (transition (from D) (to W) (label ~gamma))

 (transition (from I) (to I) (label beta))
 (transition (from I) (to W) (label ~beta)))


(bit-value (beta 2)
	   (~beta .415))
(value ((Q A A) .75))
(value ((Q A C) .05))
(value ((Q A G) .15))
(value ((Q A T) .05))

(value ((Q C A) .05))
(value ((Q C C) .75))
(value ((Q C G) .05))
(value ((Q C T) .15))

(value ((Q G A) .15))
(value ((Q G C) .05))
(value ((Q G G) .75))
(value ((Q G T) .05))

(value ((Q T A) .05))
(value ((Q T C) .15))
(value ((Q T G) .05))
(value ((Q T T) .75))

(value ((pi A) .25))
(value ((pi C) .25))
(value ((pi G) .25))
(value ((pi T) .25))

(bit-value (alpha 1))
(bit-value (~alpha 1))
(bit-value (gamma 1))
(bit-value (~gamma 1))

(bit-value (kappa 1))
(bit-value (~kappa 1))
