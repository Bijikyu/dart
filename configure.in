#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.61)
AC_INIT(dart, 0.2, dart-bugs@postbox.biowiki.org)
AC_CONFIG_HEADER([src/config.h])

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_LN_S

AC_DEFINE_UNQUOTED([CPLUSPLUS_COMPILER],["$CXX"],[C++ compiler])

# Checks for libraries.

# Check for the guile Scheme interpreter/extension language library.

# Note: I used to check for guile using the following macro:
# PKG_CHECK_MODULES([GUILE], [guile-1.8])
# This didn't seem to work - perhaps because guile-1.8 doesn't seem to have a .pc pkg-config description file.
# Instead we now use guile-config, via the GUILE_FLAGS macro defined in acinclude.m4.

AC_ARG_WITH([guile],
            [AS_HELP_STRING([--without-guile],
              [disable support for guile Scheme interpreter])],
            [with_guile=no],
            [with_guile=yes])

GUILE_FLAGS
if test "x$with_guile" == "xno"
then
	GUILE_DEPS=""
	GUILE_CFLAGS=""
	GUILE_LDFLAGS=""
	GUILE_INCLUDED=0
fi

AC_DEFINE_UNQUOTED([GUILE_INCLUDED], [$GUILE_INCLUDED], [Define to 1 if Guile is available.])

# Check for the Beagle phylogenetic likelihood library.

AC_DEFUN([BEAGLE_NO],
 [
      AC_SUBST(BEAGLE_INCLUDED,[0])
      BEAGLE_INCLUDED=0
      with_beagle=no
 ])

AC_DEFUN([BEAGLE_YES],
 [    AC_SUBST(BEAGLE_INCLUDED,[1])
      BEAGLE_INCLUDED=1
      with_beagle=yes
      # CUDA will only work with i386 on OS X
      case `uname -a` in
      *Darwin*)
        BEAGLE_ARCH="-arch i386"
      esac
      AC_SUBST(BEAGLE_ARCH)
  ])

AC_ARG_WITH([beagle],
            [AS_HELP_STRING([--with-beagle],
              [enable support for Beagle library (phylogenetic likelihood computation on GPUs)])],
            [with_beagle=yes],
            [with_beagle=no])
          
if test "x$with_beagle" == "xno"
then
	BEAGLE_ARCH=""
	BEAGLE_CFLAGS=""
	BEAGLE_LIBS=""
	BEAGLE_INCLUDED=0
else
	PKG_CHECK_MODULES([BEAGLE], [hmsbeagle-1.0], [BEAGLE_YES], [BEAGLE_NO])
fi

AC_DEFINE_UNQUOTED([BEAGLE_INCLUDED], [$BEAGLE_INCLUDED], [Define to 1 if libhmsbeagle is available.])

# Check for HMMOC

AC_PATH_PROGS([HMMOC_EXEC],
	[hmmoc hmmoc/bin/hmmoc hmmoc-1.3/bin/hmmoc],
	 [no],
	  [$PATH$PATH_SEPARATOR/nfs$PATH_SEPARATOR/nfs/src$PATH_SEPARATOR/usr/local$PATH_SEPARATOR/opt/local$PATH_SEPARATOR/usr$PATH_SEPARATOR$HOME$PATH_SEPARATOR/opt/share$PATH_SEPARATOR/usr/share])

if test "x$HMMOC_EXEC" != "xno"
then
	HMMOC_BIN=`dirname $HMMOC_EXEC`
	HMMOC_ROOT=`dirname $HMMOC_BIN`
else
	HMMOC_ROOT="/usr/local/hmmoc"
fi
AC_DEFINE_UNQUOTED([HMMOC_ROOT_DIR],["$HMMOC_ROOT"],[Path to root directory of Gerton Lunter's hmmoc.])

# Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([float.h stdlib.h string.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_PID_T
AC_C_RESTRICT
AC_TYPE_SIZE_T
AC_STRUCT_TM
AC_CHECK_TYPES([ptrdiff_t])

# Checks for library functions.
AC_FUNC_FORK
AC_FUNC_LSTAT
AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
AC_FUNC_MALLOC
AC_FUNC_STRFTIME
AC_CHECK_FUNCS([dup2 floor memmove pow regcomp sqrt strchr strcspn strrchr strspn strstr])

# create the makefiles and other files
AC_CONFIG_FILES([Makefile
                 src/make.defs
                 src/make.common
                 src/Weighbor/Makefile
                 src/amap/Makefile
                 src/ecfg/Makefile
                 src/evoldoer/Makefile
                 src/guile/Makefile
                 src/handel/Makefile
                 src/hmm/Makefile
                 src/hsm/Makefile
                 src/indiegram/Makefile
                 src/irrev/Makefile
                 src/newmat/Makefile
                 src/psw/Makefile
                 src/randlib/Makefile
                 src/scfg/Makefile
                 src/seq/Makefile
                 src/stemloc/Makefile
                 src/telegraph/Makefile
                 src/tkf/Makefile
                 src/tree/Makefile
                 src/util/Makefile
		 src/util/unixenv.h])
AC_OUTPUT
