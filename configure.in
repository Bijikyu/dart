#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.61)
AC_INIT(FULL-PACKAGE-NAME, VERSION, BUG-REPORT-ADDRESS)
AC_CONFIG_HEADER([src/config.h])

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_LN_S

# Checks for libraries.

# Check for the guile Scheme interpreter/extension language library.
# If guile found, define shell variable $(GUILE_INCLUDED) to 1,
#  and expand @GUILE_CFLAGS@, @GUILE_LDFLAGS@ to appropriate values in Makefiles.
# If guile not found, define shell variable $(GUILE_INCLUDED) to 0,
#  and expand @GUILE_CFLAGS@, @GUILE_LDFLAGS@ to empty strings.
# The relevant macros are defined in acinclude.m4.

# Note: I used to check for guile using the following macro:
# PKG_CHECK_MODULES([GUILE], [guile-1.8])
# This didn't seem to work - perhaps because guile-1.8 doesn't seem to have a .pc pkg-config description file.
# Instead we now use guile-config, via the GUILE_FLAGS macro defined in acinclude.m4.

AC_ARG_WITH([guile],
            [AS_HELP_STRING([--without-guile],
              [disable support for guile Scheme interpreter])],
            [with_guile=no],
            [with_guile=yes])

GUILE_FLAGS
if test "x$with_guile" == "xno"
then
	GUILE_CFLAGS=""
	GUILE_LDFLAGS=""
	GUILE_INCLUDED=0
fi

# Check for the Beagle phylogenetic likelihood library.
# If guile found, define shell variable $(BEAGLE_INCLUDED) to 1,
#  and expand @BEAGLE_CFLAGS@, @BEAGLE_LDFLAGS@ to appropriate values in Makefiles.
# If guile not found, define shell variable $(BEAGLE_INCLUDED) to 0,
#  and expand @BEAGLE_CFLAGS@, @BEAGLE_LDFLAGS@ to empty strings.
# The relevant macros are defined in acinclude.m4.

AC_DEFUN([BEAGLE_NO],
 [    AC_SUBST(BEAGLE_INCLUDED,[0])  ])

AC_DEFUN([BEAGLE_YES],
 [    AC_SUBST(BEAGLE_INCLUDED,[1])
      BEAGLE_CFLAGS+=-DBEAGLE_INCLUDED
      # CUDA will only work with i386 on OS X
      case `uname -a` in
      *Darwin*)
        BEAGLE_CFLAGS+=" -arch i386"
        BEAGLE_LIBS+=" -arch i386"
      esac
  ])

AC_ARG_WITH([beagle],
            [AS_HELP_STRING([--without-beagle],
              [disable support for Beagle library (phylogenetic likelihood computation on GPUs)])],
            [with_beagle=no],
            [with_beagle=yes])
          
PKG_CHECK_MODULES([BEAGLE], [hmsbeagle-1.0], [BEAGLE_YES], [BEAGLE_NO])

if test "x$with_beagle" == "xno"
then
	BEAGLE_CFLAGS=""
	BEAGLE_LIBS=""
	BEAGLE_INCLUDED=0
fi


# Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([float.h stdlib.h string.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_PID_T
AC_C_RESTRICT
AC_TYPE_SIZE_T
AC_STRUCT_TM
AC_CHECK_TYPES([ptrdiff_t])

# Checks for library functions.
AC_FUNC_FORK
AC_FUNC_LSTAT
AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
AC_FUNC_MALLOC
AC_FUNC_STRFTIME
AC_CHECK_FUNCS([dup2 floor memmove pow regcomp sqrt strchr strcspn strrchr strspn strstr])

# create the makefiles
AC_CONFIG_FILES([Makefile
                 src/make.defs
                 src/make.common
                 src/Weighbor/Makefile
                 src/amap/Makefile
                 src/ecfg/Makefile
                 src/evoldoer/Makefile
                 src/handel/Makefile
                 src/hmm/Makefile
                 src/hsm/Makefile
                 src/indiegram/Makefile
                 src/irrev/Makefile
                 src/newmat/Makefile
                 src/psw/Makefile
                 src/randlib/Makefile
                 src/scfg/Makefile
                 src/seq/Makefile
                 src/stemloc/Makefile
                 src/telegraph/Makefile
                 src/tkf/Makefile
                 src/tree/Makefile
                 src/util/Makefile])
AC_OUTPUT
