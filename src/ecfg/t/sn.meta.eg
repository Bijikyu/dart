
 ;; Tolerances
 (initial-tol .06)
 (mutate-tol .06)
 (wait-tol .06)
 (param-tol .06)
 (n-align 10)
 (min-inc .001)
 (forgive 2)  ;; convergence of (k,~k) is very slow and initially goes in the wrong direction. also there is a blip where the EM likelihood dips. not sure why this is (precision? fudged M-step?) but setting "--forgive 2" gives it a fair chance. not very satisfactory... IH 4/30/2010
 (max-errs .25)  ;; OK, now failing n & s tolerance thresholds with quite a wide margin (tree2). Not sure what changed (g++ -> clang?). Not good, anyway. Decreasing min-inc to .0001 does not help: log-likelihood drops again at EM iteration #31 (as well as earlier blip at EM iteration #3). Need a proper M-step I think (i.e. use a real maximizer with Lagrange constraints, not just the "assume parameters can be set using probability-like formulae" currently in place). For now, bumping up max-errs to .25 should catch it, but this is clearly unsatisfactory, sadly. IH 1/2/2017

 ;; Probability and rate parameters

 (pgroup
  ((ext 0.999)
   (~ext 0.001))
  ((pa0 0.3)
   (pc0 0.2)
   (pg0 0.2)
   (pt0 0.3))
  ((pa1 0.4)
   (pc1 0.1)
   (pg1 0.1)
   (pt1 0.4))
  ((pa2 0.45)
   (pc2 0.05)
   (pg2 0.05)
   (pt2 0.45))
  ((k 0.1)   ;; transversion/transition ratio
   (~k 0.9))
  )

 (rate
  (s 200)  ;; synonymous substitution rate parameter
  (n 100)  ;; nonsynonymous substitution rate parameter
  )

 ;; Defaults for seeding training
 (seed
   (ext .5)
   (~ext .5)
   (pa0 0.25)
   (pc0 0.25)
   (pg0 0.25)
   (pt0 0.25)
   (pa1 0.25)
   (pc1 0.25)
   (pg1 0.25)
   (pt1 0.25)
   (pa2 0.25)
   (pc2 0.25)
   (pg2 0.25)
   (pt2 0.25)
   (k 0.5)
   (~k 0.5)
   (s 1)
   (n 1)
   )
