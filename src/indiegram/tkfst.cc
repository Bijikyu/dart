#include "hsm/em_matrix.h"
#include "indiegram/tripletscfg.h"
#include "indiegram/tkfst.h"

// constructor
TKFST_loop_matrix::TKFST_loop_matrix()
: EM_matrix (1, SCFG_alphabet_size)
{

  // Loop matrix
  // matches grammars/pfold.eg
  sstring bkloop;
  bkloop << "1 4\n";
  bkloop << "A C G U\n";
  bkloop << "0.364097 0.151009 0.211881 0.273013\n";
  bkloop << " -0.684  0.099  0.322  0.263\n";
  bkloop << " 0.239 -1.408  0.242  0.927\n";
  bkloop << " 0.553  0.173 -1.122  0.239\n";
  bkloop << " 0.351  0.513  0.307 -1.171\n";
  bkloop << "0\n0\n0\n0\n";

  istringstream bkloop_in (bkloop);
  read (bkloop_in);

  diagonalize();


}

void TKFST_loop_matrix::show (ostream& o) const
{

  // equil. dist.
  o << "pi (equil. dist.)\n";
  for_const_contents (vector<double>, (*this).pi, p)
    o << (*p) << " ";
  o << "\n\n";

  // rate matrix
  o << "X (rate matrix)\n";
  (*this).X[0].write_rowcol (o); // 0 index b/c only a single class (see hsm/em_matrix_base.h)
  o << "\n\n";

  // mu (e-vals)
  o << "mu (e-vals)\n";
  for_const_contents (vector<Complex>, (*this).mu, p)
    o << (*p) << " ";
  o << "\n\n";

  // U (right e-vects)
  o << "U (right e-vects)\n";
  (*this).U.write_rowcol (o);
  o << "\n\n";

  // Uinv (left e-vects)
  o << "Uinv (left e-vects)\n";
  (*this).Uinv.write_rowcol (o);
  o << "\n\n";

}

// constructor
TKFST_stem_matrix::TKFST_stem_matrix()
: EM_matrix (1, SCFG_alphabet_size*SCFG_alphabet_size)
{

  // matches grammars/pfold.eg
  sstring bkstem;
  bkstem << "1 16\n"
	 << "a c g u A C G U b d h v B D H V\n"
	 << "0.001167 0.001806 0.001058 0.177977 0.001806 0.000391 0.266974 0.000763 0.001058 0.266974 0.000406 0.049043 0.177977 0.000763 0.049043 0.002793\n"
	 << "-3.606 0.42 0.589 0.617 0.42 0 0.132 0.019 0.589 0.132 0 0.026 0.617 0.019 0.026 0\n"
	 << "0.271 -6.069 0.068 2.861 0.024 0.079 0.008 0.01 0.003 2.135 0 0.401 0.124 0.008 0.057 0.02\n"
	 << "0.65 0.116 -2.49 0.257 0.006 0 0.734 0 0.097 0.06 0 0.024 0.29 0.019 0.237 0\n"
	 << "0.004 0.029 0.002 -1.165 0.001 0.002 0.115 0.007 0.002 0.501 0.001 0.274 0.185 0.003 0.023 0.016\n"
	 << "0.271 0.024 0.003 0.124 -6.069 0.079 2.135 0.008 0.068 0.008 0 0.057 2.861 0.01 0.401 0.02\n"
	 << "0 0.365 0 0.799 0.365 -5.665 0.992 0.204 0 0.992 0 0.191 0.799 0.204 0.191 0.563\n"
	 << "0.001 0 0.003 0.077 0.014 0.001 -0.823 0.004 0 0.13 0.004 0.019 0.334 0.001 0.232 0.003\n"
	 << "0.029 0.024 0 1.551 0.018 0.105 1.265 -6.125 0.026 0.473 0 0.324 0.688 1.105 0.044 0.473\n"
	 << "0.65 0.006 0.097 0.29 0.116 0 0.06 0.019 -2.49 0.734 0 0.237 0.257 0 0.024 0\n"
	 << "0.001 0.014 0 0.334 0 0.001 0.13 0.001 0.003 -0.823 0.004 0.232 0.077 0.004 0.019 0.003\n"
	 << "0 0 0 0.252 0 0 2.511 0 0 2.511 -6.933 0.631 0.252 0 0.631 0.145\n"
	 << "0.001 0.015 0.001 0.996 0.002 0.002 0.101 0.005 0.005 1.262 0.005 -2.555 0.084 0.001 0.037 0.038\n"
	 << "0.004 0.001 0.002 0.185 0.029 0.002 0.501 0.003 0.002 0.115 0.001 0.023 -1.165 0.007 0.274 0.016\n"
	 << "0.029 0.018 0.026 0.688 0.024 0.105 0.473 1.105 0 1.265 0 0.044 1.551 -6.125 0.324 0.473\n"
	 << "0.001 0.002 0.005 0.084 0.015 0.002 1.262 0.001 0.001 0.101 0.005 0.037 0.996 0.005 -2.555 0.038\n"
	 << "0 0.013 0 0.988 0.013 0.079 0.287 0.129 0 0.287 0.021 0.663 0.988 0.129 0.663 -4.26\n"
	 << "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n";

//  bkstem << "1 16\n";
//  bkstem << "a c g u A C G U b d h v B D H V\n";  // this line changed from the autogenerated perl
//  bkstem << "0.001167 0.001806 0.001058 0.177977 0.001806 0.000391 0.266974 0.000763 0.001058 0.266974 0.000406 0.049043 0.177977 0.000763 0.049043 0.002793\n";
//  bkstem << "-3.607 0.420 0.589 0.617 0.420 0.000 0.132 0.019 0.589 0.132 -0.000 0.026 0.617 0.019 0.026 0.000\n";
//  bkstem << "0.271 -6.070 0.068 2.861 0.024 0.079 0.008 0.010 0.003 2.135 0.000 0.401 0.124 0.008 0.057 0.020\n";
//  bkstem << "0.650 0.116 -2.489 0.257 0.006 -0.000 0.734 -0.000 0.097 0.060 -0.000 0.024 0.290 0.019 0.237 -0.000\n";
//  bkstem << "0.004 0.029 0.002 -1.163 0.001 0.002 0.115 0.007 0.002 0.501 0.001 0.274 0.185 0.003 0.023 0.016\n";
//  bkstem << "0.271 0.024 0.003 0.124 -6.070 0.079 2.135 0.008 0.068 0.008 0.000 0.057 2.861 0.010 0.401 0.020\n";
//  bkstem << "0.000 0.365 -0.000 0.799 0.365 -5.666 0.992 0.204 -0.000 0.992 0.000 0.191 0.799 0.204 0.191 0.563\n";
//  bkstem << "0.001 0.000 0.003 0.077 0.014 0.001 -0.823 0.004 0.000 0.130 0.004 0.019 0.334 0.001 0.232 0.003\n";
//  bkstem << "0.029 0.024 0.000 1.551 0.018 0.105 1.265 -6.126 0.026 0.473 0.000 0.324 0.688 1.105 0.044 0.473\n";
//  bkstem << "0.650 0.006 0.097 0.290 0.116 -0.000 0.060 0.019 -2.489 0.734 0.000 0.237 0.257 0.000 0.024 -0.000\n";
//  bkstem << "0.001 0.014 0.000 0.334 0.000 0.001 0.130 0.001 0.003 -0.823 0.004 0.232 0.077 0.004 0.019 0.003\n";
//  bkstem << "-0.000 -0.000 -0.000 0.252 0.000 -0.000 2.511 -0.000 0.000 2.511 -6.933 0.631 0.252 -0.000 0.631 0.145\n";
//  bkstem << "0.001 0.015 0.001 0.996 0.002 0.002 0.101 0.005 0.005 1.262 0.005 -2.554 0.084 0.001 0.037 0.038\n";
//  bkstem << "0.004 0.001 0.002 0.185 0.029 0.002 0.501 0.003 0.002 0.115 0.001 0.023 -1.163 0.007 0.274 0.016\n";
//  bkstem << "0.029 0.018 0.026 0.688 0.024 0.105 0.473 1.105 -0.000 1.265 0.000 0.044 1.551 -6.126 0.324 0.473\n";
//  bkstem << "0.001 0.002 0.005 0.084 0.015 0.002 1.262 0.001 0.001 0.101 0.005 0.037 0.996 0.005 -2.554 0.038\n";
//  bkstem << "0.000 0.013 -0.000 0.988 0.013 0.079 0.287 0.129 -0.000 0.287 0.021 0.663 0.988 0.129 0.663 -4.261\n";
//  bkstem << "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n";
// -- the above (copied from tkfstructuretree.cc) commented out by RKB 3/08/09

  istringstream bkstem_in (bkstem);
  read (bkstem_in);

  diagonalize();

}



void TKFST_stem_matrix::show (ostream& o) const
{

  // equil. dist.
  o << "pi (equil. dist.)\n";
  for_const_contents (vector<double>, (*this).pi, p)
    o << (*p) << " ";

  // rate matrix
  o << "\nX (rate matrix)\n";
  int i = 0;
  for_const_contents (array2d<double>, (*this).X[0], p) // 0 index b/c only a single class (see hsm/em_matrix_base.h)
    {
      o << (*p) << " ";
      if (++i % (*this).X[0].xsize() == 0) { o << "\n"; }
    }

  // mu (e-vals)
  o << "mu (e-vals)\n";
  for_const_contents (vector<Complex>, (*this).mu, p)
    o << (*p) << " ";

  // U (right e-vects)
  o << "U (right e-vects)\n";
  i = 0;
  for_const_contents (array2d<Complex>, (*this).U, p)
    {
      o << (*p) << " ";
      if (++i % (*this).U.xsize() == 0) { o << "\n"; }
    }

  // Uinv (left e-vects)
  o << "Uinv (left e-vects)\n";
  i = 0;
  for_const_contents (array2d<Complex>, (*this).Uinv, p)
    {
      o << (*p) << " ";
      if (++i % (*this).Uinv.xsize() == 0) { o << "\n"; }
    }

}


// constructor
TKFST_Params::TKFST_Params()
  : lambda_1 (this->birth_rate_loop), mu_1 (this->death_rate_loop),
    lambda_2 (this->birth_rate_stem), mu_2 (this->death_rate_stem),
    loop_matrix (), stem_matrix ()
{
  init_params();
}

vector<Prob> TKFST_Params::loop_equil_dist()
{
  return loop_matrix.create_prior();
}

array2d<Prob> TKFST_Params::loop_conditional_subst_mat (double t)
{
  return loop_matrix.create_conditional_substitution_matrix (t);
}

vector<Prob> TKFST_Params::stem_equil_dist()
{
  return stem_matrix.create_prior();
}

array2d<Prob> TKFST_Params::stem_conditional_subst_mat (double t)
{
  return stem_matrix.create_conditional_substitution_matrix (t);
}


void TKFST_Params::init_params()
{

  // stem & loop indel params
  birth_rate_loop = 0.025;
  death_rate_loop = 0.03;

  birth_rate_stem = 0.007;
  death_rate_stem = 0.01;

  stem_prob = 0.1;

  // these are slightly different from the evoldoer ones in tkfstructuretree.cc
  // to duplicate those, use
  //  birth_rate_loop = 0.027;
  //  stem_prob = 0.01;

  // to do (eventually): write code to allow for specification 
  // of parameters and rate matrices through the .eg file format
  // Currently they're hardcoded in as a stop-gap measure.
  //
  //  Files (reading S-expressions):
  //    dart/src/util/sexpr.{h,cc}
  //    dart/src/ecfg/ecfgsexpr.{h,cc}
  //    dart/src/handel/handalign.cc
  //    dart/src/handel/t/jc.hsm
  //    dart/src/handel/t/prot.hsm
  //
  //    Methods:
  //     (in ecfgsexpr.h)
  //    ECFG_builder::init_chain_and_alphabet(...)   [subset of xrate format]
  //    ECFG_builder::load_xgram_alphabet_and_grammars(...) [full xrate format]
  //
  //    For reading rate matrices:
  //     dart/src/tree/substitution_matrix_factory.h (base class, has the API that you need for common operations like matrix exponentiation)
  //     dart/src/tree/irrev_diag_matrix_factory.h (subclass)
  //     dart/src/hsm/em_matrix_base.h (sub-subclass)
  //

  // This should probably be modeled after EM_matrix_base (hsm/em_matrix_base.h)
  // and EM_matrix.

  // Irrev_diagonlised_matrix_factory provides a concrete implementation
  // of create_conditional_substitution_matrix(), although I need to know
  // the evecs and evals of the rate matrix, which requires diagonalization.

  // See EM_matrix::diagonalize():
  // It uses newmat's stuff to diagonalize the matrix and thereby
  // fill the evects and evals (mu, U, Uinv) stored in Irrev_diagonalised_matrix_factory.
  // After storing these, we can call Irrev_diagonalised_matrix_factory::create_conditional_substitution_matrix()
  // to get the substitution matrices which we need.

  /*
   * 1 chain file specifying the loop and stem rate matrices and 
   * corresponding equil. dist. 
   * Create temporary EM_matrix, etc. to diagonalize, etc.as appropriate.
   */

}

void TKFST_Params::dump_params (ostream& o) const
{
  o << "\nTKFST params:\n";

  o << "loop_matrix:\n";
  loop_matrix.show (o);

  o << "\nstem_matrix:\n";
  stem_matrix.show (o);

  o << "\nlambda_1 (birth_rate_loop): " << lambda_1 << "\n";
  o << "mu_1 (death_rate_loop): " << mu_1 << "\n";
  o << "lambda_2 (birth_rate_stem): " << lambda_2 << "\n";
  o << "mu_2 (death_rate_stem): " << mu_2 << "\n";
  o << "\n";
  
}

// constructor
TKFST_Triplet_Probs::TKFST_Triplet_Probs (double t, double u, double v)
  : TKFST_Params(),
    depth_x (t), depth_y (u), depth_z (v),
    t (depth_x), u (depth_y), v (depth_z),
    _emit_loop (loop_equil_dist()), _emit_stem (stem_equil_dist()),
    _match_loop_x (loop_conditional_subst_mat (t)), _match_stem_x (stem_conditional_subst_mat (t)),
    _match_loop_y (loop_conditional_subst_mat (u)), _match_stem_y (stem_conditional_subst_mat (u)),
    _match_loop_z (loop_conditional_subst_mat (v)), _match_stem_z (stem_conditional_subst_mat (v))
{

  // log params
  if (CTAGGING (3, INDIEGRAM))
    {
      CL << "\nTKFST parameters and associated probabilities:\n";
      
      dump_params (CL);
      dump_trans_probs (CL);
      dump_emit_probs (CL);
    }

}

void TKFST_Triplet_Probs::dump_trans_probs (ostream& o) const
{
  o << "\nTKFST transition probability factors:\n";

  // branch lengths
  o << "depth_x (t) = " << t << "\n";
  o << "depth_y (u) = " << u << "\n";
  o << "depth_z (v) = " << v << "\n";
  o << "\n";  
      
  // corresponding (indel) probs
  o << "K1 = " << K1() << "\n";
  o << "K2 = " << K2() << "\n";
      
  o << "a1 (t) = " << a1 (t) << "\n";
  o << "b1 (t) = " << b1 (t) << "\n";
  o << "g1 (t) = " << g1 (t) << "\n";
  o << "a2 (t) = " << a2 (t) << "\n";
  o << "b2 (t) = " << b2 (t) << "\n";
  o << "g2 (t) = " << g2 (t) << "\n";

  o << "a1 (u) = " << a1 (u) << "\n";
  o << "b1 (u) = " << b1 (u) << "\n";
  o << "g1 (u) = " << g1 (u) << "\n";
  o << "a2 (u) = " << a2 (u) << "\n";
  o << "b2 (u) = " << b2 (u) << "\n";
  o << "g2 (u) = " << g2 (u) << "\n";

  o << "a1 (v) = " << a1 (v) << "\n";
  o << "b1 (v) = " << b1 (v) << "\n";
  o << "g1 (v) = " << g1 (v) << "\n";
  o << "a2 (v) = " << a2 (v) << "\n";
  o << "b2 (v) = " << b2 (v) << "\n";
  o << "g2 (v) = " << g2 (v) << "\n";

}

void TKFST_Triplet_Probs::dump_emit_probs (ostream& o) const
{
  o << "\nTKFST emission and match probability matrices:\n";

  // p1
  o << "p1 (xl)\n";
  for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
    o << p1(xl) << " ";
  o << "\n\n";

  // m1_x
  o << "m1_x (wl, xl)\n";
  o << "(wl)\n";
  int i = 0;
  for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
    {
      o << wl << "   ";
      for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
	{
	  o << m1_x (wl, xl) << " ";
	  if (++i % SCFG_alphabet_size == 0) { o << "\n"; }
	}
    }
  o << "\n";
  // m1_y
  o << "m1_y (wl, yl)\n";
  o << "(wl)\n";
  i = 0;
  for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
    {
      o << wl << "   ";
      for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
	{
	  o << m1_y (wl, yl) << " ";
	  if (++i % SCFG_alphabet_size == 0) { o << "\n"; }
	}
    }
  o << "\n";


  // m1_z
  o << "m1_z (wl, zl)\n";
  o << "(wl)\n";
  i = 0;
  for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
    {
      o << wl << "   ";
      for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
	{
	  o << m1_z (wl, zl) << " ";
	  if (++i % SCFG_alphabet_size == 0) { o << "\n"; }
	}
    }
  o << "\n";

  // p2
  o << "p2 (xlr)\n";
  for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
    for (int xr = 0; xr < SCFG_alphabet_size; ++xr)
      o << p2 (SCFG_state_typing::emit_idx (SCFG_state_typing::EmitXLR, xl, xr, 0, 0, 0, 0)) << " ";
  o << "\n\n";

  // m2_x
  o << "m2_x (wlr, xlr)\n";
  o << "(wl wr)\n";
  i = 0;
  for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
    for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
      {
	int wlr = SCFG_state_typing::emit_idx (SCFG_state_typing::EmitXLR, wl, wr, 0, 0, 0, 0);
	o << wl << wr << "    ";
	for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
	  for (int xr = 0; xr < SCFG_alphabet_size; ++xr)
	    {
	      int xlr = SCFG_state_typing::emit_idx (SCFG_state_typing::EmitXLR, xl, xr, 0, 0, 0, 0);
	      o << m2_x (wlr, xlr) << " ";
	      if (++i % (SCFG_alphabet_size*SCFG_alphabet_size) == 0) { o << "\n"; }
	    }
      }
  o << "\n";

  // m2_y
  o << "m2_y (wlr, ylr)\n";
  o << "(wl wr)\n";
  i = 0;
  for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
    for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
      {
	int wlr = SCFG_state_typing::emit_idx (SCFG_state_typing::EmitXLR, wl, wr, 0, 0, 0, 0);
	o << wl << wr << "    ";
	for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
	  for (int yr = 0; yr < SCFG_alphabet_size; ++yr)
	    {
	      int ylr = SCFG_state_typing::emit_idx (SCFG_state_typing::EmitYLR, 0, 0, yl, yr, 0, 0);
	      o << m2_y (wlr, ylr) << " ";
	      if (++i % (SCFG_alphabet_size*SCFG_alphabet_size) == 0) { o << "\n"; }
	    }
      }
  o << "\n";

  // m2_z
  o << "m2_z (wlr, zlr)\n";
  o << "(wl wr)\n";
  i = 0;
  for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
    for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
      {
	int wlr = SCFG_state_typing::emit_idx (SCFG_state_typing::EmitXLR, wl, wr, 0, 0, 0, 0);
	o << wl << wr << "    ";
	for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
	  for (int zr = 0; zr < SCFG_alphabet_size; ++zr)
	    {
	      int zlr = SCFG_state_typing::emit_idx (SCFG_state_typing::EmitZLR, 0, 0, 0, 0, zl, zr);
	      o << m2_z (wlr, zlr) << " ";
	      if (++i % (SCFG_alphabet_size*SCFG_alphabet_size) == 0) { o << "\n"; }
	    }
      }
  o << "\n";

}


// constructor
TKFST_Triplet_SCFG::TKFST_Triplet_SCFG (const double t, const double u, const double v)
  : Triplet_SCFG (num_states),
    TKFST_Triplet_Probs (t, u, v)
{
  CTAG(7,TKFST) << "Initializing TKFST model.\n";

  init_null_states();
  init_emit_unpaired_states();
  init_emit_paired_states();
  init_bifurc_states();
  init_transition_scores();
  init_direct_transition_scores();
  init_ancestral_state_types();
}

void TKFST_Triplet_SCFG::init_null_states()
{
  CTAG (4, INDIEGRAM) << "Initializing Null states.\n";


  /*
   * state initialization: Null states
   */
  // state initialization: Null
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IL_DL_DL_DL, Null);
  init_emit (IL_DL_DL_L, Null);
  init_emit (IL_DL_DL_e, Null);
  init_emit (IL_DL_L_WL, Null);
  init_emit (IL_DL_L_e, Null);
  init_emit (IL_DL_ML_L, Null);
  init_emit (IL_DL_e_DL, Null);
  init_emit (IL_DL_e_L, Null);
  init_emit (IL_DL_e_e, Null);
  init_emit (IL_L_WL_WL, Null);
  init_emit (IL_L_WL_e, Null);
  init_emit (IL_L_e_WL, Null);
  init_emit (IL_L_e_e, Null);
  init_emit (IL_ML_DL_L, Null);
  init_emit (IL_ML_L_WL, Null);
  init_emit (IL_ML_L_e, Null);
  init_emit (IL_ML_ML_L, Null);
  init_emit (IL_ML_e_L, Null);
  init_emit (IL_e_DL_DL, Null);
  init_emit (IL_e_DL_L, Null);
  init_emit (IL_e_DL_e, Null);
  init_emit (IL_e_L_WL, Null);
  init_emit (IL_e_L_e, Null);
  init_emit (IL_e_ML_L, Null);
  init_emit (IL_e_e_DL, Null);
  init_emit (IL_e_e_L, Null);
  init_emit (IL_e_e_e, Null);
  init_emit (IS_DS_DS_DS, Null);
  init_emit (IS_DS_DS_e, Null);
  init_emit (IS_DS_e_DS, Null);
  init_emit (IS_DS_e_e, Null);
  init_emit (IS_e_DS_DS, Null);
  init_emit (IS_e_DS_e, Null);
  init_emit (IS_e_e_DS, Null);
  init_emit (IS_e_e_e, Null);
  init_emit (L_L_L_L, Null);
  init_emit (L_L_L_WL, Null);
  init_emit (L_L_L_e, Null);
  init_emit (L_L_WL_WL, Null);
  init_emit (L_L_WL_e, Null);
  init_emit (L_L_e_L, Null);
  init_emit (L_L_e_WL, Null);
  init_emit (L_L_e_e, Null);
  init_emit (L_e_L_L, Null);
  init_emit (L_e_L_WL, Null);
  init_emit (L_e_L_e, Null);
  init_emit (L_e_e_L, Null);
  init_emit (L_e_e_e, Null);
  init_emit (S_S_S_S, Null);
  init_emit (S_S_S_e, Null);
  init_emit (S_S_e_S, Null);
  init_emit (S_S_e_e, Null);
  init_emit (S_e_S_S, Null);
  init_emit (S_e_S_e, Null);
  init_emit (S_e_e_S, Null);
  init_emit (S_e_e_e, Null);
  init_emit (e_Li_e_e, Null);
  init_emit (e_Si_e_e, Null);
  init_emit (e_e_Li_e, Null);
  init_emit (e_e_Si_e, Null);
  init_emit (e_e_e_Li, Null);
  init_emit (e_e_e_Si, Null);

}

void TKFST_Triplet_SCFG::init_emit_unpaired_states()
{
  CTAG (4, INDIEGRAM) << "Initializing unpaired Emit states.\n";

  /*
   * state initialization: unpaired Emit states
   */
  // state initialization: EmitXL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IL_IL_WL_WL, EmitXL);
  init_emit (IL_IL_WL_e, EmitXL);
  init_emit (IL_IL_e_WL, EmitXL);
  init_emit (IL_IL_e_e, EmitXL);
  init_emit (IL_ML_DL_DL, EmitXL);
  init_emit (IL_ML_DL_e, EmitXL);
  init_emit (IL_ML_e_DL, EmitXL);
  init_emit (IL_ML_e_e, EmitXL);
  init_emit (L_IL_WL_WL, EmitXL);
  init_emit (L_IL_WL_e, EmitXL);
  init_emit (L_IL_e_WL, EmitXL);
  init_emit (L_IL_e_e, EmitXL);
  init_emit (e_ILi_e_e, EmitXL);

  // emissions: EmitXL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
    {
      int emit_idx = (*this).emit_idx (EmitXL, xl, 0, 0, 0, 0, 0);
      Prob pr;
      emit[IL_IL_WL_WL][emit_idx] = Prob2Score (p1(xl));
      emit[IL_IL_WL_e][emit_idx] = Prob2Score (p1(xl));
      emit[IL_IL_e_WL][emit_idx] = Prob2Score (p1(xl));
      emit[IL_IL_e_e][emit_idx] = Prob2Score (p1(xl));
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_x(wl,xl);
      emit[IL_ML_DL_DL][emit_idx] = Prob2Score (pr);
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_x(wl,xl);
      emit[IL_ML_DL_e][emit_idx] = Prob2Score (pr);
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_x(wl,xl);
      emit[IL_ML_e_DL][emit_idx] = Prob2Score (pr);
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_x(wl,xl);
      emit[IL_ML_e_e][emit_idx] = Prob2Score (pr);
      emit[L_IL_WL_WL][emit_idx] = Prob2Score (p1(xl));
#ifdef DART_DEBUG
      CL << "emit[L_IL_WL_WL][" << SCFG_alphabet.int2char (xl) << "] = " << Prob2Score (p1(xl)) << endl;
#endif /* DART_DEBUG */
      emit[L_IL_WL_e][emit_idx] = Prob2Score (p1(xl));
      emit[L_IL_e_WL][emit_idx] = Prob2Score (p1(xl));
      emit[L_IL_e_e][emit_idx] = Prob2Score (p1(xl));
      emit[e_ILi_e_e][emit_idx] = Prob2Score (p1(xl));
    }

  // state initialization: EmitXLYL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IL_ML_ML_DL, EmitXLYL);
  init_emit (IL_ML_ML_e, EmitXLYL);

  // emissions: EmitXLYL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
    for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
      {
	int emit_idx = (*this).emit_idx (EmitXLYL, xl, 0, yl, 0, 0, 0);
	Prob pr;
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  pr += p1(wl) * m1_x(wl,xl) * m1_y(wl,yl);
	emit[IL_ML_ML_DL][emit_idx] = Prob2Score (pr);
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  pr += p1(wl) * m1_x(wl,xl) * m1_y(wl,yl);
	emit[IL_ML_ML_e][emit_idx] = Prob2Score (pr);
      }

  // state initialization: EmitXLYLZL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IL_ML_ML_ML, EmitXLYLZL);

  // emissions: EmitXLYLZL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
    for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
      for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
	{
	  int emit_idx = (*this).emit_idx (EmitXLYLZL, xl, 0, yl, 0, zl, 0);
	  Prob pr;
	  pr = 0;
	  for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	    pr += p1(wl) * m1_x(wl,xl) * m1_y(wl,yl) * m1_z(wl,zl);
	  emit[IL_ML_ML_ML][emit_idx] = Prob2Score (pr);
#ifdef DART_DEBUG
	  CL << "emit[IL_ML_ML_ML][" << SCFG_alphabet.int2char (xl) << "," << SCFG_alphabet.int2char (yl) << "," << SCFG_alphabet.int2char (zl) << "] = " << Prob2Score (pr) << endl;
#endif /* DART_DEBUG */
	}

  // state initialization: EmitXLZL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IL_ML_DL_ML, EmitXLZL);
  init_emit (IL_ML_e_ML, EmitXLZL);

  // emissions: EmitXLZL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
    for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
      {
	int emit_idx = (*this).emit_idx (EmitXLZL, xl, 0, 0, 0, zl, 0);
	Prob pr;
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  pr += p1(wl) * m1_x(wl,xl) * m1_z(wl,zl);
	emit[IL_ML_DL_ML][emit_idx] = Prob2Score (pr);
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  pr += p1(wl) * m1_x(wl,xl) * m1_z(wl,zl);
	emit[IL_ML_e_ML][emit_idx] = Prob2Score (pr);
      }

  // state initialization: EmitYL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IL_DL_IL_WL, EmitYL);
  init_emit (IL_DL_IL_e, EmitYL);
  init_emit (IL_DL_ML_DL, EmitYL);
  init_emit (IL_DL_ML_e, EmitYL);
  init_emit (IL_ML_IL_WL, EmitYL);
  init_emit (IL_ML_IL_e, EmitYL);
  init_emit (IL_e_IL_WL, EmitYL);
  init_emit (IL_e_IL_e, EmitYL);
  init_emit (IL_e_ML_DL, EmitYL);
  init_emit (IL_e_ML_e, EmitYL);
  init_emit (L_L_IL_WL, EmitYL);
  init_emit (L_L_IL_e, EmitYL);
  init_emit (L_e_IL_WL, EmitYL);
  init_emit (L_e_IL_e, EmitYL);
  init_emit (e_e_ILi_e, EmitYL);

  // emissions: EmitYL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
    {
      int emit_idx = (*this).emit_idx (EmitYL, 0, 0, yl, 0, 0, 0);
      Prob pr;
      emit[IL_DL_IL_WL][emit_idx] = Prob2Score (p1(yl));
      emit[IL_DL_IL_e][emit_idx] = Prob2Score (p1(yl));
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_y(wl,yl);
      emit[IL_DL_ML_DL][emit_idx] = Prob2Score (pr);
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_y(wl,yl);
      emit[IL_DL_ML_e][emit_idx] = Prob2Score (pr);
      emit[IL_ML_IL_WL][emit_idx] = Prob2Score (p1(yl));
      emit[IL_ML_IL_e][emit_idx] = Prob2Score (p1(yl));
      emit[IL_e_IL_WL][emit_idx] = Prob2Score (p1(yl));
      emit[IL_e_IL_e][emit_idx] = Prob2Score (p1(yl));
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_y(wl,yl);
      emit[IL_e_ML_DL][emit_idx] = Prob2Score (pr);
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_y(wl,yl);
      emit[IL_e_ML_e][emit_idx] = Prob2Score (pr);
      emit[L_L_IL_WL][emit_idx] = Prob2Score (p1(yl));
      emit[L_L_IL_e][emit_idx] = Prob2Score (p1(yl));
      emit[L_e_IL_WL][emit_idx] = Prob2Score (p1(yl));
      emit[L_e_IL_e][emit_idx] = Prob2Score (p1(yl));
      emit[e_e_ILi_e][emit_idx] = Prob2Score (p1(yl));
    }

  // state initialization: EmitYLZL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IL_DL_ML_ML, EmitYLZL);
  init_emit (IL_e_ML_ML, EmitYLZL);

  // emissions: EmitYLZL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
    for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
      {
	int emit_idx = (*this).emit_idx (EmitYLZL, 0, 0, yl, 0, zl, 0);
	Prob pr;
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  pr += p1(wl) * m1_y(wl,yl) * m1_z(wl,zl);
	emit[IL_DL_ML_ML][emit_idx] = Prob2Score (pr);
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  pr += p1(wl) * m1_y(wl,yl) * m1_z(wl,zl);
	emit[IL_e_ML_ML][emit_idx] = Prob2Score (pr);
      }

  // state initialization: EmitZL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IL_DL_DL_IL, EmitZL);
  init_emit (IL_DL_DL_ML, EmitZL);
  init_emit (IL_DL_ML_IL, EmitZL);
  init_emit (IL_DL_e_IL, EmitZL);
  init_emit (IL_DL_e_ML, EmitZL);
  init_emit (IL_ML_DL_IL, EmitZL);
  init_emit (IL_ML_ML_IL, EmitZL);
  init_emit (IL_ML_e_IL, EmitZL);
  init_emit (IL_e_DL_IL, EmitZL);
  init_emit (IL_e_DL_ML, EmitZL);
  init_emit (IL_e_ML_IL, EmitZL);
  init_emit (IL_e_e_IL, EmitZL);
  init_emit (IL_e_e_ML, EmitZL);
  init_emit (L_L_L_IL, EmitZL);
  init_emit (L_L_e_IL, EmitZL);
  init_emit (L_e_L_IL, EmitZL);
  init_emit (L_e_e_IL, EmitZL);
  init_emit (e_e_e_ILi, EmitZL);

  // emissions: EmitZL
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
    {
      int emit_idx = (*this).emit_idx (EmitZL, 0, 0, 0, 0, zl, 0);
      Prob pr;
      emit[IL_DL_DL_IL][emit_idx] = Prob2Score (p1(zl));
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_z(wl,zl);
      emit[IL_DL_DL_ML][emit_idx] = Prob2Score (pr);
      emit[IL_DL_ML_IL][emit_idx] = Prob2Score (p1(zl));
      emit[IL_DL_e_IL][emit_idx] = Prob2Score (p1(zl));
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_z(wl,zl);
      emit[IL_DL_e_ML][emit_idx] = Prob2Score (pr);
      emit[IL_ML_DL_IL][emit_idx] = Prob2Score (p1(zl));
      emit[IL_ML_ML_IL][emit_idx] = Prob2Score (p1(zl));
      emit[IL_ML_e_IL][emit_idx] = Prob2Score (p1(zl));
      emit[IL_e_DL_IL][emit_idx] = Prob2Score (p1(zl));
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_z(wl,zl);
      emit[IL_e_DL_ML][emit_idx] = Prob2Score (pr);
      emit[IL_e_ML_IL][emit_idx] = Prob2Score (p1(zl));
      emit[IL_e_e_IL][emit_idx] = Prob2Score (p1(zl));
      pr = 0;
      for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	pr += p1(wl) * m1_z(wl,zl);
      emit[IL_e_e_ML][emit_idx] = Prob2Score (pr);
      emit[L_L_L_IL][emit_idx] = Prob2Score (p1(zl));
      emit[L_L_e_IL][emit_idx] = Prob2Score (p1(zl));
      emit[L_e_L_IL][emit_idx] = Prob2Score (p1(zl));
      emit[L_e_e_IL][emit_idx] = Prob2Score (p1(zl));
      emit[e_e_e_ILi][emit_idx] = Prob2Score (p1(zl));
    }

}

void TKFST_Triplet_SCFG::init_emit_paired_states()
{
  CTAG (4, INDIEGRAM) << "Initializing paired Emit states.\n";

  /*
   * state initialization: paired Emit states
   */
  // state initialization: EmitXLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IS_IS_WS_WS, EmitXLR);
  init_emit (IS_IS_WS_e, EmitXLR);
  init_emit (IS_IS_e_WS, EmitXLR);
  init_emit (IS_IS_e_e, EmitXLR);
  init_emit (IS_MS_DS_DS, EmitXLR);
  init_emit (IS_MS_DS_e, EmitXLR);
  init_emit (IS_MS_e_DS, EmitXLR);
  init_emit (IS_MS_e_e, EmitXLR);
  init_emit (S_IS_WS_WS, EmitXLR);
  init_emit (S_IS_WS_e, EmitXLR);
  init_emit (S_IS_e_WS, EmitXLR);
  init_emit (S_IS_e_e, EmitXLR);
  init_emit (e_ISi_e_e, EmitXLR);

  // emissions: EmitXLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
    for (int xr = 0; xr < SCFG_alphabet_size; ++xr)
      {
	int emit_idx = (*this).emit_idx (EmitXLR, xl, xr, 0, 0, 0, 0);
	Prob pr;
	int xlr = (*this).emit_idx (EmitXLR, xl, xr, 0, 0, 0, 0);
	emit[IS_IS_WS_WS][emit_idx] = Prob2Score (p2(xlr));
	emit[IS_IS_WS_e][emit_idx] = Prob2Score (p2(xlr));
	emit[IS_IS_e_WS][emit_idx] = Prob2Score (p2(xlr));
	emit[IS_IS_e_e][emit_idx] = Prob2Score (p2(xlr));
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_x(wlr,xlr);
	    }
	emit[IS_MS_DS_DS][emit_idx] = Prob2Score (pr);
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_x(wlr,xlr);
	    }
	emit[IS_MS_DS_e][emit_idx] = Prob2Score (pr);
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_x(wlr,xlr);
	    }
	emit[IS_MS_e_DS][emit_idx] = Prob2Score (pr);
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_x(wlr,xlr);
	    }
	emit[IS_MS_e_e][emit_idx] = Prob2Score (pr);
	emit[S_IS_WS_WS][emit_idx] = Prob2Score (p2(xlr));
	emit[S_IS_WS_e][emit_idx] = Prob2Score (p2(xlr));
	emit[S_IS_e_WS][emit_idx] = Prob2Score (p2(xlr));
	emit[S_IS_e_e][emit_idx] = Prob2Score (p2(xlr));
	emit[e_ISi_e_e][emit_idx] = Prob2Score (p2(xlr));
      }

  // state initialization: EmitXLRYLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IS_MS_MS_DS, EmitXLRYLR);
  init_emit (IS_MS_MS_e, EmitXLRYLR);

  // emissions: EmitXLRYLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
    for (int xr = 0; xr < SCFG_alphabet_size; ++xr)
      for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
	for (int yr = 0; yr < SCFG_alphabet_size; ++yr)
	  {
	    int emit_idx = (*this).emit_idx (EmitXLRYLR, xl, xr, yl, yr, 0, 0);
	    Prob pr;
	    int xlr = (*this).emit_idx (EmitXLR, xl, xr, 0, 0, 0, 0);
	    int ylr = (*this).emit_idx (EmitYLR, 0, 0, yl, yr, 0, 0);
	    pr = 0;
	    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
		{
		  // hack to create an emit_idx hash for (wl,wr)
		  int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
		  pr += p2(wlr) * m2_x(wlr,xlr) * m2_y(wlr,ylr);
		}
	    emit[IS_MS_MS_DS][emit_idx] = Prob2Score (pr);
	    pr = 0;
	    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
		{
		  // hack to create an emit_idx hash for (wl,wr)
		  int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
		  pr += p2(wlr) * m2_x(wlr,xlr) * m2_y(wlr,ylr);
		}
	    emit[IS_MS_MS_e][emit_idx] = Prob2Score (pr);
	  }

  // state initialization: EmitXLRYLRZLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IS_MS_MS_MS, EmitXLRYLRZLR);

  // emissions: EmitXLRYLRZLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
    for (int xr = 0; xr < SCFG_alphabet_size; ++xr)
      for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
	for (int yr = 0; yr < SCFG_alphabet_size; ++yr)
	  for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
	    for (int zr = 0; zr < SCFG_alphabet_size; ++zr)
	      {
#ifdef DART_DEBUG
		CL << "emit[IS_MS_MS_MS][" << SCFG_alphabet.int2char (xl) << SCFG_alphabet.int2char (xr) << "," << SCFG_alphabet.int2char (yl) << SCFG_alphabet.int2char (yr) << "," << SCFG_alphabet.int2char (zl) << SCFG_alphabet.int2char (zr) << ",]:" << endl;
#endif /* DART_DEBUG */

		int emit_idx = (*this).emit_idx (EmitXLRYLRZLR, xl, xr, yl, yr, zl, zr);
		Prob pr;
		int xlr = (*this).emit_idx (EmitXLR, xl, xr, 0, 0, 0, 0);
		int ylr = (*this).emit_idx (EmitYLR, 0, 0, yl, yr, 0, 0);
		int zlr = (*this).emit_idx (EmitZLR, 0, 0, 0, 0, zl, zr);
		pr = 0;
		for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
		  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
		    {
		      // hack to create an emit_idx hash for (wl,wr)
		      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
		      pr += p2(wlr) * m2_x(wlr,xlr) * m2_y(wlr,ylr) * m2_z(wlr,zlr);
#ifdef DART_DEBUG
		      CL << "p2("<<wlr<<") * m2_x("<<wlr<<","<<xlr<<") * m2_y("<<wlr<<","<<ylr<<") * m2_z("<<wlr<<","<<zlr<<") = " << p2(wlr) * m2_x(wlr,xlr) * m2_y(wlr,ylr) * m2_z(wlr,zlr) << " (pr = " << pr << ")" << endl;
#endif /* DART_DEBUG */
		    }
		emit[IS_MS_MS_MS][emit_idx] = Prob2Score (pr);
#ifdef DART_DEBUG
		CL << "emit[IS_MS_MS_MS][" << SCFG_alphabet.int2char (xl) << SCFG_alphabet.int2char (xr) << "," << SCFG_alphabet.int2char (yl) << SCFG_alphabet.int2char (yr) << "," << SCFG_alphabet.int2char (zl) << SCFG_alphabet.int2char (zr) << ",] = " << Prob2Score (pr) << endl;
		#endif /* DART_DEBUG */
	      }

  // state initialization: EmitXLRZLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IS_MS_DS_MS, EmitXLRZLR);
  init_emit (IS_MS_e_MS, EmitXLRZLR);

  // emissions: EmitXLRZLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
    for (int xr = 0; xr < SCFG_alphabet_size; ++xr)
      for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
	for (int zr = 0; zr < SCFG_alphabet_size; ++zr)
	  {
	    int emit_idx = (*this).emit_idx (EmitXLRZLR, xl, xr, 0, 0, zl, zr);
	    Prob pr;
	    int xlr = (*this).emit_idx (EmitXLR, xl, xr, 0, 0, 0, 0);
	    int zlr = (*this).emit_idx (EmitZLR, 0, 0, 0, 0, zl, zr);
	    pr = 0;
	    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
		{
		  // hack to create an emit_idx hash for (wl,wr)
		  int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
		  pr += p2(wlr) * m2_x(wlr,xlr) * m2_z(wlr,zlr);
		}
	    emit[IS_MS_DS_MS][emit_idx] = Prob2Score (pr);
	    pr = 0;
	    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
		{
		  // hack to create an emit_idx hash for (wl,wr)
		  int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
		  pr += p2(wlr) * m2_x(wlr,xlr) * m2_z(wlr,zlr);
		}
	    emit[IS_MS_e_MS][emit_idx] = Prob2Score (pr);
	  }

  // state initialization: EmitYLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IS_DS_IS_WS, EmitYLR);
  init_emit (IS_DS_IS_e, EmitYLR);
  init_emit (IS_DS_MS_DS, EmitYLR);
  init_emit (IS_DS_MS_e, EmitYLR);
  init_emit (IS_MS_IS_WS, EmitYLR);
  init_emit (IS_MS_IS_e, EmitYLR);
  init_emit (IS_e_IS_WS, EmitYLR);
  init_emit (IS_e_IS_e, EmitYLR);
  init_emit (IS_e_MS_DS, EmitYLR);
  init_emit (IS_e_MS_e, EmitYLR);
  init_emit (S_S_IS_WS, EmitYLR);
  init_emit (S_S_IS_e, EmitYLR);
  init_emit (S_e_IS_WS, EmitYLR);
  init_emit (S_e_IS_e, EmitYLR);
  init_emit (e_e_ISi_e, EmitYLR);

  // emissions: EmitYLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
    for (int yr = 0; yr < SCFG_alphabet_size; ++yr)
      {
	int emit_idx = (*this).emit_idx (EmitYLR, 0, 0, yl, yr, 0, 0);
	Prob pr;
	int ylr = (*this).emit_idx (EmitYLR, 0, 0, yl, yr, 0, 0);
	emit[IS_DS_IS_WS][emit_idx] = Prob2Score (p2(ylr));
	emit[IS_DS_IS_e][emit_idx] = Prob2Score (p2(ylr));
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_y(wlr,ylr);
	    }
	emit[IS_DS_MS_DS][emit_idx] = Prob2Score (pr);
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_y(wlr,ylr);
	    }
	emit[IS_DS_MS_e][emit_idx] = Prob2Score (pr);
	emit[IS_MS_IS_WS][emit_idx] = Prob2Score (p2(ylr));
	emit[IS_MS_IS_e][emit_idx] = Prob2Score (p2(ylr));
	emit[IS_e_IS_WS][emit_idx] = Prob2Score (p2(ylr));
	emit[IS_e_IS_e][emit_idx] = Prob2Score (p2(ylr));
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_y(wlr,ylr);
	    }
	emit[IS_e_MS_DS][emit_idx] = Prob2Score (pr);
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_y(wlr,ylr);
	    }
	emit[IS_e_MS_e][emit_idx] = Prob2Score (pr);
	emit[S_S_IS_WS][emit_idx] = Prob2Score (p2(ylr));
	emit[S_S_IS_e][emit_idx] = Prob2Score (p2(ylr));
	emit[S_e_IS_WS][emit_idx] = Prob2Score (p2(ylr));
	emit[S_e_IS_e][emit_idx] = Prob2Score (p2(ylr));
	emit[e_e_ISi_e][emit_idx] = Prob2Score (p2(ylr));
      }

  // state initialization: EmitYLRZLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IS_DS_MS_MS, EmitYLRZLR);
  init_emit (IS_e_MS_MS, EmitYLRZLR);

  // emissions: EmitYLRZLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
    for (int yr = 0; yr < SCFG_alphabet_size; ++yr)
      for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
	for (int zr = 0; zr < SCFG_alphabet_size; ++zr)
	  {
	    int emit_idx = (*this).emit_idx (EmitYLRZLR, 0, 0, yl, yr, zl, zr);
	    Prob pr;
	    int ylr = (*this).emit_idx (EmitYLR, 0, 0, yl, yr, 0, 0);
	    int zlr = (*this).emit_idx (EmitZLR, 0, 0, 0, 0, zl, zr);
	    pr = 0;
	    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
		{
		  // hack to create an emit_idx hash for (wl,wr)
		  int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
		  pr += p2(wlr) * m2_y(wlr,ylr) * m2_z(wlr,zlr);
		}
	    emit[IS_DS_MS_MS][emit_idx] = Prob2Score (pr);
	    pr = 0;
	    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
		{
		  // hack to create an emit_idx hash for (wl,wr)
		  int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
		  pr += p2(wlr) * m2_y(wlr,ylr) * m2_z(wlr,zlr);
		}
	    emit[IS_e_MS_MS][emit_idx] = Prob2Score (pr);
	  }

  // state initialization: EmitZLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  init_emit (IS_DS_DS_IS, EmitZLR);
  init_emit (IS_DS_DS_MS, EmitZLR);
  init_emit (IS_DS_MS_IS, EmitZLR);
  init_emit (IS_DS_e_IS, EmitZLR);
  init_emit (IS_DS_e_MS, EmitZLR);
  init_emit (IS_MS_DS_IS, EmitZLR);
  init_emit (IS_MS_MS_IS, EmitZLR);
  init_emit (IS_MS_e_IS, EmitZLR);
  init_emit (IS_e_DS_IS, EmitZLR);
  init_emit (IS_e_DS_MS, EmitZLR);
  init_emit (IS_e_MS_IS, EmitZLR);
  init_emit (IS_e_e_IS, EmitZLR);
  init_emit (IS_e_e_MS, EmitZLR);
  init_emit (S_S_S_IS, EmitZLR);
  init_emit (S_S_e_IS, EmitZLR);
  init_emit (S_e_S_IS, EmitZLR);
  init_emit (S_e_e_IS, EmitZLR);
  init_emit (e_e_e_ISi, EmitZLR);

  // emissions: EmitZLR
  //  (Automatically generated by 'tripletSCFG.pl' --write.)
  for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
    for (int zr = 0; zr < SCFG_alphabet_size; ++zr)
      {
	int emit_idx = (*this).emit_idx (EmitZLR, 0, 0, 0, 0, zl, zr);
	Prob pr;
	int zlr = (*this).emit_idx (EmitZLR, 0, 0, 0, 0, zl, zr);
	emit[IS_DS_DS_IS][emit_idx] = Prob2Score (p2(zlr));
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_z(wlr,zlr);
	    }
	emit[IS_DS_DS_MS][emit_idx] = Prob2Score (pr);
	emit[IS_DS_MS_IS][emit_idx] = Prob2Score (p2(zlr));
	emit[IS_DS_e_IS][emit_idx] = Prob2Score (p2(zlr));
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_z(wlr,zlr);
	    }
	emit[IS_DS_e_MS][emit_idx] = Prob2Score (pr);
	emit[IS_MS_DS_IS][emit_idx] = Prob2Score (p2(zlr));
	emit[IS_MS_MS_IS][emit_idx] = Prob2Score (p2(zlr));
	emit[IS_MS_e_IS][emit_idx] = Prob2Score (p2(zlr));
	emit[IS_e_DS_IS][emit_idx] = Prob2Score (p2(zlr));
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_z(wlr,zlr);
	    }
	emit[IS_e_DS_MS][emit_idx] = Prob2Score (pr);
	emit[IS_e_MS_IS][emit_idx] = Prob2Score (p2(zlr));
	emit[IS_e_e_IS][emit_idx] = Prob2Score (p2(zlr));
	pr = 0;
	for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
	  for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
	    {
	      // hack to create an emit_idx hash for (wl,wr)
	      int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
	      pr += p2(wlr) * m2_z(wlr,zlr);
	    }
	emit[IS_e_e_MS][emit_idx] = Prob2Score (pr);
	emit[S_S_S_IS][emit_idx] = Prob2Score (p2(zlr));
	emit[S_S_e_IS][emit_idx] = Prob2Score (p2(zlr));
	emit[S_e_S_IS][emit_idx] = Prob2Score (p2(zlr));
	emit[S_e_e_IS][emit_idx] = Prob2Score (p2(zlr));
	emit[e_e_e_ISi][emit_idx] = Prob2Score (p2(zlr));
      }

}

void TKFST_Triplet_SCFG::init_bifurc_states()
{
  CTAG (4, INDIEGRAM) << "Initializing Bifurc states.\n";

  /*
   * state initialization: Bifurc states
   */
  init_bifurc (L_L_L_BiSiL, e_e_e_Si, L_L_L_L);
  init_bifurc (BiSL_BmSL_BmSL_BpeL, S_S_S_e, L_L_L_L);
  init_bifurc (IL_ML_ML_BiSiL, e_e_e_Si, IL_ML_ML_L);
  init_bifurc (e_e_e_BiSiLi, e_e_e_Si, e_e_e_Li);
  init_bifurc (L_e_BiSiL_e, e_e_Si_e, L_e_L_e);
  init_bifurc (L_e_BiSiL_WL, e_e_Si_e, L_e_L_WL);
  init_bifurc (L_L_BiSiL_e, e_e_Si_e, L_L_L_e);
  init_bifurc (BiSL_BpeL_e_BmSL, S_e_e_S, L_L_e_L);
  init_bifurc (L_BiSiL_e_WL, e_Si_e_e, L_L_e_WL);
  init_bifurc (BiSL_BpeL_BpeL_e, S_e_e_e, L_L_L_e);
  init_bifurc (BiSL_BmSL_e_BpeL, S_S_e_e, L_L_e_L);
  init_bifurc (BiSL_BmSL_e_BmSL, S_S_e_S, L_L_e_L);
  init_bifurc (IL_e_BiSiL_WL, e_e_Si_e, IL_e_L_WL);
  init_bifurc (BiSL_BmSL_BpeL_BmSL, S_S_e_S, L_L_L_L);
  init_bifurc (BiSL_BmSL_BpeL_e, S_S_e_e, L_L_L_e);
  init_bifurc (IL_BiSiL_e_e, e_Si_e_e, IL_L_e_e);
  init_bifurc (BiSL_e_BpeL_e, S_e_e_e, L_e_L_e);
  init_bifurc (BiSL_e_BmSL_BpeL, S_e_S_e, L_e_L_L);
  init_bifurc (L_BiSiL_e_e, e_Si_e_e, L_L_e_e);
  init_bifurc (e_e_BiSiLi_e, e_e_Si_e, e_e_Li_e);
  init_bifurc (e_BiSiLi_e_e, e_Si_e_e, e_Li_e_e);
  init_bifurc (BiSL_BmSL_BmSL_e, S_S_S_e, L_L_L_e);
  init_bifurc (IL_e_DL_BiSiL, e_e_e_Si, IL_e_DL_L);
  init_bifurc (IL_DL_DL_BiSiL, e_e_e_Si, IL_DL_DL_L);
  init_bifurc (IL_BiSiL_WL_WL, e_Si_e_e, IL_L_WL_WL);
  init_bifurc (L_L_e_BiSiL, e_e_e_Si, L_L_e_L);
  init_bifurc (L_BiSiL_WL_WL, e_Si_e_e, L_L_WL_WL);
  init_bifurc (BiSL_BmSL_BpeL_BpeL, S_S_e_e, L_L_L_L);
  init_bifurc (L_BiSiL_WL_e, e_Si_e_e, L_L_WL_e);
  init_bifurc (IL_e_BiSiL_e, e_e_Si_e, IL_e_L_e);
  init_bifurc (IL_ML_BiSiL_e, e_e_Si_e, IL_ML_L_e);
  init_bifurc (BiSL_e_BpeL_BpeL, S_e_e_e, L_e_L_L);
  init_bifurc (BiSL_BpeL_BpeL_BmSL, S_e_e_S, L_L_L_L);
  init_bifurc (BiSL_BpeL_BpeL_BpeL, S_e_e_e, L_L_L_L);
  init_bifurc (L_e_e_BiSiL, e_e_e_Si, L_e_e_L);
  init_bifurc (BiSL_BpeL_BmSL_e, S_e_S_e, L_L_L_e);
  init_bifurc (BiSL_BpeL_e_BpeL, S_e_e_e, L_L_e_L);
  init_bifurc (BiSL_BmSL_BmSL_BmSL, S_S_S_S, L_L_L_L);
  init_bifurc (BiSL_e_BmSL_e, S_e_S_e, L_e_L_e);
  init_bifurc (IL_ML_BiSiL_WL, e_e_Si_e, IL_ML_L_WL);
  init_bifurc (IL_DL_ML_BiSiL, e_e_e_Si, IL_DL_ML_L);
  init_bifurc (IL_BiSiL_e_WL, e_Si_e_e, IL_L_e_WL);
  init_bifurc (L_L_BiSiL_WL, e_e_Si_e, L_L_L_WL);
  init_bifurc (BiSL_BpeL_BmSL_BmSL, S_e_S_S, L_L_L_L);
  init_bifurc (BiSL_e_BmSL_BmSL, S_e_S_S, L_e_L_L);
  init_bifurc (IL_DL_e_BiSiL, e_e_e_Si, IL_DL_e_L);
  init_bifurc (IL_e_e_BiSiL, e_e_e_Si, IL_e_e_L);
  init_bifurc (IL_ML_e_BiSiL, e_e_e_Si, IL_ML_e_L);
  init_bifurc (BiSL_BpeL_BmSL_BpeL, S_e_S_e, L_L_L_L);
  init_bifurc (BiSL_BpeL_e_e, S_e_e_e, L_L_e_e);
  init_bifurc (BiSL_e_BpeL_BmSL, S_e_e_S, L_e_L_L);
  init_bifurc (IL_BiSiL_WL_e, e_Si_e_e, IL_L_WL_e);
  init_bifurc (BiSL_e_e_BmSL, S_e_e_S, L_e_e_L);
  init_bifurc (BiSL_e_e_BpeL, S_e_e_e, L_e_e_L);
  init_bifurc (BiSL_e_e_e, S_e_e_e, L_e_e_e);
  init_bifurc (IL_ML_DL_BiSiL, e_e_e_Si, IL_ML_DL_L);
  init_bifurc (BiSL_BmSL_e_e, S_S_e_e, L_L_e_e);
  init_bifurc (IL_e_ML_BiSiL, e_e_e_Si, IL_e_ML_L);
  init_bifurc (IL_DL_BiSiL_WL, e_e_Si_e, IL_DL_L_WL);
  init_bifurc (L_e_L_BiSiL, e_e_e_Si, L_e_L_L);
  init_bifurc (IL_DL_BiSiL_e, e_e_Si_e, IL_DL_L_e);

}

void TKFST_Triplet_SCFG::init_transition_scores()
{
  CTAG (4, INDIEGRAM) << "Initializing transition matrix.\n";

  /*
   * transition_scores initialization
   */
  transition_scores.start[L_L_L_L] = Prob2Score ((1));

  /* IL_DL_DL_DL */
  transition_scores.transition (IL_DL_DL_DL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_DL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-g1(u)) * (1-g1(v)));
  transition_scores.transition (IL_DL_DL_DL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_DL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_DL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_DL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_DL, IL_DL_IL_WL) = Prob2Score ((g1(u)) * (1-g1(v)));
  transition_scores.transition (IL_DL_DL_DL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_DL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_DL, IL_DL_DL_IL) = Prob2Score ((g1(v)));
  transition_scores.transition (IL_DL_DL_DL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_DL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_DL_DL, IL_DL_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_DL_DL_DL, IL_DL_DL_BiSiL) = Prob2Score ((g1(v)*pS()));
  transition_scores.end[IL_DL_DL_DL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(u))*(1)) * ((1-g1(v))*(1)));

  /* IL_DL_DL_L */
  transition_scores.transition (IL_DL_DL_L, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_L, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_DL_L, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_L, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_L, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_L, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_L, IL_DL_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_DL_L, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_L, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_L, IL_DL_DL_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_DL_DL_L, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_L, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_DL_L, IL_DL_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_DL_DL_L, IL_DL_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_DL_DL_L] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_DL_DL_e */
  transition_scores.transition (IL_DL_DL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_DL_e, IL_IL_WL_e) = Prob2Score ((g1(t)) * (1-g1(u)));
  transition_scores.transition (IL_DL_DL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_DL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))));
  transition_scores.transition (IL_DL_DL_e, IL_DL_IL_e) = Prob2Score ((g1(u)));
  transition_scores.transition (IL_DL_DL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))));
  transition_scores.transition (IL_DL_DL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))));
  transition_scores.transition (IL_DL_DL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_DL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))));
  transition_scores.transition (IL_DL_DL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_DL_e, IL_BiSiL_WL_e) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_DL_e, IL_DL_BiSiL_e) = Prob2Score ((g1(u)*pS()));
  transition_scores.end[IL_DL_DL_e] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(u))*(1)));

  /* IL_DL_L_WL */
  transition_scores.transition (IL_DL_L_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_L_WL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)));
  transition_scores.transition (IL_DL_L_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_L_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_L_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_L_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_L_WL, IL_DL_IL_WL) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_DL_L_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_L_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_L_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_L_WL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_L_WL, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_DL_L_WL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * (1));

  /* IL_DL_L_e */
  transition_scores.transition (IL_DL_L_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_L_e, IL_IL_WL_e) = Prob2Score ((g1(t)) * (1-b1(u)));
  transition_scores.transition (IL_DL_L_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_L_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_L_e, IL_DL_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_DL_L_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_L_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_L_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_L_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_L_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_L_e, IL_BiSiL_WL_e) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_L_e, IL_DL_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_DL_L_e] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)));

  /* IL_DL_ML_L */
  transition_scores.transition (IL_DL_ML_L, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_L, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_ML_L, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_L, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_L, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_L, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_L, IL_DL_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_ML_L, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_L, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_L, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_L, IL_DL_ML_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_L, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_ML_L, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_DL_ML_L, IL_DL_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_DL_ML_L] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_DL_e_DL */
  transition_scores.transition (IL_DL_e_DL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_DL, IL_IL_e_WL) = Prob2Score ((g1(t)) * (1-g1(v)));
  transition_scores.transition (IL_DL_e_DL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_DL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_DL, IL_DL_e_IL) = Prob2Score ((g1(v)));
  transition_scores.transition (IL_DL_e_DL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_DL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_DL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_DL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_DL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_DL, IL_BiSiL_e_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_e_DL, IL_DL_e_BiSiL) = Prob2Score ((g1(v)*pS()));
  transition_scores.end[IL_DL_e_DL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(v))*(1)));

  /* IL_DL_e_L */
  transition_scores.transition (IL_DL_e_L, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_L, IL_IL_e_WL) = Prob2Score ((g1(t)) * (1-b1(v)));
  transition_scores.transition (IL_DL_e_L, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_L, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_L, IL_DL_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_DL_e_L, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_L, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_L, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_L, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_L, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_L, IL_BiSiL_e_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_e_L, IL_DL_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_DL_e_L] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(v))*(1)));

  /* IL_DL_e_e */
  transition_scores.transition (IL_DL_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))));
  transition_scores.transition (IL_DL_e_e, IL_IL_e_e) = Prob2Score ((g1(t)));
  transition_scores.transition (IL_DL_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))));
  transition_scores.transition (IL_DL_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))));
  transition_scores.transition (IL_DL_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))));
  transition_scores.transition (IL_DL_e_e, IL_BiSiL_e_e) = Prob2Score ((g1(t)*pS()));
  transition_scores.end[IL_DL_e_e] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)));

  /* IL_L_WL_WL */
  transition_scores.transition (IL_L_WL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_L_WL_WL, IL_IL_WL_WL) = Prob2Score ((b1(t)));
  transition_scores.transition (IL_L_WL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_L_WL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_L_WL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (IL_L_WL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (IL_L_WL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_L_WL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (IL_L_WL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_L_WL_WL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[IL_L_WL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1) * (1));

  /* IL_L_WL_e */
  transition_scores.transition (IL_L_WL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
  transition_scores.transition (IL_L_WL_e, IL_IL_WL_e) = Prob2Score ((b1(t)));
  transition_scores.transition (IL_L_WL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
  transition_scores.transition (IL_L_WL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)));
  transition_scores.transition (IL_L_WL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
  transition_scores.transition (IL_L_WL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)));
  transition_scores.transition (IL_L_WL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
  transition_scores.transition (IL_L_WL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
  transition_scores.transition (IL_L_WL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
  transition_scores.transition (IL_L_WL_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[IL_L_WL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

  /* IL_L_e_WL */
  transition_scores.transition (IL_L_e_WL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
  transition_scores.transition (IL_L_e_WL, IL_IL_e_WL) = Prob2Score ((b1(t)));
  transition_scores.transition (IL_L_e_WL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
  transition_scores.transition (IL_L_e_WL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(v)));
  transition_scores.transition (IL_L_e_WL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
  transition_scores.transition (IL_L_e_WL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(v)));
  transition_scores.transition (IL_L_e_WL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
  transition_scores.transition (IL_L_e_WL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
  transition_scores.transition (IL_L_e_WL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
  transition_scores.transition (IL_L_e_WL, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[IL_L_e_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

  /* IL_L_e_e */
  transition_scores.transition (IL_L_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))));
  transition_scores.transition (IL_L_e_e, IL_IL_e_e) = Prob2Score ((b1(t)));
  transition_scores.transition (IL_L_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))));
  transition_scores.transition (IL_L_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))));
  transition_scores.transition (IL_L_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))));
  transition_scores.transition (IL_L_e_e, IL_BiSiL_e_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[IL_L_e_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)));

  /* IL_ML_DL_L */
  transition_scores.transition (IL_ML_DL_L, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_L, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_DL_L, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_L, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_L, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_L, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_L, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_L, IL_ML_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_DL_L, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_L, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_L, IL_ML_DL_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_L, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_DL_L, IL_ML_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_ML_DL_L, IL_ML_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_ML_DL_L] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_ML_L_WL */
  transition_scores.transition (IL_ML_L_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_L_WL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)));
  transition_scores.transition (IL_ML_L_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_L_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_L_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_L_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_L_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_L_WL, IL_ML_IL_WL) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_ML_L_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_L_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_L_WL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_L_WL, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_ML_L_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * (1));

  /* IL_ML_L_e */
  transition_scores.transition (IL_ML_L_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_L_e, IL_IL_WL_e) = Prob2Score ((b1(t)) * (1-b1(u)));
  transition_scores.transition (IL_ML_L_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_L_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_L_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_L_e, IL_ML_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_ML_L_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_L_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_L_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_L_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_L_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_L_e, IL_ML_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_ML_L_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)));

  /* IL_ML_ML_L */
  transition_scores.transition (IL_ML_ML_L, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_L, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_ML_L, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_L, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_L, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_L, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_L, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_L, IL_ML_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_ML_L, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_L, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_L, IL_ML_ML_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_L, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_ML_L, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_ML_ML_L, IL_ML_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_ML_ML_L] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_ML_e_L */
  transition_scores.transition (IL_ML_e_L, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_L, IL_IL_e_WL) = Prob2Score ((b1(t)) * (1-b1(v)));
  transition_scores.transition (IL_ML_e_L, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_L, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_L, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_L, IL_ML_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_ML_e_L, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_L, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_L, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_L, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_L, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_e_L, IL_ML_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_ML_e_L] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(v))*(1)));

  /* IL_e_DL_DL */
  transition_scores.transition (IL_e_DL_DL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_DL, IL_e_IL_WL) = Prob2Score ((g1(u)) * (1-g1(v)));
  transition_scores.transition (IL_e_DL_DL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_DL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_DL, IL_e_DL_IL) = Prob2Score ((g1(v)));
  transition_scores.transition (IL_e_DL_DL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_DL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_DL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_DL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_DL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_DL, IL_e_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_e_DL_DL, IL_e_DL_BiSiL) = Prob2Score ((g1(v)*pS()));
  transition_scores.end[IL_e_DL_DL] = Prob2Score ((1-K1()) * ((1-g1(u))*(1)) * ((1-g1(v))*(1)));

  /* IL_e_DL_L */
  transition_scores.transition (IL_e_DL_L, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_L, IL_e_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_e_DL_L, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_L, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_L, IL_e_DL_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_e_DL_L, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_L, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_L, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_L, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_L, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_L, IL_e_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_e_DL_L, IL_e_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_e_DL_L] = Prob2Score ((1-K1()) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_e_DL_e */
  transition_scores.transition (IL_e_DL_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))));
  transition_scores.transition (IL_e_DL_e, IL_e_IL_e) = Prob2Score ((g1(u)));
  transition_scores.transition (IL_e_DL_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))));
  transition_scores.transition (IL_e_DL_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))));
  transition_scores.transition (IL_e_DL_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))));
  transition_scores.transition (IL_e_DL_e, IL_e_BiSiL_e) = Prob2Score ((g1(u)*pS()));
  transition_scores.end[IL_e_DL_e] = Prob2Score ((1-K1()) * ((1-g1(u))*(1)));

  /* IL_e_L_WL */
  transition_scores.transition (IL_e_L_WL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_e_L_WL, IL_e_IL_WL) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_e_L_WL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_e_L_WL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_e_L_WL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_e_L_WL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_e_L_WL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_e_L_WL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_e_L_WL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_e_L_WL, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_e_L_WL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * (1));

  /* IL_e_L_e */
  transition_scores.transition (IL_e_L_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_e_L_e, IL_e_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_e_L_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_e_L_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_e_L_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_e_L_e, IL_e_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_e_L_e] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)));

  /* IL_e_ML_L */
  transition_scores.transition (IL_e_ML_L, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_L, IL_e_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_e_ML_L, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_L, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_L, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_L, IL_e_ML_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_e_ML_L, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_L, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_L, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_L, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_L, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_e_ML_L, IL_e_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_e_ML_L] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_e_e_DL */
  transition_scores.transition (IL_e_e_DL, IL_e_e_DL) = Prob2Score ((K1()) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_e_DL, IL_e_e_IL) = Prob2Score ((g1(v)));
  transition_scores.transition (IL_e_e_DL, IL_e_e_ML) = Prob2Score ((K1()) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_e_e_DL, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_e_e_DL, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_e_DL, IL_e_e_BiSiL) = Prob2Score ((g1(v)*pS()));
  transition_scores.end[IL_e_e_DL] = Prob2Score ((1-K1()) * ((1-g1(v))*(1)));

  /* IL_e_e_L */
  transition_scores.transition (IL_e_e_L, IL_e_e_DL) = Prob2Score ((K1()) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_e_L, IL_e_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_e_e_L, IL_e_e_ML) = Prob2Score ((K1()) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_e_L, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_e_L, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_e_L, IL_e_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_e_e_L] = Prob2Score ((1-K1()) * ((1-b1(v))*(1)));

  /* IL_e_e_e */
  transition_scores.transition (IL_e_e_e, IL_e_e_e) = Prob2Score ((K1()));
  transition_scores.transition (IL_e_e_e, BiSL_e_e_e) = Prob2Score ((K1()*pS()));
  transition_scores.end[IL_e_e_e] = Prob2Score ((1-K1()));

  /* IS_DS_DS_DS */
  transition_scores.transition (IS_DS_DS_DS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_DS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
  transition_scores.transition (IS_DS_DS_DS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-g2(u)) * (1-g2(v)));
  transition_scores.transition (IS_DS_DS_DS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_DS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_DS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_DS_DS_DS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_DS_DS_DS, IS_DS_IS_WS) = Prob2Score ((g2(u)) * (1-g2(v)));
  transition_scores.transition (IS_DS_DS_DS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_DS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_DS_DS_DS, IS_DS_DS_IS) = Prob2Score ((g2(v)));
  transition_scores.transition (IS_DS_DS_DS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));

  /* IS_DS_DS_e */
  transition_scores.transition (IS_DS_DS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))));
  transition_scores.transition (IS_DS_DS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))));
  transition_scores.transition (IS_DS_DS_e, IS_IS_WS_e) = Prob2Score ((g2(t)) * (1-g2(u)));
  transition_scores.transition (IS_DS_DS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))));
  transition_scores.transition (IS_DS_DS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))));
  transition_scores.transition (IS_DS_DS_e, IS_DS_IS_e) = Prob2Score ((g2(u)));
  transition_scores.transition (IS_DS_DS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))));

  /* IS_DS_e_DS */
  transition_scores.transition (IS_DS_e_DS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_e_DS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
  transition_scores.transition (IS_DS_e_DS, IS_IS_e_WS) = Prob2Score ((g2(t)) * (1-g2(v)));
  transition_scores.transition (IS_DS_e_DS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_e_DS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_DS_e_DS, IS_DS_e_IS) = Prob2Score ((g2(v)));
  transition_scores.transition (IS_DS_e_DS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(v))*(a2(v))));

  /* IS_DS_e_e */
  transition_scores.transition (IS_DS_e_e, IS_DS_e_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))));
  transition_scores.transition (IS_DS_e_e, L_L_e_e) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))));
  transition_scores.transition (IS_DS_e_e, IS_IS_e_e) = Prob2Score ((g2(t)));
  transition_scores.transition (IS_DS_e_e, IS_MS_e_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))));

  /* IS_e_DS_DS */
  transition_scores.transition (IS_e_DS_DS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_DS_DS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
  transition_scores.transition (IS_e_DS_DS, IS_e_IS_WS) = Prob2Score ((g2(u)) * (1-g2(v)));
  transition_scores.transition (IS_e_DS_DS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_DS_DS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_e_DS_DS, IS_e_DS_IS) = Prob2Score ((g2(v)));
  transition_scores.transition (IS_e_DS_DS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));

  /* IS_e_DS_e */
  transition_scores.transition (IS_e_DS_e, IS_e_DS_e) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))));
  transition_scores.transition (IS_e_DS_e, L_e_L_e) = Prob2Score (((1-K2())*(1)) * ((1-g2(u))*((1)*(1))));
  transition_scores.transition (IS_e_DS_e, IS_e_IS_e) = Prob2Score ((g2(u)));
  transition_scores.transition (IS_e_DS_e, IS_e_MS_e) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))));

  /* IS_e_e_DS */
  transition_scores.transition (IS_e_e_DS, IS_e_e_DS) = Prob2Score ((K2()) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_e_DS, L_e_e_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(v))*((1)*(1))));
  transition_scores.transition (IS_e_e_DS, IS_e_e_IS) = Prob2Score ((g2(v)));
  transition_scores.transition (IS_e_e_DS, IS_e_e_MS) = Prob2Score ((K2()) * ((1-g2(v))*(a2(v))));

  /* IS_e_e_e */
  transition_scores.transition (IS_e_e_e, IS_e_e_e) = Prob2Score ((K2()));
  transition_scores.transition (IS_e_e_e, L_e_e_e) = Prob2Score (((1-K2())*(1)));

  /* L_L_L_L */
  transition_scores.transition (L_L_L_L, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_L, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_L, L_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-b1(v)));
  transition_scores.transition (L_L_L_L, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_L, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_L, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_L, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_L, L_L_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (L_L_L_L, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_L, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_L, L_L_L_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (L_L_L_L, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_L, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_L, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_L, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_L, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_L, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_L, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_L, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_L, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (L_L_L_L, L_L_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (L_L_L_L, L_L_L_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[L_L_L_L] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* L_L_L_WL */
  transition_scores.transition (L_L_L_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_L_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_L_WL, L_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)));
  transition_scores.transition (L_L_L_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_L_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_L_L_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_L_L_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_L_WL, L_L_IL_WL) = Prob2Score ((b1(u)));
  transition_scores.transition (L_L_L_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_L_L_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_L_L_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_L_L_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_L_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_L_L_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_L_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_L_L_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_L_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_L_L_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_L_WL, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (L_L_L_WL, L_L_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[L_L_L_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * (1));

  /* L_L_L_e */
  transition_scores.transition (L_L_L_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_L_L_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_L_L_e, L_IL_WL_e) = Prob2Score ((b1(t)) * (1-b1(u)));
  transition_scores.transition (L_L_L_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_L_L_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_L_L_e, L_L_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (L_L_L_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_L_L_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_L_L_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_L_L_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_L_L_e, L_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (L_L_L_e, L_L_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[L_L_L_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)));

  /* L_L_WL_WL */
  transition_scores.transition (L_L_WL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (L_L_WL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (L_L_WL_WL, L_IL_WL_WL) = Prob2Score ((b1(t)));
  transition_scores.transition (L_L_WL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (L_L_WL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (L_L_WL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (L_L_WL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (L_L_WL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (L_L_WL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (L_L_WL_WL, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[L_L_WL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1) * (1));

  /* L_L_WL_e */
  transition_scores.transition (L_L_WL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
  transition_scores.transition (L_L_WL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
  transition_scores.transition (L_L_WL_e, L_IL_WL_e) = Prob2Score ((b1(t)));
  transition_scores.transition (L_L_WL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)));
  transition_scores.transition (L_L_WL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
  transition_scores.transition (L_L_WL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)));
  transition_scores.transition (L_L_WL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
  transition_scores.transition (L_L_WL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
  transition_scores.transition (L_L_WL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
  transition_scores.transition (L_L_WL_e, L_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[L_L_WL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

  /* L_L_e_L */
  transition_scores.transition (L_L_e_L, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_e_L, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_e_L, L_IL_e_WL) = Prob2Score ((b1(t)) * (1-b1(v)));
  transition_scores.transition (L_L_e_L, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_e_L, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_e_L, L_L_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (L_L_e_L, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_e_L, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_e_L, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_e_L, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_e_L, L_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (L_L_e_L, L_L_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[L_L_e_L] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(v))*(1)));

  /* L_L_e_WL */
  transition_scores.transition (L_L_e_WL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
  transition_scores.transition (L_L_e_WL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
  transition_scores.transition (L_L_e_WL, L_IL_e_WL) = Prob2Score ((b1(t)));
  transition_scores.transition (L_L_e_WL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(v)));
  transition_scores.transition (L_L_e_WL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
  transition_scores.transition (L_L_e_WL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(v)));
  transition_scores.transition (L_L_e_WL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
  transition_scores.transition (L_L_e_WL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
  transition_scores.transition (L_L_e_WL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
  transition_scores.transition (L_L_e_WL, L_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[L_L_e_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

  /* L_L_e_e */
  transition_scores.transition (L_L_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))));
  transition_scores.transition (L_L_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))));
  transition_scores.transition (L_L_e_e, L_IL_e_e) = Prob2Score ((b1(t)));
  transition_scores.transition (L_L_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))));
  transition_scores.transition (L_L_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))));
  transition_scores.transition (L_L_e_e, L_BiSiL_e_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[L_L_e_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)));

  /* L_e_L_L */
  transition_scores.transition (L_e_L_L, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_L_L, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_L_L, L_e_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (L_e_L_L, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_L_L, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_L_L, L_e_L_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (L_e_L_L, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_L_L, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_L_L, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_L_L, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_L_L, L_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (L_e_L_L, L_e_L_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[L_e_L_L] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* L_e_L_WL */
  transition_scores.transition (L_e_L_WL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_e_L_WL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_e_L_WL, L_e_IL_WL) = Prob2Score ((b1(u)));
  transition_scores.transition (L_e_L_WL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_e_L_WL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_e_L_WL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_e_L_WL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_e_L_WL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_e_L_WL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_e_L_WL, L_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[L_e_L_WL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * (1));

  /* L_e_L_e */
  transition_scores.transition (L_e_L_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_e_L_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_e_L_e, L_e_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (L_e_L_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_e_L_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_e_L_e, L_e_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[L_e_L_e] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)));

  /* L_e_e_L */
  transition_scores.transition (L_e_e_L, IL_e_e_DL) = Prob2Score ((K1()) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_e_L, IL_e_e_ML) = Prob2Score ((K1()) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_e_L, L_e_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (L_e_e_L, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_e_L, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_e_L, L_e_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[L_e_e_L] = Prob2Score ((1-K1()) * ((1-b1(v))*(1)));

  /* L_e_e_e */
  transition_scores.transition (L_e_e_e, IL_e_e_e) = Prob2Score ((K1()));
  transition_scores.transition (L_e_e_e, BiSL_e_e_e) = Prob2Score ((K1()*pS()));
  transition_scores.end[L_e_e_e] = Prob2Score ((1-K1()));

  /* S_S_S_S */
  transition_scores.transition (S_S_S_S, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_S_S, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (S_S_S_S, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_S_S, S_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)) * (1-b2(v)));
  transition_scores.transition (S_S_S_S, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_S_S, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_S_S, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_S_S, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_S_S, S_S_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
  transition_scores.transition (S_S_S_S, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_S_S, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_S_S, S_S_S_IS) = Prob2Score ((b2(v)));

  /* S_S_S_e */
  transition_scores.transition (S_S_S_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (S_S_S_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
  transition_scores.transition (S_S_S_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (S_S_S_e, S_IS_WS_e) = Prob2Score ((b2(t)) * (1-b2(u)));
  transition_scores.transition (S_S_S_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (S_S_S_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (S_S_S_e, S_S_IS_e) = Prob2Score ((b2(u)));

  /* S_S_e_S */
  transition_scores.transition (S_S_e_S, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_e_S, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (S_S_e_S, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_e_S, S_IS_e_WS) = Prob2Score ((b2(t)) * (1-b2(v)));
  transition_scores.transition (S_S_e_S, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_e_S, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_e_S, S_S_e_IS) = Prob2Score ((b2(v)));

  /* S_S_e_e */
  transition_scores.transition (S_S_e_e, IS_DS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))));
  transition_scores.transition (S_S_e_e, L_L_e_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))));
  transition_scores.transition (S_S_e_e, IS_MS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))));
  transition_scores.transition (S_S_e_e, S_IS_e_e) = Prob2Score ((b2(t)));

  /* S_e_S_S */
  transition_scores.transition (S_e_S_S, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_e_S_S, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (S_e_S_S, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_e_S_S, S_e_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
  transition_scores.transition (S_e_S_S, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_e_S_S, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_e_S_S, S_e_S_IS) = Prob2Score ((b2(v)));

  /* S_e_S_e */
  transition_scores.transition (S_e_S_e, IS_e_DS_e) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (S_e_S_e, L_e_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))));
  transition_scores.transition (S_e_S_e, IS_e_MS_e) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (S_e_S_e, S_e_IS_e) = Prob2Score ((b2(u)));

  /* S_e_e_S */
  transition_scores.transition (S_e_e_S, IS_e_e_DS) = Prob2Score ((K2()) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_e_e_S, L_e_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (S_e_e_S, IS_e_e_MS) = Prob2Score ((K2()) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_e_e_S, S_e_e_IS) = Prob2Score ((b2(v)));

  /* S_e_e_e */
  transition_scores.transition (S_e_e_e, IS_e_e_e) = Prob2Score ((K2()));
  transition_scores.transition (S_e_e_e, L_e_e_e) = Prob2Score (((1-K2())*(1)));

  /* e_Li_e_e */
  transition_scores.transition (e_Li_e_e, e_ILi_e_e) = Prob2Score ((K1()));
  transition_scores.transition (e_Li_e_e, e_BiSiLi_e_e) = Prob2Score ((K1()*pS()));
  transition_scores.end[e_Li_e_e] = Prob2Score ((1-K1()));

  /* e_Si_e_e */
  transition_scores.transition (e_Si_e_e, e_Li_e_e) = Prob2Score (((1-K2())*(1)));
  transition_scores.transition (e_Si_e_e, e_ISi_e_e) = Prob2Score ((K2()));

  /* e_e_Li_e */
  transition_scores.transition (e_e_Li_e, e_e_ILi_e) = Prob2Score ((K1()));
  transition_scores.transition (e_e_Li_e, e_e_BiSiLi_e) = Prob2Score ((K1()*pS()));
  transition_scores.end[e_e_Li_e] = Prob2Score ((1-K1()));

  /* e_e_Si_e */
  transition_scores.transition (e_e_Si_e, e_e_Li_e) = Prob2Score (((1-K2())*(1)));
  transition_scores.transition (e_e_Si_e, e_e_ISi_e) = Prob2Score ((K2()));

  /* e_e_e_Li */
  transition_scores.transition (e_e_e_Li, e_e_e_ILi) = Prob2Score ((K1()));
  transition_scores.transition (e_e_e_Li, e_e_e_BiSiLi) = Prob2Score ((K1()*pS()));
  transition_scores.end[e_e_e_Li] = Prob2Score ((1-K1()));

  /* e_e_e_Si */
  transition_scores.transition (e_e_e_Si, e_e_e_Li) = Prob2Score (((1-K2())*(1)));
  transition_scores.transition (e_e_e_Si, e_e_e_ISi) = Prob2Score ((K2()));

  /* IL_IL_WL_WL */
  transition_scores.transition (IL_IL_WL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_IL_WL_WL, IL_IL_WL_WL) = Prob2Score ((b1(t)));
  transition_scores.transition (IL_IL_WL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_IL_WL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_IL_WL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (IL_IL_WL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (IL_IL_WL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_IL_WL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (IL_IL_WL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (IL_IL_WL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (IL_IL_WL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_IL_WL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (IL_IL_WL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_IL_WL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (IL_IL_WL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_IL_WL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (IL_IL_WL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (IL_IL_WL_WL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[IL_IL_WL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1) * (1));

  /* IL_IL_WL_e */
  transition_scores.transition (IL_IL_WL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
  transition_scores.transition (IL_IL_WL_e, IL_IL_WL_e) = Prob2Score ((b1(t)));
  transition_scores.transition (IL_IL_WL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
  transition_scores.transition (IL_IL_WL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)));
  transition_scores.transition (IL_IL_WL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
  transition_scores.transition (IL_IL_WL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)));
  transition_scores.transition (IL_IL_WL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
  transition_scores.transition (IL_IL_WL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
  transition_scores.transition (IL_IL_WL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
  transition_scores.transition (IL_IL_WL_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[IL_IL_WL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

  /* IL_IL_e_WL */
  transition_scores.transition (IL_IL_e_WL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
  transition_scores.transition (IL_IL_e_WL, IL_IL_e_WL) = Prob2Score ((b1(t)));
  transition_scores.transition (IL_IL_e_WL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
  transition_scores.transition (IL_IL_e_WL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(v)));
  transition_scores.transition (IL_IL_e_WL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
  transition_scores.transition (IL_IL_e_WL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(v)));
  transition_scores.transition (IL_IL_e_WL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
  transition_scores.transition (IL_IL_e_WL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
  transition_scores.transition (IL_IL_e_WL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
  transition_scores.transition (IL_IL_e_WL, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[IL_IL_e_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

  /* IL_IL_e_e */
  transition_scores.transition (IL_IL_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))));
  transition_scores.transition (IL_IL_e_e, IL_IL_e_e) = Prob2Score ((b1(t)));
  transition_scores.transition (IL_IL_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))));
  transition_scores.transition (IL_IL_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))));
  transition_scores.transition (IL_IL_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))));
  transition_scores.transition (IL_IL_e_e, IL_BiSiL_e_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[IL_IL_e_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)));

  /* IL_ML_DL_DL */
  transition_scores.transition (IL_ML_DL_DL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_DL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-g1(u)) * (1-g1(v)));
  transition_scores.transition (IL_ML_DL_DL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_DL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_DL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_DL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_DL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_DL, IL_ML_IL_WL) = Prob2Score ((g1(u)) * (1-g1(v)));
  transition_scores.transition (IL_ML_DL_DL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_DL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_DL, IL_ML_DL_IL) = Prob2Score ((g1(v)));
  transition_scores.transition (IL_ML_DL_DL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_DL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_DL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_DL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_DL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_DL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_DL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_DL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_DL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_DL_DL, IL_ML_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_ML_DL_DL, IL_ML_DL_BiSiL) = Prob2Score ((g1(v)*pS()));
  transition_scores.end[IL_ML_DL_DL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(u))*(1)) * ((1-g1(v))*(1)));

  /* IL_ML_DL_e */
  transition_scores.transition (IL_ML_DL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_DL_e, IL_IL_WL_e) = Prob2Score ((b1(t)) * (1-g1(u)));
  transition_scores.transition (IL_ML_DL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_DL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))));
  transition_scores.transition (IL_ML_DL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))));
  transition_scores.transition (IL_ML_DL_e, IL_ML_IL_e) = Prob2Score ((g1(u)));
  transition_scores.transition (IL_ML_DL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))));
  transition_scores.transition (IL_ML_DL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_DL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))));
  transition_scores.transition (IL_ML_DL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_DL_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_DL_e, IL_ML_BiSiL_e) = Prob2Score ((g1(u)*pS()));
  transition_scores.end[IL_ML_DL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(u))*(1)));

  /* IL_ML_e_DL */
  transition_scores.transition (IL_ML_e_DL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_DL, IL_IL_e_WL) = Prob2Score ((b1(t)) * (1-g1(v)));
  transition_scores.transition (IL_ML_e_DL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_DL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_DL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_DL, IL_ML_e_IL) = Prob2Score ((g1(v)));
  transition_scores.transition (IL_ML_e_DL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_DL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_DL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_DL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_DL, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_e_DL, IL_ML_e_BiSiL) = Prob2Score ((g1(v)*pS()));
  transition_scores.end[IL_ML_e_DL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(v))*(1)));

  /* IL_ML_e_e */
  transition_scores.transition (IL_ML_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))));
  transition_scores.transition (IL_ML_e_e, IL_IL_e_e) = Prob2Score ((b1(t)));
  transition_scores.transition (IL_ML_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))));
  transition_scores.transition (IL_ML_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))));
  transition_scores.transition (IL_ML_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))));
  transition_scores.transition (IL_ML_e_e, IL_BiSiL_e_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[IL_ML_e_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)));

  /* L_IL_WL_WL */
  transition_scores.transition (L_IL_WL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (L_IL_WL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (L_IL_WL_WL, L_IL_WL_WL) = Prob2Score ((b1(t)));
  transition_scores.transition (L_IL_WL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (L_IL_WL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (L_IL_WL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (L_IL_WL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (L_IL_WL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (L_IL_WL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (L_IL_WL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (L_IL_WL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (L_IL_WL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (L_IL_WL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (L_IL_WL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
  transition_scores.transition (L_IL_WL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
  transition_scores.transition (L_IL_WL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
  transition_scores.transition (L_IL_WL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
  transition_scores.transition (L_IL_WL_WL, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[L_IL_WL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1) * (1));

  /* L_IL_WL_e */
  transition_scores.transition (L_IL_WL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
  transition_scores.transition (L_IL_WL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
  transition_scores.transition (L_IL_WL_e, L_IL_WL_e) = Prob2Score ((b1(t)));
  transition_scores.transition (L_IL_WL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)));
  transition_scores.transition (L_IL_WL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
  transition_scores.transition (L_IL_WL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)));
  transition_scores.transition (L_IL_WL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
  transition_scores.transition (L_IL_WL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
  transition_scores.transition (L_IL_WL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
  transition_scores.transition (L_IL_WL_e, L_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[L_IL_WL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

  /* L_IL_e_WL */
  transition_scores.transition (L_IL_e_WL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
  transition_scores.transition (L_IL_e_WL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
  transition_scores.transition (L_IL_e_WL, L_IL_e_WL) = Prob2Score ((b1(t)));
  transition_scores.transition (L_IL_e_WL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(v)));
  transition_scores.transition (L_IL_e_WL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
  transition_scores.transition (L_IL_e_WL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(v)));
  transition_scores.transition (L_IL_e_WL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
  transition_scores.transition (L_IL_e_WL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
  transition_scores.transition (L_IL_e_WL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
  transition_scores.transition (L_IL_e_WL, L_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[L_IL_e_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

  /* L_IL_e_e */
  transition_scores.transition (L_IL_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))));
  transition_scores.transition (L_IL_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))));
  transition_scores.transition (L_IL_e_e, L_IL_e_e) = Prob2Score ((b1(t)));
  transition_scores.transition (L_IL_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))));
  transition_scores.transition (L_IL_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))));
  transition_scores.transition (L_IL_e_e, L_BiSiL_e_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.end[L_IL_e_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)));

  /* e_ILi_e_e */
  transition_scores.transition (e_ILi_e_e, e_ILi_e_e) = Prob2Score ((K1()));
  transition_scores.transition (e_ILi_e_e, e_BiSiLi_e_e) = Prob2Score ((K1()*pS()));
  transition_scores.end[e_ILi_e_e] = Prob2Score ((1-K1()));

  /* IS_IS_WS_WS */
  transition_scores.transition (IS_IS_WS_WS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)) * (1-a2(v)));
  transition_scores.transition (IS_IS_WS_WS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)) * ((1)*(1)));
  transition_scores.transition (IS_IS_WS_WS, IS_IS_WS_WS) = Prob2Score ((b2(t)));
  transition_scores.transition (IS_IS_WS_WS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)) * (1-a2(v)));
  transition_scores.transition (IS_IS_WS_WS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)) * (1-a2(v)));
  transition_scores.transition (IS_IS_WS_WS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)) * (a2(v)));
  transition_scores.transition (IS_IS_WS_WS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)) * (a2(v)));
  transition_scores.transition (IS_IS_WS_WS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)) * (1-a2(v)));
  transition_scores.transition (IS_IS_WS_WS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)) * (a2(v)));
  transition_scores.transition (IS_IS_WS_WS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)) * (a2(v)));

  /* IS_IS_WS_e */
  transition_scores.transition (IS_IS_WS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)));
  transition_scores.transition (IS_IS_WS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)));
  transition_scores.transition (IS_IS_WS_e, IS_IS_WS_e) = Prob2Score ((b2(t)));
  transition_scores.transition (IS_IS_WS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)));
  transition_scores.transition (IS_IS_WS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)));
  transition_scores.transition (IS_IS_WS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)));

  /* IS_IS_e_WS */
  transition_scores.transition (IS_IS_e_WS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(v)));
  transition_scores.transition (IS_IS_e_WS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)));
  transition_scores.transition (IS_IS_e_WS, IS_IS_e_WS) = Prob2Score ((b2(t)));
  transition_scores.transition (IS_IS_e_WS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(v)));
  transition_scores.transition (IS_IS_e_WS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(v)));
  transition_scores.transition (IS_IS_e_WS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(v)));

  /* IS_IS_e_e */
  transition_scores.transition (IS_IS_e_e, IS_DS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))));
  transition_scores.transition (IS_IS_e_e, L_L_e_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))));
  transition_scores.transition (IS_IS_e_e, IS_IS_e_e) = Prob2Score ((b2(t)));
  transition_scores.transition (IS_IS_e_e, IS_MS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))));

  /* IS_MS_DS_DS */
  transition_scores.transition (IS_MS_DS_DS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_DS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
  transition_scores.transition (IS_MS_DS_DS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-g2(u)) * (1-g2(v)));
  transition_scores.transition (IS_MS_DS_DS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_DS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_DS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_DS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_DS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_DS, IS_MS_IS_WS) = Prob2Score ((g2(u)) * (1-g2(v)));
  transition_scores.transition (IS_MS_DS_DS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_DS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_DS, IS_MS_DS_IS) = Prob2Score ((g2(v)));

  /* IS_MS_DS_e */
  transition_scores.transition (IS_MS_DS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))));
  transition_scores.transition (IS_MS_DS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))));
  transition_scores.transition (IS_MS_DS_e, IS_IS_WS_e) = Prob2Score ((b2(t)) * (1-g2(u)));
  transition_scores.transition (IS_MS_DS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))));
  transition_scores.transition (IS_MS_DS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))));
  transition_scores.transition (IS_MS_DS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))));
  transition_scores.transition (IS_MS_DS_e, IS_MS_IS_e) = Prob2Score ((g2(u)));

  /* IS_MS_e_DS */
  transition_scores.transition (IS_MS_e_DS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_e_DS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
  transition_scores.transition (IS_MS_e_DS, IS_IS_e_WS) = Prob2Score ((b2(t)) * (1-g2(v)));
  transition_scores.transition (IS_MS_e_DS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_e_DS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_MS_e_DS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_MS_e_DS, IS_MS_e_IS) = Prob2Score ((g2(v)));

  /* IS_MS_e_e */
  transition_scores.transition (IS_MS_e_e, IS_DS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))));
  transition_scores.transition (IS_MS_e_e, L_L_e_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))));
  transition_scores.transition (IS_MS_e_e, IS_IS_e_e) = Prob2Score ((b2(t)));
  transition_scores.transition (IS_MS_e_e, IS_MS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))));

  /* S_IS_WS_WS */
  transition_scores.transition (S_IS_WS_WS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)) * (1-a2(v)));
  transition_scores.transition (S_IS_WS_WS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)) * ((1)*(1)));
  transition_scores.transition (S_IS_WS_WS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)) * (1-a2(v)));
  transition_scores.transition (S_IS_WS_WS, S_IS_WS_WS) = Prob2Score ((b2(t)));
  transition_scores.transition (S_IS_WS_WS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)) * (1-a2(v)));
  transition_scores.transition (S_IS_WS_WS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)) * (a2(v)));
  transition_scores.transition (S_IS_WS_WS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)) * (a2(v)));
  transition_scores.transition (S_IS_WS_WS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)) * (1-a2(v)));
  transition_scores.transition (S_IS_WS_WS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)) * (a2(v)));
  transition_scores.transition (S_IS_WS_WS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)) * (a2(v)));

  /* S_IS_WS_e */
  transition_scores.transition (S_IS_WS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)));
  transition_scores.transition (S_IS_WS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)));
  transition_scores.transition (S_IS_WS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)));
  transition_scores.transition (S_IS_WS_e, S_IS_WS_e) = Prob2Score ((b2(t)));
  transition_scores.transition (S_IS_WS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)));
  transition_scores.transition (S_IS_WS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)));

  /* S_IS_e_WS */
  transition_scores.transition (S_IS_e_WS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(v)));
  transition_scores.transition (S_IS_e_WS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)));
  transition_scores.transition (S_IS_e_WS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(v)));
  transition_scores.transition (S_IS_e_WS, S_IS_e_WS) = Prob2Score ((b2(t)));
  transition_scores.transition (S_IS_e_WS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(v)));
  transition_scores.transition (S_IS_e_WS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(v)));

  /* S_IS_e_e */
  transition_scores.transition (S_IS_e_e, IS_DS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))));
  transition_scores.transition (S_IS_e_e, L_L_e_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))));
  transition_scores.transition (S_IS_e_e, IS_MS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))));
  transition_scores.transition (S_IS_e_e, S_IS_e_e) = Prob2Score ((b2(t)));

  /* e_ISi_e_e */
  transition_scores.transition (e_ISi_e_e, e_Li_e_e) = Prob2Score (((1-K2())*(1)));
  transition_scores.transition (e_ISi_e_e, e_ISi_e_e) = Prob2Score ((K2()));

  /* IS_MS_MS_DS */
  transition_scores.transition (IS_MS_MS_DS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_DS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
  transition_scores.transition (IS_MS_MS_DS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)) * (1-g2(v)));
  transition_scores.transition (IS_MS_MS_DS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_DS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_DS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_DS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_DS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_DS, IS_MS_IS_WS) = Prob2Score ((b2(u)) * (1-g2(v)));
  transition_scores.transition (IS_MS_MS_DS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_DS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_DS, IS_MS_MS_IS) = Prob2Score ((g2(v)));

  /* IS_MS_MS_e */
  transition_scores.transition (IS_MS_MS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (IS_MS_MS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
  transition_scores.transition (IS_MS_MS_e, IS_IS_WS_e) = Prob2Score ((b2(t)) * (1-b2(u)));
  transition_scores.transition (IS_MS_MS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (IS_MS_MS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (IS_MS_MS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (IS_MS_MS_e, IS_MS_IS_e) = Prob2Score ((b2(u)));

  /* IS_MS_MS_MS */
  transition_scores.transition (IS_MS_MS_MS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_MS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_MS_MS_MS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)) * (1-b2(v)));
  transition_scores.transition (IS_MS_MS_MS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_MS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_MS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_MS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_MS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_MS, IS_MS_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
  transition_scores.transition (IS_MS_MS_MS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_MS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_MS, IS_MS_MS_IS) = Prob2Score ((b2(v)));

  /* IS_MS_DS_MS */
  transition_scores.transition (IS_MS_DS_MS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_MS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_MS_DS_MS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-g2(u)) * (1-b2(v)));
  transition_scores.transition (IS_MS_DS_MS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_MS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_MS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_MS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_MS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_MS, IS_MS_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
  transition_scores.transition (IS_MS_DS_MS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_MS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_MS, IS_MS_DS_IS) = Prob2Score ((b2(v)));

  /* IS_MS_e_MS */
  transition_scores.transition (IS_MS_e_MS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_e_MS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_MS_e_MS, IS_IS_e_WS) = Prob2Score ((b2(t)) * (1-b2(v)));
  transition_scores.transition (IS_MS_e_MS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_e_MS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_e_MS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_e_MS, IS_MS_e_IS) = Prob2Score ((b2(v)));

  /* IL_ML_ML_DL */
  transition_scores.transition (IL_ML_ML_DL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_DL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-g1(v)));
  transition_scores.transition (IL_ML_ML_DL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_DL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_DL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_DL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_DL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_DL, IL_ML_IL_WL) = Prob2Score ((b1(u)) * (1-g1(v)));
  transition_scores.transition (IL_ML_ML_DL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_DL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_DL, IL_ML_ML_IL) = Prob2Score ((g1(v)));
  transition_scores.transition (IL_ML_ML_DL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_DL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_DL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_DL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_DL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_DL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_DL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_DL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_DL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_ML_DL, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_ML_ML_DL, IL_ML_ML_BiSiL) = Prob2Score ((g1(v)*pS()));
  transition_scores.end[IL_ML_ML_DL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-g1(v))*(1)));

  /* IL_ML_ML_e */
  transition_scores.transition (IL_ML_ML_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_ML_e, IL_IL_WL_e) = Prob2Score ((b1(t)) * (1-b1(u)));
  transition_scores.transition (IL_ML_ML_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_ML_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_ML_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_ML_e, IL_ML_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_ML_ML_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_ML_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_ML_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_ML_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_ML_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_ML_e, IL_ML_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_ML_ML_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)));

  /* IL_ML_ML_ML */
  transition_scores.transition (IL_ML_ML_ML, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_ML, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_ML_ML, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_ML, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_ML, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_ML, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_ML, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_ML, IL_ML_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_ML_ML, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_ML, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_ML, IL_ML_ML_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_ML_ML_ML, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_ML, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_ML, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_ML, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_ML, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_ML, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_ML, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_ML, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_ML, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_ML_ML, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_ML_ML_ML, IL_ML_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_ML_ML_ML] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_ML_DL_ML */
  transition_scores.transition (IL_ML_DL_ML, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_ML, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_DL_ML, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_ML, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_ML, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_ML, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_ML, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_ML, IL_ML_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_DL_ML, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_ML, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_ML, IL_ML_DL_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_ML_DL_ML, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_ML, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_ML, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_ML, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_ML, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_ML, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_ML, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_ML, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_ML, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_DL_ML, IL_ML_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_ML_DL_ML, IL_ML_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_ML_DL_ML] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_ML_e_ML */
  transition_scores.transition (IL_ML_e_ML, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_ML, IL_IL_e_WL) = Prob2Score ((b1(t)) * (1-b1(v)));
  transition_scores.transition (IL_ML_e_ML, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_ML, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_ML, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_ML, IL_ML_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_ML_e_ML, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_ML, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_ML, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_ML, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_ML, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_e_ML, IL_ML_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_ML_e_ML] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(v))*(1)));

  /* IL_DL_IL_WL */
  transition_scores.transition (IL_DL_IL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_IL_WL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)));
  transition_scores.transition (IL_DL_IL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_IL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_IL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_IL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_IL_WL, IL_DL_IL_WL) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_DL_IL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_IL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_IL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_IL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_IL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_IL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_IL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_IL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_IL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_IL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_DL_IL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_DL_IL_WL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_IL_WL, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_DL_IL_WL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * (1));

  /* IL_DL_IL_e */
  transition_scores.transition (IL_DL_IL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_IL_e, IL_IL_WL_e) = Prob2Score ((g1(t)) * (1-b1(u)));
  transition_scores.transition (IL_DL_IL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_IL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_IL_e, IL_DL_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_DL_IL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_IL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_IL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_IL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_IL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_IL_e, IL_BiSiL_WL_e) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_IL_e, IL_DL_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_DL_IL_e] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)));

  /* IL_DL_ML_DL */
  transition_scores.transition (IL_DL_ML_DL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_DL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)) * (1-g1(v)));
  transition_scores.transition (IL_DL_ML_DL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_DL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_DL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_DL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_DL, IL_DL_IL_WL) = Prob2Score ((b1(u)) * (1-g1(v)));
  transition_scores.transition (IL_DL_ML_DL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_DL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_DL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_DL, IL_DL_ML_IL) = Prob2Score ((g1(v)));
  transition_scores.transition (IL_DL_ML_DL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_DL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_DL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_DL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_DL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_DL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_DL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_DL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_DL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_ML_DL, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_DL_ML_DL, IL_DL_ML_BiSiL) = Prob2Score ((g1(v)*pS()));
  transition_scores.end[IL_DL_ML_DL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * ((1-g1(v))*(1)));

  /* IL_DL_ML_e */
  transition_scores.transition (IL_DL_ML_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_ML_e, IL_IL_WL_e) = Prob2Score ((g1(t)) * (1-b1(u)));
  transition_scores.transition (IL_DL_ML_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_ML_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_ML_e, IL_DL_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_DL_ML_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_ML_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_ML_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_ML_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_DL_ML_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_DL_ML_e, IL_BiSiL_WL_e) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_ML_e, IL_DL_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_DL_ML_e] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)));

  /* IL_ML_IL_WL */
  transition_scores.transition (IL_ML_IL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_IL_WL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)));
  transition_scores.transition (IL_ML_IL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_IL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_IL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_IL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_IL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_IL_WL, IL_ML_IL_WL) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_ML_IL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_IL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_IL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_IL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_IL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_IL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_IL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_IL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_IL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_ML_IL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_ML_IL_WL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_IL_WL, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_ML_IL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * (1));

  /* IL_ML_IL_e */
  transition_scores.transition (IL_ML_IL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_IL_e, IL_IL_WL_e) = Prob2Score ((b1(t)) * (1-b1(u)));
  transition_scores.transition (IL_ML_IL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_IL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_IL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_IL_e, IL_ML_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_ML_IL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_IL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_IL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_ML_IL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_ML_IL_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_IL_e, IL_ML_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_ML_IL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)));

  /* IL_e_IL_WL */
  transition_scores.transition (IL_e_IL_WL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_e_IL_WL, IL_e_IL_WL) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_e_IL_WL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_e_IL_WL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_e_IL_WL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_e_IL_WL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (IL_e_IL_WL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_e_IL_WL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (IL_e_IL_WL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (IL_e_IL_WL, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_e_IL_WL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * (1));

  /* IL_e_IL_e */
  transition_scores.transition (IL_e_IL_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_e_IL_e, IL_e_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_e_IL_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_e_IL_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_e_IL_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_e_IL_e, IL_e_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_e_IL_e] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)));

  /* IL_e_ML_DL */
  transition_scores.transition (IL_e_ML_DL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_DL, IL_e_IL_WL) = Prob2Score ((b1(u)) * (1-g1(v)));
  transition_scores.transition (IL_e_ML_DL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_DL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_DL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_DL, IL_e_ML_IL) = Prob2Score ((g1(v)));
  transition_scores.transition (IL_e_ML_DL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_DL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_DL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_DL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_DL, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_e_ML_DL, IL_e_ML_BiSiL) = Prob2Score ((g1(v)*pS()));
  transition_scores.end[IL_e_ML_DL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-g1(v))*(1)));

  /* IL_e_ML_e */
  transition_scores.transition (IL_e_ML_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_e_ML_e, IL_e_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (IL_e_ML_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_e_ML_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (IL_e_ML_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (IL_e_ML_e, IL_e_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[IL_e_ML_e] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)));

  /* L_L_IL_WL */
  transition_scores.transition (L_L_IL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_IL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_IL_WL, L_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)));
  transition_scores.transition (L_L_IL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_IL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_L_IL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_L_IL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_IL_WL, L_L_IL_WL) = Prob2Score ((b1(u)));
  transition_scores.transition (L_L_IL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_L_IL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_L_IL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_L_IL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_IL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_L_IL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_IL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_L_IL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_IL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_L_IL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_L_IL_WL, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (L_L_IL_WL, L_L_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[L_L_IL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * (1));

  /* L_L_IL_e */
  transition_scores.transition (L_L_IL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_L_IL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_L_IL_e, L_IL_WL_e) = Prob2Score ((b1(t)) * (1-b1(u)));
  transition_scores.transition (L_L_IL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_L_IL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_L_IL_e, L_L_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (L_L_IL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_L_IL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_L_IL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_L_IL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_L_IL_e, L_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (L_L_IL_e, L_L_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[L_L_IL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)));

  /* L_e_IL_WL */
  transition_scores.transition (L_e_IL_WL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_e_IL_WL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_e_IL_WL, L_e_IL_WL) = Prob2Score ((b1(u)));
  transition_scores.transition (L_e_IL_WL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_e_IL_WL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_e_IL_WL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (a1(v)));
  transition_scores.transition (L_e_IL_WL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
  transition_scores.transition (L_e_IL_WL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
  transition_scores.transition (L_e_IL_WL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
  transition_scores.transition (L_e_IL_WL, L_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[L_e_IL_WL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * (1));

  /* L_e_IL_e */
  transition_scores.transition (L_e_IL_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_e_IL_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_e_IL_e, L_e_IL_e) = Prob2Score ((b1(u)));
  transition_scores.transition (L_e_IL_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))));
  transition_scores.transition (L_e_IL_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))));
  transition_scores.transition (L_e_IL_e, L_e_BiSiL_e) = Prob2Score ((b1(u)*pS()));
  transition_scores.end[L_e_IL_e] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)));

  /* e_e_ILi_e */
  transition_scores.transition (e_e_ILi_e, e_e_ILi_e) = Prob2Score ((K1()));
  transition_scores.transition (e_e_ILi_e, e_e_BiSiLi_e) = Prob2Score ((K1()*pS()));
  transition_scores.end[e_e_ILi_e] = Prob2Score ((1-K1()));

  /* IS_DS_IS_WS */
  transition_scores.transition (IS_DS_IS_WS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
  transition_scores.transition (IS_DS_IS_WS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1)*(1)));
  transition_scores.transition (IS_DS_IS_WS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-b2(u)));
  transition_scores.transition (IS_DS_IS_WS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
  transition_scores.transition (IS_DS_IS_WS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
  transition_scores.transition (IS_DS_IS_WS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
  transition_scores.transition (IS_DS_IS_WS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));
  transition_scores.transition (IS_DS_IS_WS, IS_DS_IS_WS) = Prob2Score ((b2(u)));
  transition_scores.transition (IS_DS_IS_WS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
  transition_scores.transition (IS_DS_IS_WS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
  transition_scores.transition (IS_DS_IS_WS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));

  /* IS_DS_IS_e */
  transition_scores.transition (IS_DS_IS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (IS_DS_IS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
  transition_scores.transition (IS_DS_IS_e, IS_IS_WS_e) = Prob2Score ((g2(t)) * (1-b2(u)));
  transition_scores.transition (IS_DS_IS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (IS_DS_IS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (IS_DS_IS_e, IS_DS_IS_e) = Prob2Score ((b2(u)));
  transition_scores.transition (IS_DS_IS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));

  /* IS_DS_MS_DS */
  transition_scores.transition (IS_DS_MS_DS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_DS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
  transition_scores.transition (IS_DS_MS_DS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-b2(u)) * (1-g2(v)));
  transition_scores.transition (IS_DS_MS_DS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_DS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_DS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_DS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_DS, IS_DS_IS_WS) = Prob2Score ((b2(u)) * (1-g2(v)));
  transition_scores.transition (IS_DS_MS_DS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_DS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_DS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_DS, IS_DS_MS_IS) = Prob2Score ((g2(v)));

  /* IS_DS_MS_e */
  transition_scores.transition (IS_DS_MS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (IS_DS_MS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
  transition_scores.transition (IS_DS_MS_e, IS_IS_WS_e) = Prob2Score ((g2(t)) * (1-b2(u)));
  transition_scores.transition (IS_DS_MS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (IS_DS_MS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (IS_DS_MS_e, IS_DS_IS_e) = Prob2Score ((b2(u)));
  transition_scores.transition (IS_DS_MS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));

  /* IS_MS_IS_WS */
  transition_scores.transition (IS_MS_IS_WS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
  transition_scores.transition (IS_MS_IS_WS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1)*(1)));
  transition_scores.transition (IS_MS_IS_WS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)));
  transition_scores.transition (IS_MS_IS_WS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
  transition_scores.transition (IS_MS_IS_WS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
  transition_scores.transition (IS_MS_IS_WS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
  transition_scores.transition (IS_MS_IS_WS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));
  transition_scores.transition (IS_MS_IS_WS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
  transition_scores.transition (IS_MS_IS_WS, IS_MS_IS_WS) = Prob2Score ((b2(u)));
  transition_scores.transition (IS_MS_IS_WS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
  transition_scores.transition (IS_MS_IS_WS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));

  /* IS_MS_IS_e */
  transition_scores.transition (IS_MS_IS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (IS_MS_IS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
  transition_scores.transition (IS_MS_IS_e, IS_IS_WS_e) = Prob2Score ((b2(t)) * (1-b2(u)));
  transition_scores.transition (IS_MS_IS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (IS_MS_IS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (IS_MS_IS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (IS_MS_IS_e, IS_MS_IS_e) = Prob2Score ((b2(u)));

  /* IS_e_IS_WS */
  transition_scores.transition (IS_e_IS_WS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
  transition_scores.transition (IS_e_IS_WS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1)*(1)));
  transition_scores.transition (IS_e_IS_WS, IS_e_IS_WS) = Prob2Score ((b2(u)));
  transition_scores.transition (IS_e_IS_WS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
  transition_scores.transition (IS_e_IS_WS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * (a2(v)));
  transition_scores.transition (IS_e_IS_WS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * (a2(v)));

  /* IS_e_IS_e */
  transition_scores.transition (IS_e_IS_e, IS_e_DS_e) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (IS_e_IS_e, L_e_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))));
  transition_scores.transition (IS_e_IS_e, IS_e_IS_e) = Prob2Score ((b2(u)));
  transition_scores.transition (IS_e_IS_e, IS_e_MS_e) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))));

  /* IS_e_MS_DS */
  transition_scores.transition (IS_e_MS_DS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_MS_DS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
  transition_scores.transition (IS_e_MS_DS, IS_e_IS_WS) = Prob2Score ((b2(u)) * (1-g2(v)));
  transition_scores.transition (IS_e_MS_DS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_MS_DS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_e_MS_DS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
  transition_scores.transition (IS_e_MS_DS, IS_e_MS_IS) = Prob2Score ((g2(v)));

  /* IS_e_MS_e */
  transition_scores.transition (IS_e_MS_e, IS_e_DS_e) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (IS_e_MS_e, L_e_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))));
  transition_scores.transition (IS_e_MS_e, IS_e_IS_e) = Prob2Score ((b2(u)));
  transition_scores.transition (IS_e_MS_e, IS_e_MS_e) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))));

  /* S_S_IS_WS */
  transition_scores.transition (S_S_IS_WS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
  transition_scores.transition (S_S_IS_WS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1)*(1)));
  transition_scores.transition (S_S_IS_WS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
  transition_scores.transition (S_S_IS_WS, S_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)));
  transition_scores.transition (S_S_IS_WS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
  transition_scores.transition (S_S_IS_WS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
  transition_scores.transition (S_S_IS_WS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));
  transition_scores.transition (S_S_IS_WS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
  transition_scores.transition (S_S_IS_WS, S_S_IS_WS) = Prob2Score ((b2(u)));
  transition_scores.transition (S_S_IS_WS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
  transition_scores.transition (S_S_IS_WS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));

  /* S_S_IS_e */
  transition_scores.transition (S_S_IS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (S_S_IS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
  transition_scores.transition (S_S_IS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (S_S_IS_e, S_IS_WS_e) = Prob2Score ((b2(t)) * (1-b2(u)));
  transition_scores.transition (S_S_IS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (S_S_IS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (S_S_IS_e, S_S_IS_e) = Prob2Score ((b2(u)));

  /* S_e_IS_WS */
  transition_scores.transition (S_e_IS_WS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
  transition_scores.transition (S_e_IS_WS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1)*(1)));
  transition_scores.transition (S_e_IS_WS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
  transition_scores.transition (S_e_IS_WS, S_e_IS_WS) = Prob2Score ((b2(u)));
  transition_scores.transition (S_e_IS_WS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * (a2(v)));
  transition_scores.transition (S_e_IS_WS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * (a2(v)));

  /* S_e_IS_e */
  transition_scores.transition (S_e_IS_e, IS_e_DS_e) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))));
  transition_scores.transition (S_e_IS_e, L_e_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))));
  transition_scores.transition (S_e_IS_e, IS_e_MS_e) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))));
  transition_scores.transition (S_e_IS_e, S_e_IS_e) = Prob2Score ((b2(u)));

  /* e_e_ISi_e */
  transition_scores.transition (e_e_ISi_e, e_e_Li_e) = Prob2Score (((1-K2())*(1)));
  transition_scores.transition (e_e_ISi_e, e_e_ISi_e) = Prob2Score ((K2()));

  /* IS_DS_MS_MS */
  transition_scores.transition (IS_DS_MS_MS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_MS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_DS_MS_MS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-b2(u)) * (1-b2(v)));
  transition_scores.transition (IS_DS_MS_MS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_MS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_MS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_MS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_MS, IS_DS_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
  transition_scores.transition (IS_DS_MS_MS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_MS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_MS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_MS, IS_DS_MS_IS) = Prob2Score ((b2(v)));

  /* IS_e_MS_MS */
  transition_scores.transition (IS_e_MS_MS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_MS_MS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_e_MS_MS, IS_e_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
  transition_scores.transition (IS_e_MS_MS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_MS_MS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_e_MS_MS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_e_MS_MS, IS_e_MS_IS) = Prob2Score ((b2(v)));

  /* IL_DL_ML_ML */
  transition_scores.transition (IL_DL_ML_ML, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_ML, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_ML_ML, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_ML, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_ML, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_ML, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_ML, IL_DL_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_ML_ML, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_ML, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_ML, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_ML, IL_DL_ML_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_DL_ML_ML, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_ML, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_ML, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_ML, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_ML, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_ML, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_ML, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_ML, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_ML, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_ML_ML, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_DL_ML_ML, IL_DL_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_DL_ML_ML] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_e_ML_ML */
  transition_scores.transition (IL_e_ML_ML, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_ML, IL_e_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_e_ML_ML, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_ML, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_ML, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_ML, IL_e_ML_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_e_ML_ML, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_ML, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_ML, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_ML, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_ML, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_e_ML_ML, IL_e_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_e_ML_ML] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_DL_DL_IL */
  transition_scores.transition (IL_DL_DL_IL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_IL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_DL_IL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_IL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_IL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_IL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_IL, IL_DL_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_DL_IL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_IL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_IL, IL_DL_DL_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_DL_DL_IL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_IL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_IL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_IL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_IL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_IL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_IL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_IL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_IL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_IL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_DL_IL, IL_DL_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_DL_DL_IL, IL_DL_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_DL_DL_IL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_DL_DL_ML */
  transition_scores.transition (IL_DL_DL_ML, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_ML, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_DL_ML, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_ML, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_ML, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_ML, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_ML, IL_DL_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_DL_ML, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_ML, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_ML, IL_DL_DL_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_DL_DL_ML, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_ML, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_ML, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_ML, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_ML, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_ML, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_ML, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_ML, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_DL_ML, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_DL_ML, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_DL_ML, IL_DL_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_DL_DL_ML, IL_DL_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_DL_DL_ML] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_DL_ML_IL */
  transition_scores.transition (IL_DL_ML_IL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_IL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_ML_IL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_IL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_IL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_IL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_IL, IL_DL_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_DL_ML_IL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_IL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_IL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_IL, IL_DL_ML_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_DL_ML_IL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_IL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_IL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_IL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_IL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_IL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_IL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_ML_IL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_ML_IL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_ML_IL, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_DL_ML_IL, IL_DL_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_DL_ML_IL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_DL_e_IL */
  transition_scores.transition (IL_DL_e_IL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_IL, IL_IL_e_WL) = Prob2Score ((g1(t)) * (1-b1(v)));
  transition_scores.transition (IL_DL_e_IL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_IL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_IL, IL_DL_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_DL_e_IL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_IL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_IL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_IL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_IL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_IL, IL_BiSiL_e_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_e_IL, IL_DL_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_DL_e_IL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(v))*(1)));

  /* IL_DL_e_ML */
  transition_scores.transition (IL_DL_e_ML, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_ML, IL_IL_e_WL) = Prob2Score ((g1(t)) * (1-b1(v)));
  transition_scores.transition (IL_DL_e_ML, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_ML, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_ML, IL_DL_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_DL_e_ML, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_ML, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_ML, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_ML, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_DL_e_ML, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_DL_e_ML, IL_BiSiL_e_WL) = Prob2Score ((g1(t)*pS()));
  transition_scores.transition (IL_DL_e_ML, IL_DL_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_DL_e_ML] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(v))*(1)));

  /* IL_ML_DL_IL */
  transition_scores.transition (IL_ML_DL_IL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_IL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_DL_IL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_IL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_IL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_IL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_IL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_IL, IL_ML_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_DL_IL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_IL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_IL, IL_ML_DL_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_ML_DL_IL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_IL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_IL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_IL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_IL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_IL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_IL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_DL_IL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_DL_IL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_DL_IL, IL_ML_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_ML_DL_IL, IL_ML_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_ML_DL_IL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_ML_ML_IL */
  transition_scores.transition (IL_ML_ML_IL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_IL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_ML_IL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_IL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_IL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_IL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_IL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_IL, IL_ML_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_ML_ML_IL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_IL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_IL, IL_ML_ML_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_ML_ML_IL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_IL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_IL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_IL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_IL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_IL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_IL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_ML_IL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_ML_IL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_ML_IL, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_ML_ML_IL, IL_ML_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_ML_ML_IL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_ML_e_IL */
  transition_scores.transition (IL_ML_e_IL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_IL, IL_IL_e_WL) = Prob2Score ((b1(t)) * (1-b1(v)));
  transition_scores.transition (IL_ML_e_IL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_IL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_IL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_IL, IL_ML_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_ML_e_IL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_IL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_IL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_ML_e_IL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_ML_e_IL, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (IL_ML_e_IL, IL_ML_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_ML_e_IL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(v))*(1)));

  /* IL_e_DL_IL */
  transition_scores.transition (IL_e_DL_IL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_IL, IL_e_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_e_DL_IL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_IL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_IL, IL_e_DL_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_e_DL_IL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_IL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_IL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_IL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_IL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_IL, IL_e_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_e_DL_IL, IL_e_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_e_DL_IL] = Prob2Score ((1-K1()) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_e_DL_ML */
  transition_scores.transition (IL_e_DL_ML, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_ML, IL_e_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
  transition_scores.transition (IL_e_DL_ML, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_ML, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_ML, IL_e_DL_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_e_DL_ML, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_ML, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_ML, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_ML, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_DL_ML, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_DL_ML, IL_e_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
  transition_scores.transition (IL_e_DL_ML, IL_e_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_e_DL_ML] = Prob2Score ((1-K1()) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_e_ML_IL */
  transition_scores.transition (IL_e_ML_IL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_IL, IL_e_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (IL_e_ML_IL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_IL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_IL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_IL, IL_e_ML_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_e_ML_IL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_IL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_IL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_ML_IL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_ML_IL, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (IL_e_ML_IL, IL_e_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_e_ML_IL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* IL_e_e_IL */
  transition_scores.transition (IL_e_e_IL, IL_e_e_DL) = Prob2Score ((K1()) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_e_IL, IL_e_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_e_e_IL, IL_e_e_ML) = Prob2Score ((K1()) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_e_IL, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_e_IL, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_e_IL, IL_e_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_e_e_IL] = Prob2Score ((1-K1()) * ((1-b1(v))*(1)));

  /* IL_e_e_ML */
  transition_scores.transition (IL_e_e_ML, IL_e_e_DL) = Prob2Score ((K1()) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_e_ML, IL_e_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (IL_e_e_ML, IL_e_e_ML) = Prob2Score ((K1()) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_e_ML, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (IL_e_e_ML, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (IL_e_e_ML, IL_e_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[IL_e_e_ML] = Prob2Score ((1-K1()) * ((1-b1(v))*(1)));

  /* L_L_L_IL */
  transition_scores.transition (L_L_L_IL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_IL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_IL, L_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-b1(v)));
  transition_scores.transition (L_L_L_IL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_IL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_IL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_IL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_IL, L_L_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (L_L_L_IL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_IL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_IL, L_L_L_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (L_L_L_IL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_IL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_IL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_IL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_IL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_IL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_IL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_L_IL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_L_IL, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (L_L_L_IL, L_L_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (L_L_L_IL, L_L_L_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[L_L_L_IL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* L_L_e_IL */
  transition_scores.transition (L_L_e_IL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_e_IL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_e_IL, L_IL_e_WL) = Prob2Score ((b1(t)) * (1-b1(v)));
  transition_scores.transition (L_L_e_IL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_e_IL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_e_IL, L_L_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (L_L_e_IL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_e_IL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_e_IL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_L_e_IL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_L_e_IL, L_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
  transition_scores.transition (L_L_e_IL, L_L_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[L_L_e_IL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(v))*(1)));

  /* L_e_L_IL */
  transition_scores.transition (L_e_L_IL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_L_IL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_L_IL, L_e_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
  transition_scores.transition (L_e_L_IL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_L_IL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_L_IL, L_e_L_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (L_e_L_IL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_L_IL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_L_IL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_L_IL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_L_IL, L_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
  transition_scores.transition (L_e_L_IL, L_e_L_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[L_e_L_IL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

  /* L_e_e_IL */
  transition_scores.transition (L_e_e_IL, IL_e_e_DL) = Prob2Score ((K1()) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_e_IL, IL_e_e_ML) = Prob2Score ((K1()) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_e_IL, L_e_e_IL) = Prob2Score ((b1(v)));
  transition_scores.transition (L_e_e_IL, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(a1(v))));
  transition_scores.transition (L_e_e_IL, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(1-a1(v))));
  transition_scores.transition (L_e_e_IL, L_e_e_BiSiL) = Prob2Score ((b1(v)*pS()));
  transition_scores.end[L_e_e_IL] = Prob2Score ((1-K1()) * ((1-b1(v))*(1)));

  /* e_e_e_ILi */
  transition_scores.transition (e_e_e_ILi, e_e_e_ILi) = Prob2Score ((K1()));
  transition_scores.transition (e_e_e_ILi, e_e_e_BiSiLi) = Prob2Score ((K1()*pS()));
  transition_scores.end[e_e_e_ILi] = Prob2Score ((1-K1()));

  /* IS_DS_DS_IS */
  transition_scores.transition (IS_DS_DS_IS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_IS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_DS_DS_IS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-g2(u)) * (1-b2(v)));
  transition_scores.transition (IS_DS_DS_IS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_IS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_IS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_DS_IS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_DS_IS, IS_DS_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
  transition_scores.transition (IS_DS_DS_IS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_IS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_DS_IS, IS_DS_DS_IS) = Prob2Score ((b2(v)));
  transition_scores.transition (IS_DS_DS_IS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));

  /* IS_DS_DS_MS */
  transition_scores.transition (IS_DS_DS_MS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_MS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_DS_DS_MS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-g2(u)) * (1-b2(v)));
  transition_scores.transition (IS_DS_DS_MS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_MS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_MS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_DS_MS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_DS_MS, IS_DS_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
  transition_scores.transition (IS_DS_DS_MS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_DS_MS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_DS_MS, IS_DS_DS_IS) = Prob2Score ((b2(v)));
  transition_scores.transition (IS_DS_DS_MS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));

  /* IS_DS_MS_IS */
  transition_scores.transition (IS_DS_MS_IS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_IS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_DS_MS_IS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-b2(u)) * (1-b2(v)));
  transition_scores.transition (IS_DS_MS_IS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_IS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_IS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_IS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_IS, IS_DS_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
  transition_scores.transition (IS_DS_MS_IS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_MS_IS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_IS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_MS_IS, IS_DS_MS_IS) = Prob2Score ((b2(v)));

  /* IS_DS_e_IS */
  transition_scores.transition (IS_DS_e_IS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_e_IS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_DS_e_IS, IS_IS_e_WS) = Prob2Score ((g2(t)) * (1-b2(v)));
  transition_scores.transition (IS_DS_e_IS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_e_IS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_e_IS, IS_DS_e_IS) = Prob2Score ((b2(v)));
  transition_scores.transition (IS_DS_e_IS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));

  /* IS_DS_e_MS */
  transition_scores.transition (IS_DS_e_MS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_e_MS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_DS_e_MS, IS_IS_e_WS) = Prob2Score ((g2(t)) * (1-b2(v)));
  transition_scores.transition (IS_DS_e_MS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_DS_e_MS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_DS_e_MS, IS_DS_e_IS) = Prob2Score ((b2(v)));
  transition_scores.transition (IS_DS_e_MS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));

  /* IS_MS_DS_IS */
  transition_scores.transition (IS_MS_DS_IS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_IS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_MS_DS_IS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-g2(u)) * (1-b2(v)));
  transition_scores.transition (IS_MS_DS_IS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_IS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_IS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_IS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_IS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_DS_IS, IS_MS_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
  transition_scores.transition (IS_MS_DS_IS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_IS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_DS_IS, IS_MS_DS_IS) = Prob2Score ((b2(v)));

  /* IS_MS_MS_IS */
  transition_scores.transition (IS_MS_MS_IS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_IS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_MS_MS_IS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)) * (1-b2(v)));
  transition_scores.transition (IS_MS_MS_IS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_IS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_IS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_IS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_IS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_MS_IS, IS_MS_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
  transition_scores.transition (IS_MS_MS_IS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_IS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_MS_IS, IS_MS_MS_IS) = Prob2Score ((b2(v)));

  /* IS_MS_e_IS */
  transition_scores.transition (IS_MS_e_IS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_e_IS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_MS_e_IS, IS_IS_e_WS) = Prob2Score ((b2(t)) * (1-b2(v)));
  transition_scores.transition (IS_MS_e_IS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_MS_e_IS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_e_IS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_MS_e_IS, IS_MS_e_IS) = Prob2Score ((b2(v)));

  /* IS_e_DS_IS */
  transition_scores.transition (IS_e_DS_IS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_DS_IS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_e_DS_IS, IS_e_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
  transition_scores.transition (IS_e_DS_IS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_DS_IS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_e_DS_IS, IS_e_DS_IS) = Prob2Score ((b2(v)));
  transition_scores.transition (IS_e_DS_IS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));

  /* IS_e_DS_MS */
  transition_scores.transition (IS_e_DS_MS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_DS_MS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_e_DS_MS, IS_e_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
  transition_scores.transition (IS_e_DS_MS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_DS_MS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_e_DS_MS, IS_e_DS_IS) = Prob2Score ((b2(v)));
  transition_scores.transition (IS_e_DS_MS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));

  /* IS_e_MS_IS */
  transition_scores.transition (IS_e_MS_IS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_MS_IS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_e_MS_IS, IS_e_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
  transition_scores.transition (IS_e_MS_IS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_MS_IS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_e_MS_IS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (IS_e_MS_IS, IS_e_MS_IS) = Prob2Score ((b2(v)));

  /* IS_e_e_IS */
  transition_scores.transition (IS_e_e_IS, IS_e_e_DS) = Prob2Score ((K2()) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_e_IS, L_e_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_e_e_IS, IS_e_e_IS) = Prob2Score ((b2(v)));
  transition_scores.transition (IS_e_e_IS, IS_e_e_MS) = Prob2Score ((K2()) * ((1-b2(v))*(a2(v))));

  /* IS_e_e_MS */
  transition_scores.transition (IS_e_e_MS, IS_e_e_DS) = Prob2Score ((K2()) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (IS_e_e_MS, L_e_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (IS_e_e_MS, IS_e_e_IS) = Prob2Score ((b2(v)));
  transition_scores.transition (IS_e_e_MS, IS_e_e_MS) = Prob2Score ((K2()) * ((1-b2(v))*(a2(v))));

  /* S_S_S_IS */
  transition_scores.transition (S_S_S_IS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_S_IS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (S_S_S_IS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_S_IS, S_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)) * (1-b2(v)));
  transition_scores.transition (S_S_S_IS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_S_IS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_S_IS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_S_IS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_S_IS, S_S_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
  transition_scores.transition (S_S_S_IS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_S_IS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_S_IS, S_S_S_IS) = Prob2Score ((b2(v)));

  /* S_S_e_IS */
  transition_scores.transition (S_S_e_IS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_e_IS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (S_S_e_IS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_S_e_IS, S_IS_e_WS) = Prob2Score ((b2(t)) * (1-b2(v)));
  transition_scores.transition (S_S_e_IS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_e_IS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_S_e_IS, S_S_e_IS) = Prob2Score ((b2(v)));

  /* S_e_S_IS */
  transition_scores.transition (S_e_S_IS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_e_S_IS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (S_e_S_IS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_e_S_IS, S_e_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
  transition_scores.transition (S_e_S_IS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_e_S_IS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_e_S_IS, S_e_S_IS) = Prob2Score ((b2(v)));

  /* S_e_e_IS */
  transition_scores.transition (S_e_e_IS, IS_e_e_DS) = Prob2Score ((K2()) * ((1-b2(v))*(1-a2(v))));
  transition_scores.transition (S_e_e_IS, L_e_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(v))*((1)*(1))));
  transition_scores.transition (S_e_e_IS, IS_e_e_MS) = Prob2Score ((K2()) * ((1-b2(v))*(a2(v))));
  transition_scores.transition (S_e_e_IS, S_e_e_IS) = Prob2Score ((b2(v)));

  /* e_e_e_ISi */
  transition_scores.transition (e_e_e_ISi, e_e_e_Li) = Prob2Score (((1-K2())*(1)));
  transition_scores.transition (e_e_e_ISi, e_e_e_ISi) = Prob2Score ((K2()));

}

void TKFST_Triplet_SCFG::init_direct_transition_scores()
{

  /*
   * transition_scores initialization: effective direct transitions 
   * due to half-empty bifurcations 
   */
  /* 
   * IL_DL_DL_DL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
   *   L_L_L_L -> End
   *   S_S_S_S
   * giving an effective transition
   *   IL_DL_DL_DL -> S_S_S_S
   */
  transition_scores.transition (IL_DL_DL_DL, S_S_S_S) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_DL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
   *   L_L_L_L -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_DL_DL_DL -> S_S_S_e
   */
  transition_scores.transition (IL_DL_DL_DL, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_DL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
   *   L_L_L_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_DL_DL_DL -> S_S_e_S
   */
  transition_scores.transition (IL_DL_DL_DL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_DL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
   *   L_L_L_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_DL_DL_DL -> S_S_e_e
   */
  transition_scores.transition (IL_DL_DL_DL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_DL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
   *   L_L_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_DL_DL_DL -> S_e_S_S
   */
  transition_scores.transition (IL_DL_DL_DL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_DL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
   *   L_L_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_DL_DL_DL -> S_e_S_e
   */
  transition_scores.transition (IL_DL_DL_DL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_DL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
   *   L_L_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_DL_DL_DL -> S_e_e_S
   */
  transition_scores.transition (IL_DL_DL_DL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_DL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
   *   L_L_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_DL_DL_DL -> S_e_e_e
   */
  transition_scores.transition (IL_DL_DL_DL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_DL -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
   *   IL_L_WL_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_DL_DL_DL -> e_Si_e_e
   */
  transition_scores.transition (IL_DL_DL_DL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

  /* 
   * IL_DL_DL_DL -> IL_DL_BiSiL_WL -> (IL_DL_L_WL, e_e_Si_e)
   *   IL_DL_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_DL_DL_DL -> e_e_Si_e
   */
  transition_scores.transition (IL_DL_DL_DL, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, IL_DL_BiSiL_WL), transition_scores.end[IL_DL_L_WL]);

  /* 
   * IL_DL_DL_DL -> IL_DL_DL_BiSiL -> (IL_DL_DL_L, e_e_e_Si)
   *   IL_DL_DL_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_DL_DL_DL -> e_e_e_Si
   */
  transition_scores.transition (IL_DL_DL_DL, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, IL_DL_DL_BiSiL), transition_scores.end[IL_DL_DL_L]);

  /* 
   * IL_DL_DL_L -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
   *   L_L_L_L -> End
   *   S_S_S_S
   * giving an effective transition
   *   IL_DL_DL_L -> S_S_S_S
   */
  transition_scores.transition (IL_DL_DL_L, S_S_S_S) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_L -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
   *   L_L_L_L -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_DL_DL_L -> S_S_S_e
   */
  transition_scores.transition (IL_DL_DL_L, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_L -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
   *   L_L_L_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_DL_DL_L -> S_S_e_S
   */
  transition_scores.transition (IL_DL_DL_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_L -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
   *   L_L_L_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_DL_DL_L -> S_S_e_e
   */
  transition_scores.transition (IL_DL_DL_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_L -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
   *   L_L_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_DL_DL_L -> S_e_S_S
   */
  transition_scores.transition (IL_DL_DL_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_L -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
   *   L_L_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_DL_DL_L -> S_e_S_e
   */
  transition_scores.transition (IL_DL_DL_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_L -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
   *   L_L_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_DL_DL_L -> S_e_e_S
   */
  transition_scores.transition (IL_DL_DL_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_L -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
   *   L_L_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_DL_DL_L -> S_e_e_e
   */
  transition_scores.transition (IL_DL_DL_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_DL_L -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
   *   IL_L_WL_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_DL_DL_L -> e_Si_e_e
   */
  transition_scores.transition (IL_DL_DL_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

  /* 
   * IL_DL_DL_L -> IL_DL_BiSiL_WL -> (IL_DL_L_WL, e_e_Si_e)
   *   IL_DL_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_DL_DL_L -> e_e_Si_e
   */
  transition_scores.transition (IL_DL_DL_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, IL_DL_BiSiL_WL), transition_scores.end[IL_DL_L_WL]);

  /* 
   * IL_DL_DL_L -> IL_DL_DL_BiSiL -> (IL_DL_DL_L, e_e_e_Si)
   *   IL_DL_DL_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_DL_DL_L -> e_e_e_Si
   */
  transition_scores.transition (IL_DL_DL_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_DL_DL_L, IL_DL_DL_BiSiL), transition_scores.end[IL_DL_DL_L]);

  /* 
   * IL_DL_DL_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
   *   L_L_L_e -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_DL_DL_e -> S_S_S_e
   */
  transition_scores.transition (IL_DL_DL_e, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_DL_DL_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
   *   L_L_L_e -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_DL_DL_e -> S_S_e_e
   */
  transition_scores.transition (IL_DL_DL_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_DL_DL_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
   *   L_L_L_e -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_DL_DL_e -> S_e_S_e
   */
  transition_scores.transition (IL_DL_DL_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_DL_DL_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
   *   L_L_L_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_DL_DL_e -> S_e_e_e
   */
  transition_scores.transition (IL_DL_DL_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_DL_DL_e -> IL_BiSiL_WL_e -> (IL_L_WL_e, e_Si_e_e)
   *   IL_L_WL_e -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_DL_DL_e -> e_Si_e_e
   */
  transition_scores.transition (IL_DL_DL_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, IL_BiSiL_WL_e), transition_scores.end[IL_L_WL_e]);

  /* 
   * IL_DL_DL_e -> IL_DL_BiSiL_e -> (IL_DL_L_e, e_e_Si_e)
   *   IL_DL_L_e -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_DL_DL_e -> e_e_Si_e
   */
  transition_scores.transition (IL_DL_DL_e, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, IL_DL_BiSiL_e), transition_scores.end[IL_DL_L_e]);

  /* 
   * IL_DL_L_WL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
   *   L_L_L_L -> End
   *   S_S_S_S
   * giving an effective transition
   *   IL_DL_L_WL -> S_S_S_S
   */
  transition_scores.transition (IL_DL_L_WL, S_S_S_S) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_L_WL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
   *   L_L_L_L -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_DL_L_WL -> S_S_S_e
   */
  transition_scores.transition (IL_DL_L_WL, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_L_WL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
   *   L_L_L_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_DL_L_WL -> S_S_e_S
   */
  transition_scores.transition (IL_DL_L_WL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_L_WL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
   *   L_L_L_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_DL_L_WL -> S_S_e_e
   */
  transition_scores.transition (IL_DL_L_WL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_L_WL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
   *   L_L_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_DL_L_WL -> S_e_S_S
   */
  transition_scores.transition (IL_DL_L_WL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_L_WL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
   *   L_L_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_DL_L_WL -> S_e_S_e
   */
  transition_scores.transition (IL_DL_L_WL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_L_WL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
   *   L_L_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_DL_L_WL -> S_e_e_S
   */
  transition_scores.transition (IL_DL_L_WL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_L_WL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
   *   L_L_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_DL_L_WL -> S_e_e_e
   */
  transition_scores.transition (IL_DL_L_WL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_L_WL -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
   *   IL_L_WL_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_DL_L_WL -> e_Si_e_e
   */
  transition_scores.transition (IL_DL_L_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

  /* 
   * IL_DL_L_WL -> IL_DL_BiSiL_WL -> (IL_DL_L_WL, e_e_Si_e)
   *   IL_DL_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_DL_L_WL -> e_e_Si_e
   */
  transition_scores.transition (IL_DL_L_WL, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, IL_DL_BiSiL_WL), transition_scores.end[IL_DL_L_WL]);

  /* 
   * IL_DL_L_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
   *   L_L_L_e -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_DL_L_e -> S_S_S_e
   */
  transition_scores.transition (IL_DL_L_e, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_DL_L_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
   *   L_L_L_e -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_DL_L_e -> S_S_e_e
   */
  transition_scores.transition (IL_DL_L_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_DL_L_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
   *   L_L_L_e -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_DL_L_e -> S_e_S_e
   */
  transition_scores.transition (IL_DL_L_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_DL_L_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
   *   L_L_L_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_DL_L_e -> S_e_e_e
   */
  transition_scores.transition (IL_DL_L_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_DL_L_e -> IL_BiSiL_WL_e -> (IL_L_WL_e, e_Si_e_e)
   *   IL_L_WL_e -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_DL_L_e -> e_Si_e_e
   */
  transition_scores.transition (IL_DL_L_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, IL_BiSiL_WL_e), transition_scores.end[IL_L_WL_e]);

  /* 
   * IL_DL_L_e -> IL_DL_BiSiL_e -> (IL_DL_L_e, e_e_Si_e)
   *   IL_DL_L_e -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_DL_L_e -> e_e_Si_e
   */
  transition_scores.transition (IL_DL_L_e, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, IL_DL_BiSiL_e), transition_scores.end[IL_DL_L_e]);

  /* 
   * IL_DL_ML_L -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
   *   L_L_L_L -> End
   *   S_S_S_S
   * giving an effective transition
   *   IL_DL_ML_L -> S_S_S_S
   */
  transition_scores.transition (IL_DL_ML_L, S_S_S_S) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_ML_L -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
   *   L_L_L_L -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_DL_ML_L -> S_S_S_e
   */
  transition_scores.transition (IL_DL_ML_L, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_ML_L -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
   *   L_L_L_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_DL_ML_L -> S_S_e_S
   */
  transition_scores.transition (IL_DL_ML_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_ML_L -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
   *   L_L_L_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_DL_ML_L -> S_S_e_e
   */
  transition_scores.transition (IL_DL_ML_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_ML_L -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
   *   L_L_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_DL_ML_L -> S_e_S_S
   */
  transition_scores.transition (IL_DL_ML_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_ML_L -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
   *   L_L_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_DL_ML_L -> S_e_S_e
   */
  transition_scores.transition (IL_DL_ML_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_ML_L -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
   *   L_L_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_DL_ML_L -> S_e_e_S
   */
  transition_scores.transition (IL_DL_ML_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_ML_L -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
   *   L_L_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_DL_ML_L -> S_e_e_e
   */
  transition_scores.transition (IL_DL_ML_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_DL_ML_L -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
   *   IL_L_WL_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_DL_ML_L -> e_Si_e_e
   */
  transition_scores.transition (IL_DL_ML_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

  /* 
   * IL_DL_ML_L -> IL_DL_BiSiL_WL -> (IL_DL_L_WL, e_e_Si_e)
   *   IL_DL_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_DL_ML_L -> e_e_Si_e
   */
  transition_scores.transition (IL_DL_ML_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, IL_DL_BiSiL_WL), transition_scores.end[IL_DL_L_WL]);

  /* 
   * IL_DL_ML_L -> IL_DL_ML_BiSiL -> (IL_DL_ML_L, e_e_e_Si)
   *   IL_DL_ML_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_DL_ML_L -> e_e_e_Si
   */
  transition_scores.transition (IL_DL_ML_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_DL_ML_L, IL_DL_ML_BiSiL), transition_scores.end[IL_DL_ML_L]);

  /* 
   * IL_DL_e_DL -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
   *   L_L_e_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_DL_e_DL -> S_S_e_S
   */
  transition_scores.transition (IL_DL_e_DL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_e_DL, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_DL_e_DL -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
   *   L_L_e_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_DL_e_DL -> S_S_e_e
   */
  transition_scores.transition (IL_DL_e_DL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_DL, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_DL_e_DL -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
   *   L_L_e_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_DL_e_DL -> S_e_e_S
   */
  transition_scores.transition (IL_DL_e_DL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_e_DL, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_DL_e_DL -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
   *   L_L_e_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_DL_e_DL -> S_e_e_e
   */
  transition_scores.transition (IL_DL_e_DL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_DL, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_DL_e_DL -> IL_BiSiL_e_WL -> (IL_L_e_WL, e_Si_e_e)
   *   IL_L_e_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_DL_e_DL -> e_Si_e_e
   */
  transition_scores.transition (IL_DL_e_DL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_DL, IL_BiSiL_e_WL), transition_scores.end[IL_L_e_WL]);

  /* 
   * IL_DL_e_DL -> IL_DL_e_BiSiL -> (IL_DL_e_L, e_e_e_Si)
   *   IL_DL_e_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_DL_e_DL -> e_e_e_Si
   */
  transition_scores.transition (IL_DL_e_DL, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_DL_e_DL, IL_DL_e_BiSiL), transition_scores.end[IL_DL_e_L]);

  /* 
   * IL_DL_e_L -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
   *   L_L_e_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_DL_e_L -> S_S_e_S
   */
  transition_scores.transition (IL_DL_e_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_e_L, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_DL_e_L -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
   *   L_L_e_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_DL_e_L -> S_S_e_e
   */
  transition_scores.transition (IL_DL_e_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_L, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_DL_e_L -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
   *   L_L_e_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_DL_e_L -> S_e_e_S
   */
  transition_scores.transition (IL_DL_e_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_e_L, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_DL_e_L -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
   *   L_L_e_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_DL_e_L -> S_e_e_e
   */
  transition_scores.transition (IL_DL_e_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_L, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_DL_e_L -> IL_BiSiL_e_WL -> (IL_L_e_WL, e_Si_e_e)
   *   IL_L_e_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_DL_e_L -> e_Si_e_e
   */
  transition_scores.transition (IL_DL_e_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_L, IL_BiSiL_e_WL), transition_scores.end[IL_L_e_WL]);

  /* 
   * IL_DL_e_L -> IL_DL_e_BiSiL -> (IL_DL_e_L, e_e_e_Si)
   *   IL_DL_e_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_DL_e_L -> e_e_e_Si
   */
  transition_scores.transition (IL_DL_e_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_DL_e_L, IL_DL_e_BiSiL), transition_scores.end[IL_DL_e_L]);

  /* 
   * IL_DL_e_e -> BiSL_BmSL_e_e -> (L_L_e_e, S_S_e_e)
   *   L_L_e_e -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_DL_e_e -> S_S_e_e
   */
  transition_scores.transition (IL_DL_e_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_e, BiSL_BmSL_e_e), transition_scores.end[L_L_e_e]);

  /* 
   * IL_DL_e_e -> BiSL_BpeL_e_e -> (L_L_e_e, S_e_e_e)
   *   L_L_e_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_DL_e_e -> S_e_e_e
   */
  transition_scores.transition (IL_DL_e_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_e, BiSL_BpeL_e_e), transition_scores.end[L_L_e_e]);

  /* 
   * IL_DL_e_e -> IL_BiSiL_e_e -> (IL_L_e_e, e_Si_e_e)
   *   IL_L_e_e -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_DL_e_e -> e_Si_e_e
   */
  transition_scores.transition (IL_DL_e_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_e, IL_BiSiL_e_e), transition_scores.end[IL_L_e_e]);

  /* 
   * IL_L_WL_WL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
   *   L_L_L_L -> End
   *   S_S_S_S
   * giving an effective transition
   *   IL_L_WL_WL -> S_S_S_S
   */
  transition_scores.transition (IL_L_WL_WL, S_S_S_S) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_L_WL_WL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
   *   L_L_L_L -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_L_WL_WL -> S_S_S_e
   */
  transition_scores.transition (IL_L_WL_WL, S_S_S_e) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_L_WL_WL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
   *   L_L_L_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_L_WL_WL -> S_S_e_S
   */
  transition_scores.transition (IL_L_WL_WL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_L_WL_WL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
   *   L_L_L_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_L_WL_WL -> S_S_e_e
   */
  transition_scores.transition (IL_L_WL_WL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_L_WL_WL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
   *   L_L_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_L_WL_WL -> S_e_S_S
   */
  transition_scores.transition (IL_L_WL_WL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_L_WL_WL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
   *   L_L_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_L_WL_WL -> S_e_S_e
   */
  transition_scores.transition (IL_L_WL_WL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_L_WL_WL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
   *   L_L_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_L_WL_WL -> S_e_e_S
   */
  transition_scores.transition (IL_L_WL_WL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_L_WL_WL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
   *   L_L_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_L_WL_WL -> S_e_e_e
   */
  transition_scores.transition (IL_L_WL_WL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_L_WL_WL -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
   *   IL_L_WL_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_L_WL_WL -> e_Si_e_e
   */
  transition_scores.transition (IL_L_WL_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_WL, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

  /* 
   * IL_L_WL_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
   *   L_L_L_e -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_L_WL_e -> S_S_S_e
   */
  transition_scores.transition (IL_L_WL_e, S_S_S_e) = ScorePMul (transition_scores.transition (IL_L_WL_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_L_WL_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
   *   L_L_L_e -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_L_WL_e -> S_S_e_e
   */
  transition_scores.transition (IL_L_WL_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_L_WL_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
   *   L_L_L_e -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_L_WL_e -> S_e_S_e
   */
  transition_scores.transition (IL_L_WL_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_L_WL_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_L_WL_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
   *   L_L_L_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_L_WL_e -> S_e_e_e
   */
  transition_scores.transition (IL_L_WL_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_L_WL_e -> IL_BiSiL_WL_e -> (IL_L_WL_e, e_Si_e_e)
   *   IL_L_WL_e -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_L_WL_e -> e_Si_e_e
   */
  transition_scores.transition (IL_L_WL_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_e, IL_BiSiL_WL_e), transition_scores.end[IL_L_WL_e]);

  /* 
   * IL_L_e_WL -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
   *   L_L_e_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_L_e_WL -> S_S_e_S
   */
  transition_scores.transition (IL_L_e_WL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_L_e_WL, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_L_e_WL -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
   *   L_L_e_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_L_e_WL -> S_S_e_e
   */
  transition_scores.transition (IL_L_e_WL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_L_e_WL, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_L_e_WL -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
   *   L_L_e_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_L_e_WL -> S_e_e_S
   */
  transition_scores.transition (IL_L_e_WL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_L_e_WL, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_L_e_WL -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
   *   L_L_e_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_L_e_WL -> S_e_e_e
   */
  transition_scores.transition (IL_L_e_WL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_L_e_WL, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_L_e_WL -> IL_BiSiL_e_WL -> (IL_L_e_WL, e_Si_e_e)
   *   IL_L_e_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_L_e_WL -> e_Si_e_e
   */
  transition_scores.transition (IL_L_e_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_L_e_WL, IL_BiSiL_e_WL), transition_scores.end[IL_L_e_WL]);

  /* 
   * IL_L_e_e -> BiSL_BmSL_e_e -> (L_L_e_e, S_S_e_e)
   *   L_L_e_e -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_L_e_e -> S_S_e_e
   */
  transition_scores.transition (IL_L_e_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_L_e_e, BiSL_BmSL_e_e), transition_scores.end[L_L_e_e]);

  /* 
   * IL_L_e_e -> BiSL_BpeL_e_e -> (L_L_e_e, S_e_e_e)
   *   L_L_e_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_L_e_e -> S_e_e_e
   */
  transition_scores.transition (IL_L_e_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_L_e_e, BiSL_BpeL_e_e), transition_scores.end[L_L_e_e]);

  /* 
   * IL_L_e_e -> IL_BiSiL_e_e -> (IL_L_e_e, e_Si_e_e)
   *   IL_L_e_e -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_L_e_e -> e_Si_e_e
   */
  transition_scores.transition (IL_L_e_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_L_e_e, IL_BiSiL_e_e), transition_scores.end[IL_L_e_e]);

  /* 
   * IL_ML_DL_L -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
   *   L_L_L_L -> End
   *   S_S_S_S
   * giving an effective transition
   *   IL_ML_DL_L -> S_S_S_S
   */
  transition_scores.transition (IL_ML_DL_L, S_S_S_S) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_DL_L -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
   *   L_L_L_L -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_ML_DL_L -> S_S_S_e
   */
  transition_scores.transition (IL_ML_DL_L, S_S_S_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_DL_L -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
   *   L_L_L_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_ML_DL_L -> S_S_e_S
   */
  transition_scores.transition (IL_ML_DL_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_DL_L -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
   *   L_L_L_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_ML_DL_L -> S_S_e_e
   */
  transition_scores.transition (IL_ML_DL_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_DL_L -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
   *   L_L_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_ML_DL_L -> S_e_S_S
   */
  transition_scores.transition (IL_ML_DL_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_DL_L -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
   *   L_L_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_ML_DL_L -> S_e_S_e
   */
  transition_scores.transition (IL_ML_DL_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_DL_L -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
   *   L_L_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_ML_DL_L -> S_e_e_S
   */
  transition_scores.transition (IL_ML_DL_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_DL_L -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
   *   L_L_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_ML_DL_L -> S_e_e_e
   */
  transition_scores.transition (IL_ML_DL_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_DL_L -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
   *   IL_L_WL_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_ML_DL_L -> e_Si_e_e
   */
  transition_scores.transition (IL_ML_DL_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

  /* 
   * IL_ML_DL_L -> IL_ML_BiSiL_WL -> (IL_ML_L_WL, e_e_Si_e)
   *   IL_ML_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_ML_DL_L -> e_e_Si_e
   */
  transition_scores.transition (IL_ML_DL_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, IL_ML_BiSiL_WL), transition_scores.end[IL_ML_L_WL]);

  /* 
   * IL_ML_DL_L -> IL_ML_DL_BiSiL -> (IL_ML_DL_L, e_e_e_Si)
   *   IL_ML_DL_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_ML_DL_L -> e_e_e_Si
   */
  transition_scores.transition (IL_ML_DL_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_ML_DL_L, IL_ML_DL_BiSiL), transition_scores.end[IL_ML_DL_L]);

  /* 
   * IL_ML_L_WL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
   *   L_L_L_L -> End
   *   S_S_S_S
   * giving an effective transition
   *   IL_ML_L_WL -> S_S_S_S
   */
  transition_scores.transition (IL_ML_L_WL, S_S_S_S) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_L_WL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
   *   L_L_L_L -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_ML_L_WL -> S_S_S_e
   */
  transition_scores.transition (IL_ML_L_WL, S_S_S_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_L_WL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
   *   L_L_L_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_ML_L_WL -> S_S_e_S
   */
  transition_scores.transition (IL_ML_L_WL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_L_WL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
   *   L_L_L_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_ML_L_WL -> S_S_e_e
   */
  transition_scores.transition (IL_ML_L_WL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_L_WL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
   *   L_L_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_ML_L_WL -> S_e_S_S
   */
  transition_scores.transition (IL_ML_L_WL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_L_WL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
   *   L_L_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_ML_L_WL -> S_e_S_e
   */
  transition_scores.transition (IL_ML_L_WL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_L_WL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
   *   L_L_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_ML_L_WL -> S_e_e_S
   */
  transition_scores.transition (IL_ML_L_WL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_L_WL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
   *   L_L_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_ML_L_WL -> S_e_e_e
   */
  transition_scores.transition (IL_ML_L_WL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_L_WL -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
   *   IL_L_WL_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_ML_L_WL -> e_Si_e_e
   */
  transition_scores.transition (IL_ML_L_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

  /* 
   * IL_ML_L_WL -> IL_ML_BiSiL_WL -> (IL_ML_L_WL, e_e_Si_e)
   *   IL_ML_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_ML_L_WL -> e_e_Si_e
   */
  transition_scores.transition (IL_ML_L_WL, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, IL_ML_BiSiL_WL), transition_scores.end[IL_ML_L_WL]);

  /* 
   * IL_ML_L_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
   *   L_L_L_e -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_ML_L_e -> S_S_S_e
   */
  transition_scores.transition (IL_ML_L_e, S_S_S_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_ML_L_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
   *   L_L_L_e -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_ML_L_e -> S_S_e_e
   */
  transition_scores.transition (IL_ML_L_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_ML_L_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
   *   L_L_L_e -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_ML_L_e -> S_e_S_e
   */
  transition_scores.transition (IL_ML_L_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_ML_L_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
   *   L_L_L_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_ML_L_e -> S_e_e_e
   */
  transition_scores.transition (IL_ML_L_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * IL_ML_L_e -> IL_BiSiL_WL_e -> (IL_L_WL_e, e_Si_e_e)
   *   IL_L_WL_e -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_ML_L_e -> e_Si_e_e
   */
  transition_scores.transition (IL_ML_L_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, IL_BiSiL_WL_e), transition_scores.end[IL_L_WL_e]);

  /* 
   * IL_ML_L_e -> IL_ML_BiSiL_e -> (IL_ML_L_e, e_e_Si_e)
   *   IL_ML_L_e -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_ML_L_e -> e_e_Si_e
   */
  transition_scores.transition (IL_ML_L_e, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, IL_ML_BiSiL_e), transition_scores.end[IL_ML_L_e]);

  /* 
   * IL_ML_ML_L -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
   *   L_L_L_L -> End
   *   S_S_S_S
   * giving an effective transition
   *   IL_ML_ML_L -> S_S_S_S
   */
  transition_scores.transition (IL_ML_ML_L, S_S_S_S) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_ML_L -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
   *   L_L_L_L -> End
   *   S_S_S_e
   * giving an effective transition
   *   IL_ML_ML_L -> S_S_S_e
   */
  transition_scores.transition (IL_ML_ML_L, S_S_S_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_ML_L -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
   *   L_L_L_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_ML_ML_L -> S_S_e_S
   */
  transition_scores.transition (IL_ML_ML_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_ML_L -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
   *   L_L_L_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_ML_ML_L -> S_S_e_e
   */
  transition_scores.transition (IL_ML_ML_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_ML_L -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
   *   L_L_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_ML_ML_L -> S_e_S_S
   */
  transition_scores.transition (IL_ML_ML_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_ML_L -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
   *   L_L_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_ML_ML_L -> S_e_S_e
   */
  transition_scores.transition (IL_ML_ML_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_ML_L -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
   *   L_L_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_ML_ML_L -> S_e_e_S
   */
  transition_scores.transition (IL_ML_ML_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_ML_L -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
   *   L_L_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_ML_ML_L -> S_e_e_e
   */
  transition_scores.transition (IL_ML_ML_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * IL_ML_ML_L -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
   *   IL_L_WL_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_ML_ML_L -> e_Si_e_e
   */
  transition_scores.transition (IL_ML_ML_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

  /* 
   * IL_ML_ML_L -> IL_ML_BiSiL_WL -> (IL_ML_L_WL, e_e_Si_e)
   *   IL_ML_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_ML_ML_L -> e_e_Si_e
   */
  transition_scores.transition (IL_ML_ML_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, IL_ML_BiSiL_WL), transition_scores.end[IL_ML_L_WL]);

  /* 
   * IL_ML_ML_L -> IL_ML_ML_BiSiL -> (IL_ML_ML_L, e_e_e_Si)
   *   IL_ML_ML_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_ML_ML_L -> e_e_e_Si
   */
  transition_scores.transition (IL_ML_ML_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_ML_ML_L, IL_ML_ML_BiSiL), transition_scores.end[IL_ML_ML_L]);

  /* 
   * IL_ML_e_L -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
   *   L_L_e_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   IL_ML_e_L -> S_S_e_S
   */
  transition_scores.transition (IL_ML_e_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_ML_e_L, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_ML_e_L -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
   *   L_L_e_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   IL_ML_e_L -> S_S_e_e
   */
  transition_scores.transition (IL_ML_e_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_ML_e_L, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_ML_e_L -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
   *   L_L_e_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_ML_e_L -> S_e_e_S
   */
  transition_scores.transition (IL_ML_e_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_ML_e_L, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_ML_e_L -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
   *   L_L_e_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_ML_e_L -> S_e_e_e
   */
  transition_scores.transition (IL_ML_e_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_ML_e_L, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * IL_ML_e_L -> IL_BiSiL_e_WL -> (IL_L_e_WL, e_Si_e_e)
   *   IL_L_e_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   IL_ML_e_L -> e_Si_e_e
   */
  transition_scores.transition (IL_ML_e_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_ML_e_L, IL_BiSiL_e_WL), transition_scores.end[IL_L_e_WL]);

  /* 
   * IL_ML_e_L -> IL_ML_e_BiSiL -> (IL_ML_e_L, e_e_e_Si)
   *   IL_ML_e_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_ML_e_L -> e_e_e_Si
   */
  transition_scores.transition (IL_ML_e_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_ML_e_L, IL_ML_e_BiSiL), transition_scores.end[IL_ML_e_L]);

  /* 
   * IL_e_DL_DL -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
   *   L_e_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_e_DL_DL -> S_e_S_S
   */
  transition_scores.transition (IL_e_DL_DL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_e_DL_DL, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_DL_DL -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
   *   L_e_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_e_DL_DL -> S_e_S_e
   */
  transition_scores.transition (IL_e_DL_DL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_DL_DL, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_DL_DL -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
   *   L_e_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_e_DL_DL -> S_e_e_S
   */
  transition_scores.transition (IL_e_DL_DL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_DL_DL, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_DL_DL -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
   *   L_e_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_e_DL_DL -> S_e_e_e
   */
  transition_scores.transition (IL_e_DL_DL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_DL_DL, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_DL_DL -> IL_e_BiSiL_WL -> (IL_e_L_WL, e_e_Si_e)
   *   IL_e_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_e_DL_DL -> e_e_Si_e
   */
  transition_scores.transition (IL_e_DL_DL, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_DL_DL, IL_e_BiSiL_WL), transition_scores.end[IL_e_L_WL]);

  /* 
   * IL_e_DL_DL -> IL_e_DL_BiSiL -> (IL_e_DL_L, e_e_e_Si)
   *   IL_e_DL_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_e_DL_DL -> e_e_e_Si
   */
  transition_scores.transition (IL_e_DL_DL, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_e_DL_DL, IL_e_DL_BiSiL), transition_scores.end[IL_e_DL_L]);

  /* 
   * IL_e_DL_L -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
   *   L_e_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_e_DL_L -> S_e_S_S
   */
  transition_scores.transition (IL_e_DL_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_e_DL_L, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_DL_L -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
   *   L_e_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_e_DL_L -> S_e_S_e
   */
  transition_scores.transition (IL_e_DL_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_DL_L, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_DL_L -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
   *   L_e_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_e_DL_L -> S_e_e_S
   */
  transition_scores.transition (IL_e_DL_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_DL_L, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_DL_L -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
   *   L_e_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_e_DL_L -> S_e_e_e
   */
  transition_scores.transition (IL_e_DL_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_DL_L, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_DL_L -> IL_e_BiSiL_WL -> (IL_e_L_WL, e_e_Si_e)
   *   IL_e_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_e_DL_L -> e_e_Si_e
   */
  transition_scores.transition (IL_e_DL_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_DL_L, IL_e_BiSiL_WL), transition_scores.end[IL_e_L_WL]);

  /* 
   * IL_e_DL_L -> IL_e_DL_BiSiL -> (IL_e_DL_L, e_e_e_Si)
   *   IL_e_DL_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_e_DL_L -> e_e_e_Si
   */
  transition_scores.transition (IL_e_DL_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_e_DL_L, IL_e_DL_BiSiL), transition_scores.end[IL_e_DL_L]);

  /* 
   * IL_e_DL_e -> BiSL_e_BmSL_e -> (L_e_L_e, S_e_S_e)
   *   L_e_L_e -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_e_DL_e -> S_e_S_e
   */
  transition_scores.transition (IL_e_DL_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_DL_e, BiSL_e_BmSL_e), transition_scores.end[L_e_L_e]);

  /* 
   * IL_e_DL_e -> BiSL_e_BpeL_e -> (L_e_L_e, S_e_e_e)
   *   L_e_L_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_e_DL_e -> S_e_e_e
   */
  transition_scores.transition (IL_e_DL_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_DL_e, BiSL_e_BpeL_e), transition_scores.end[L_e_L_e]);

  /* 
   * IL_e_DL_e -> IL_e_BiSiL_e -> (IL_e_L_e, e_e_Si_e)
   *   IL_e_L_e -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_e_DL_e -> e_e_Si_e
   */
  transition_scores.transition (IL_e_DL_e, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_DL_e, IL_e_BiSiL_e), transition_scores.end[IL_e_L_e]);

  /* 
   * IL_e_L_WL -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
   *   L_e_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_e_L_WL -> S_e_S_S
   */
  transition_scores.transition (IL_e_L_WL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_e_L_WL, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_L_WL -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
   *   L_e_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_e_L_WL -> S_e_S_e
   */
  transition_scores.transition (IL_e_L_WL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_L_WL, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_L_WL -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
   *   L_e_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_e_L_WL -> S_e_e_S
   */
  transition_scores.transition (IL_e_L_WL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_L_WL, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_L_WL -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
   *   L_e_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_e_L_WL -> S_e_e_e
   */
  transition_scores.transition (IL_e_L_WL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_L_WL, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_L_WL -> IL_e_BiSiL_WL -> (IL_e_L_WL, e_e_Si_e)
   *   IL_e_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_e_L_WL -> e_e_Si_e
   */
  transition_scores.transition (IL_e_L_WL, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_L_WL, IL_e_BiSiL_WL), transition_scores.end[IL_e_L_WL]);

  /* 
   * IL_e_L_e -> BiSL_e_BmSL_e -> (L_e_L_e, S_e_S_e)
   *   L_e_L_e -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_e_L_e -> S_e_S_e
   */
  transition_scores.transition (IL_e_L_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_L_e, BiSL_e_BmSL_e), transition_scores.end[L_e_L_e]);

  /* 
   * IL_e_L_e -> BiSL_e_BpeL_e -> (L_e_L_e, S_e_e_e)
   *   L_e_L_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_e_L_e -> S_e_e_e
   */
  transition_scores.transition (IL_e_L_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_L_e, BiSL_e_BpeL_e), transition_scores.end[L_e_L_e]);

  /* 
   * IL_e_L_e -> IL_e_BiSiL_e -> (IL_e_L_e, e_e_Si_e)
   *   IL_e_L_e -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_e_L_e -> e_e_Si_e
   */
  transition_scores.transition (IL_e_L_e, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_L_e, IL_e_BiSiL_e), transition_scores.end[IL_e_L_e]);

  /* 
   * IL_e_ML_L -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
   *   L_e_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   IL_e_ML_L -> S_e_S_S
   */
  transition_scores.transition (IL_e_ML_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_e_ML_L, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_ML_L -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
   *   L_e_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   IL_e_ML_L -> S_e_S_e
   */
  transition_scores.transition (IL_e_ML_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_ML_L, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_ML_L -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
   *   L_e_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_e_ML_L -> S_e_e_S
   */
  transition_scores.transition (IL_e_ML_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_ML_L, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_ML_L -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
   *   L_e_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_e_ML_L -> S_e_e_e
   */
  transition_scores.transition (IL_e_ML_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_ML_L, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * IL_e_ML_L -> IL_e_BiSiL_WL -> (IL_e_L_WL, e_e_Si_e)
   *   IL_e_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   IL_e_ML_L -> e_e_Si_e
   */
  transition_scores.transition (IL_e_ML_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_ML_L, IL_e_BiSiL_WL), transition_scores.end[IL_e_L_WL]);

  /* 
   * IL_e_ML_L -> IL_e_ML_BiSiL -> (IL_e_ML_L, e_e_e_Si)
   *   IL_e_ML_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_e_ML_L -> e_e_e_Si
   */
  transition_scores.transition (IL_e_ML_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_e_ML_L, IL_e_ML_BiSiL), transition_scores.end[IL_e_ML_L]);

  /* 
   * IL_e_e_DL -> BiSL_e_e_BmSL -> (L_e_e_L, S_e_e_S)
   *   L_e_e_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_e_e_DL -> S_e_e_S
   */
  transition_scores.transition (IL_e_e_DL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_e_DL, BiSL_e_e_BmSL), transition_scores.end[L_e_e_L]);

  /* 
   * IL_e_e_DL -> BiSL_e_e_BpeL -> (L_e_e_L, S_e_e_e)
   *   L_e_e_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_e_e_DL -> S_e_e_e
   */
  transition_scores.transition (IL_e_e_DL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_e_DL, BiSL_e_e_BpeL), transition_scores.end[L_e_e_L]);

  /* 
   * IL_e_e_DL -> IL_e_e_BiSiL -> (IL_e_e_L, e_e_e_Si)
   *   IL_e_e_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_e_e_DL -> e_e_e_Si
   */
  transition_scores.transition (IL_e_e_DL, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_e_e_DL, IL_e_e_BiSiL), transition_scores.end[IL_e_e_L]);

  /* 
   * IL_e_e_L -> BiSL_e_e_BmSL -> (L_e_e_L, S_e_e_S)
   *   L_e_e_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   IL_e_e_L -> S_e_e_S
   */
  transition_scores.transition (IL_e_e_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_e_L, BiSL_e_e_BmSL), transition_scores.end[L_e_e_L]);

  /* 
   * IL_e_e_L -> BiSL_e_e_BpeL -> (L_e_e_L, S_e_e_e)
   *   L_e_e_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_e_e_L -> S_e_e_e
   */
  transition_scores.transition (IL_e_e_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_e_L, BiSL_e_e_BpeL), transition_scores.end[L_e_e_L]);

  /* 
   * IL_e_e_L -> IL_e_e_BiSiL -> (IL_e_e_L, e_e_e_Si)
   *   IL_e_e_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   IL_e_e_L -> e_e_e_Si
   */
  transition_scores.transition (IL_e_e_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_e_e_L, IL_e_e_BiSiL), transition_scores.end[IL_e_e_L]);

  /* 
   * IL_e_e_e -> BiSL_e_e_e -> (L_e_e_e, S_e_e_e)
   *   L_e_e_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   IL_e_e_e -> S_e_e_e
   */
  transition_scores.transition (IL_e_e_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_e_e, BiSL_e_e_e), transition_scores.end[L_e_e_e]);

  /* 
   * L_L_L_L -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
   *   L_L_L_L -> End
   *   S_S_S_S
   * giving an effective transition
   *   L_L_L_L -> S_S_S_S
   */
  transition_scores.transition (L_L_L_L, S_S_S_S) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_L -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
   *   L_L_L_L -> End
   *   S_S_S_e
   * giving an effective transition
   *   L_L_L_L -> S_S_S_e
   */
  transition_scores.transition (L_L_L_L, S_S_S_e) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_L -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
   *   L_L_L_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   L_L_L_L -> S_S_e_S
   */
  transition_scores.transition (L_L_L_L, S_S_e_S) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_L -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
   *   L_L_L_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   L_L_L_L -> S_S_e_e
   */
  transition_scores.transition (L_L_L_L, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_L -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
   *   L_L_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   L_L_L_L -> S_e_S_S
   */
  transition_scores.transition (L_L_L_L, S_e_S_S) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_L -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
   *   L_L_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   L_L_L_L -> S_e_S_e
   */
  transition_scores.transition (L_L_L_L, S_e_S_e) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_L -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
   *   L_L_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   L_L_L_L -> S_e_e_S
   */
  transition_scores.transition (L_L_L_L, S_e_e_S) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_L -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
   *   L_L_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_L_L_L -> S_e_e_e
   */
  transition_scores.transition (L_L_L_L, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_L -> L_BiSiL_WL_WL -> (L_L_WL_WL, e_Si_e_e)
   *   L_L_WL_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   L_L_L_L -> e_Si_e_e
   */
  transition_scores.transition (L_L_L_L, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_L_L, L_BiSiL_WL_WL), transition_scores.end[L_L_WL_WL]);

  /* 
   * L_L_L_L -> L_L_BiSiL_WL -> (L_L_L_WL, e_e_Si_e)
   *   L_L_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   L_L_L_L -> e_e_Si_e
   */
  transition_scores.transition (L_L_L_L, e_e_Si_e) = ScorePMul (transition_scores.transition (L_L_L_L, L_L_BiSiL_WL), transition_scores.end[L_L_L_WL]);

  /* 
   * L_L_L_L -> L_L_L_BiSiL -> (L_L_L_L, e_e_e_Si)
   *   L_L_L_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   L_L_L_L -> e_e_e_Si
   */
  transition_scores.transition (L_L_L_L, e_e_e_Si) = ScorePMul (transition_scores.transition (L_L_L_L, L_L_L_BiSiL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_WL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
   *   L_L_L_L -> End
   *   S_S_S_S
   * giving an effective transition
   *   L_L_L_WL -> S_S_S_S
   */
  transition_scores.transition (L_L_L_WL, S_S_S_S) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_WL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
   *   L_L_L_L -> End
   *   S_S_S_e
   * giving an effective transition
   *   L_L_L_WL -> S_S_S_e
   */
  transition_scores.transition (L_L_L_WL, S_S_S_e) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_WL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
   *   L_L_L_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   L_L_L_WL -> S_S_e_S
   */
  transition_scores.transition (L_L_L_WL, S_S_e_S) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_WL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
   *   L_L_L_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   L_L_L_WL -> S_S_e_e
   */
  transition_scores.transition (L_L_L_WL, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_WL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
   *   L_L_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   L_L_L_WL -> S_e_S_S
   */
  transition_scores.transition (L_L_L_WL, S_e_S_S) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_WL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
   *   L_L_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   L_L_L_WL -> S_e_S_e
   */
  transition_scores.transition (L_L_L_WL, S_e_S_e) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_WL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
   *   L_L_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   L_L_L_WL -> S_e_e_S
   */
  transition_scores.transition (L_L_L_WL, S_e_e_S) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_WL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
   *   L_L_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_L_L_WL -> S_e_e_e
   */
  transition_scores.transition (L_L_L_WL, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_L_WL -> L_BiSiL_WL_WL -> (L_L_WL_WL, e_Si_e_e)
   *   L_L_WL_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   L_L_L_WL -> e_Si_e_e
   */
  transition_scores.transition (L_L_L_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_L_WL, L_BiSiL_WL_WL), transition_scores.end[L_L_WL_WL]);

  /* 
   * L_L_L_WL -> L_L_BiSiL_WL -> (L_L_L_WL, e_e_Si_e)
   *   L_L_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   L_L_L_WL -> e_e_Si_e
   */
  transition_scores.transition (L_L_L_WL, e_e_Si_e) = ScorePMul (transition_scores.transition (L_L_L_WL, L_L_BiSiL_WL), transition_scores.end[L_L_L_WL]);

  /* 
   * L_L_L_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
   *   L_L_L_e -> End
   *   S_S_S_e
   * giving an effective transition
   *   L_L_L_e -> S_S_S_e
   */
  transition_scores.transition (L_L_L_e, S_S_S_e) = ScorePMul (transition_scores.transition (L_L_L_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * L_L_L_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
   *   L_L_L_e -> End
   *   S_S_e_e
   * giving an effective transition
   *   L_L_L_e -> S_S_e_e
   */
  transition_scores.transition (L_L_L_e, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_L_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * L_L_L_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
   *   L_L_L_e -> End
   *   S_e_S_e
   * giving an effective transition
   *   L_L_L_e -> S_e_S_e
   */
  transition_scores.transition (L_L_L_e, S_e_S_e) = ScorePMul (transition_scores.transition (L_L_L_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * L_L_L_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
   *   L_L_L_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_L_L_e -> S_e_e_e
   */
  transition_scores.transition (L_L_L_e, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_L_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * L_L_L_e -> L_BiSiL_WL_e -> (L_L_WL_e, e_Si_e_e)
   *   L_L_WL_e -> End
   *   e_Si_e_e
   * giving an effective transition
   *   L_L_L_e -> e_Si_e_e
   */
  transition_scores.transition (L_L_L_e, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_L_e, L_BiSiL_WL_e), transition_scores.end[L_L_WL_e]);

  /* 
   * L_L_L_e -> L_L_BiSiL_e -> (L_L_L_e, e_e_Si_e)
   *   L_L_L_e -> End
   *   e_e_Si_e
   * giving an effective transition
   *   L_L_L_e -> e_e_Si_e
   */
  transition_scores.transition (L_L_L_e, e_e_Si_e) = ScorePMul (transition_scores.transition (L_L_L_e, L_L_BiSiL_e), transition_scores.end[L_L_L_e]);

  /* 
   * L_L_WL_WL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
   *   L_L_L_L -> End
   *   S_S_S_S
   * giving an effective transition
   *   L_L_WL_WL -> S_S_S_S
   */
  transition_scores.transition (L_L_WL_WL, S_S_S_S) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_WL_WL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
   *   L_L_L_L -> End
   *   S_S_S_e
   * giving an effective transition
   *   L_L_WL_WL -> S_S_S_e
   */
  transition_scores.transition (L_L_WL_WL, S_S_S_e) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_WL_WL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
   *   L_L_L_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   L_L_WL_WL -> S_S_e_S
   */
  transition_scores.transition (L_L_WL_WL, S_S_e_S) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_WL_WL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
   *   L_L_L_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   L_L_WL_WL -> S_S_e_e
   */
  transition_scores.transition (L_L_WL_WL, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_WL_WL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
   *   L_L_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   L_L_WL_WL -> S_e_S_S
   */
  transition_scores.transition (L_L_WL_WL, S_e_S_S) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_WL_WL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
   *   L_L_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   L_L_WL_WL -> S_e_S_e
   */
  transition_scores.transition (L_L_WL_WL, S_e_S_e) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_WL_WL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
   *   L_L_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   L_L_WL_WL -> S_e_e_S
   */
  transition_scores.transition (L_L_WL_WL, S_e_e_S) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_WL_WL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
   *   L_L_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_L_WL_WL -> S_e_e_e
   */
  transition_scores.transition (L_L_WL_WL, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

  /* 
   * L_L_WL_WL -> L_BiSiL_WL_WL -> (L_L_WL_WL, e_Si_e_e)
   *   L_L_WL_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   L_L_WL_WL -> e_Si_e_e
   */
  transition_scores.transition (L_L_WL_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_WL_WL, L_BiSiL_WL_WL), transition_scores.end[L_L_WL_WL]);

  /* 
   * L_L_WL_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
   *   L_L_L_e -> End
   *   S_S_S_e
   * giving an effective transition
   *   L_L_WL_e -> S_S_S_e
   */
  transition_scores.transition (L_L_WL_e, S_S_S_e) = ScorePMul (transition_scores.transition (L_L_WL_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * L_L_WL_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
   *   L_L_L_e -> End
   *   S_S_e_e
   * giving an effective transition
   *   L_L_WL_e -> S_S_e_e
   */
  transition_scores.transition (L_L_WL_e, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_WL_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * L_L_WL_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
   *   L_L_L_e -> End
   *   S_e_S_e
   * giving an effective transition
   *   L_L_WL_e -> S_e_S_e
   */
  transition_scores.transition (L_L_WL_e, S_e_S_e) = ScorePMul (transition_scores.transition (L_L_WL_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

  /* 
   * L_L_WL_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
   *   L_L_L_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_L_WL_e -> S_e_e_e
   */
  transition_scores.transition (L_L_WL_e, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_WL_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

  /* 
   * L_L_WL_e -> L_BiSiL_WL_e -> (L_L_WL_e, e_Si_e_e)
   *   L_L_WL_e -> End
   *   e_Si_e_e
   * giving an effective transition
   *   L_L_WL_e -> e_Si_e_e
   */
  transition_scores.transition (L_L_WL_e, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_WL_e, L_BiSiL_WL_e), transition_scores.end[L_L_WL_e]);

  /* 
   * L_L_e_L -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
   *   L_L_e_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   L_L_e_L -> S_S_e_S
   */
  transition_scores.transition (L_L_e_L, S_S_e_S) = ScorePMul (transition_scores.transition (L_L_e_L, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * L_L_e_L -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
   *   L_L_e_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   L_L_e_L -> S_S_e_e
   */
  transition_scores.transition (L_L_e_L, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_e_L, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * L_L_e_L -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
   *   L_L_e_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   L_L_e_L -> S_e_e_S
   */
  transition_scores.transition (L_L_e_L, S_e_e_S) = ScorePMul (transition_scores.transition (L_L_e_L, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * L_L_e_L -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
   *   L_L_e_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_L_e_L -> S_e_e_e
   */
  transition_scores.transition (L_L_e_L, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_e_L, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * L_L_e_L -> L_BiSiL_e_WL -> (L_L_e_WL, e_Si_e_e)
   *   L_L_e_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   L_L_e_L -> e_Si_e_e
   */
  transition_scores.transition (L_L_e_L, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_e_L, L_BiSiL_e_WL), transition_scores.end[L_L_e_WL]);

  /* 
   * L_L_e_L -> L_L_e_BiSiL -> (L_L_e_L, e_e_e_Si)
   *   L_L_e_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   L_L_e_L -> e_e_e_Si
   */
  transition_scores.transition (L_L_e_L, e_e_e_Si) = ScorePMul (transition_scores.transition (L_L_e_L, L_L_e_BiSiL), transition_scores.end[L_L_e_L]);

  /* 
   * L_L_e_WL -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
   *   L_L_e_L -> End
   *   S_S_e_S
   * giving an effective transition
   *   L_L_e_WL -> S_S_e_S
   */
  transition_scores.transition (L_L_e_WL, S_S_e_S) = ScorePMul (transition_scores.transition (L_L_e_WL, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * L_L_e_WL -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
   *   L_L_e_L -> End
   *   S_S_e_e
   * giving an effective transition
   *   L_L_e_WL -> S_S_e_e
   */
  transition_scores.transition (L_L_e_WL, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_e_WL, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * L_L_e_WL -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
   *   L_L_e_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   L_L_e_WL -> S_e_e_S
   */
  transition_scores.transition (L_L_e_WL, S_e_e_S) = ScorePMul (transition_scores.transition (L_L_e_WL, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

  /* 
   * L_L_e_WL -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
   *   L_L_e_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_L_e_WL -> S_e_e_e
   */
  transition_scores.transition (L_L_e_WL, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_e_WL, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

  /* 
   * L_L_e_WL -> L_BiSiL_e_WL -> (L_L_e_WL, e_Si_e_e)
   *   L_L_e_WL -> End
   *   e_Si_e_e
   * giving an effective transition
   *   L_L_e_WL -> e_Si_e_e
   */
  transition_scores.transition (L_L_e_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_e_WL, L_BiSiL_e_WL), transition_scores.end[L_L_e_WL]);

  /* 
   * L_L_e_e -> BiSL_BmSL_e_e -> (L_L_e_e, S_S_e_e)
   *   L_L_e_e -> End
   *   S_S_e_e
   * giving an effective transition
   *   L_L_e_e -> S_S_e_e
   */
  transition_scores.transition (L_L_e_e, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_e_e, BiSL_BmSL_e_e), transition_scores.end[L_L_e_e]);

  /* 
   * L_L_e_e -> BiSL_BpeL_e_e -> (L_L_e_e, S_e_e_e)
   *   L_L_e_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_L_e_e -> S_e_e_e
   */
  transition_scores.transition (L_L_e_e, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_e_e, BiSL_BpeL_e_e), transition_scores.end[L_L_e_e]);

  /* 
   * L_L_e_e -> L_BiSiL_e_e -> (L_L_e_e, e_Si_e_e)
   *   L_L_e_e -> End
   *   e_Si_e_e
   * giving an effective transition
   *   L_L_e_e -> e_Si_e_e
   */
  transition_scores.transition (L_L_e_e, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_e_e, L_BiSiL_e_e), transition_scores.end[L_L_e_e]);

  /* 
   * L_e_L_L -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
   *   L_e_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   L_e_L_L -> S_e_S_S
   */
  transition_scores.transition (L_e_L_L, S_e_S_S) = ScorePMul (transition_scores.transition (L_e_L_L, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * L_e_L_L -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
   *   L_e_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   L_e_L_L -> S_e_S_e
   */
  transition_scores.transition (L_e_L_L, S_e_S_e) = ScorePMul (transition_scores.transition (L_e_L_L, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * L_e_L_L -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
   *   L_e_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   L_e_L_L -> S_e_e_S
   */
  transition_scores.transition (L_e_L_L, S_e_e_S) = ScorePMul (transition_scores.transition (L_e_L_L, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * L_e_L_L -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
   *   L_e_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_e_L_L -> S_e_e_e
   */
  transition_scores.transition (L_e_L_L, S_e_e_e) = ScorePMul (transition_scores.transition (L_e_L_L, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * L_e_L_L -> L_e_BiSiL_WL -> (L_e_L_WL, e_e_Si_e)
   *   L_e_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   L_e_L_L -> e_e_Si_e
   */
  transition_scores.transition (L_e_L_L, e_e_Si_e) = ScorePMul (transition_scores.transition (L_e_L_L, L_e_BiSiL_WL), transition_scores.end[L_e_L_WL]);

  /* 
   * L_e_L_L -> L_e_L_BiSiL -> (L_e_L_L, e_e_e_Si)
   *   L_e_L_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   L_e_L_L -> e_e_e_Si
   */
  transition_scores.transition (L_e_L_L, e_e_e_Si) = ScorePMul (transition_scores.transition (L_e_L_L, L_e_L_BiSiL), transition_scores.end[L_e_L_L]);

  /* 
   * L_e_L_WL -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
   *   L_e_L_L -> End
   *   S_e_S_S
   * giving an effective transition
   *   L_e_L_WL -> S_e_S_S
   */
  transition_scores.transition (L_e_L_WL, S_e_S_S) = ScorePMul (transition_scores.transition (L_e_L_WL, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * L_e_L_WL -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
   *   L_e_L_L -> End
   *   S_e_S_e
   * giving an effective transition
   *   L_e_L_WL -> S_e_S_e
   */
  transition_scores.transition (L_e_L_WL, S_e_S_e) = ScorePMul (transition_scores.transition (L_e_L_WL, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * L_e_L_WL -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
   *   L_e_L_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   L_e_L_WL -> S_e_e_S
   */
  transition_scores.transition (L_e_L_WL, S_e_e_S) = ScorePMul (transition_scores.transition (L_e_L_WL, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

  /* 
   * L_e_L_WL -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
   *   L_e_L_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_e_L_WL -> S_e_e_e
   */
  transition_scores.transition (L_e_L_WL, S_e_e_e) = ScorePMul (transition_scores.transition (L_e_L_WL, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

  /* 
   * L_e_L_WL -> L_e_BiSiL_WL -> (L_e_L_WL, e_e_Si_e)
   *   L_e_L_WL -> End
   *   e_e_Si_e
   * giving an effective transition
   *   L_e_L_WL -> e_e_Si_e
   */
  transition_scores.transition (L_e_L_WL, e_e_Si_e) = ScorePMul (transition_scores.transition (L_e_L_WL, L_e_BiSiL_WL), transition_scores.end[L_e_L_WL]);

  /* 
   * L_e_L_e -> BiSL_e_BmSL_e -> (L_e_L_e, S_e_S_e)
   *   L_e_L_e -> End
   *   S_e_S_e
   * giving an effective transition
   *   L_e_L_e -> S_e_S_e
   */
  transition_scores.transition (L_e_L_e, S_e_S_e) = ScorePMul (transition_scores.transition (L_e_L_e, BiSL_e_BmSL_e), transition_scores.end[L_e_L_e]);

  /* 
   * L_e_L_e -> BiSL_e_BpeL_e -> (L_e_L_e, S_e_e_e)
   *   L_e_L_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_e_L_e -> S_e_e_e
   */
  transition_scores.transition (L_e_L_e, S_e_e_e) = ScorePMul (transition_scores.transition (L_e_L_e, BiSL_e_BpeL_e), transition_scores.end[L_e_L_e]);

  /* 
   * L_e_L_e -> L_e_BiSiL_e -> (L_e_L_e, e_e_Si_e)
   *   L_e_L_e -> End
   *   e_e_Si_e
   * giving an effective transition
   *   L_e_L_e -> e_e_Si_e
   */
  transition_scores.transition (L_e_L_e, e_e_Si_e) = ScorePMul (transition_scores.transition (L_e_L_e, L_e_BiSiL_e), transition_scores.end[L_e_L_e]);

  /* 
   * L_e_e_L -> BiSL_e_e_BmSL -> (L_e_e_L, S_e_e_S)
   *   L_e_e_L -> End
   *   S_e_e_S
   * giving an effective transition
   *   L_e_e_L -> S_e_e_S
   */
  transition_scores.transition (L_e_e_L, S_e_e_S) = ScorePMul (transition_scores.transition (L_e_e_L, BiSL_e_e_BmSL), transition_scores.end[L_e_e_L]);

  /* 
   * L_e_e_L -> BiSL_e_e_BpeL -> (L_e_e_L, S_e_e_e)
   *   L_e_e_L -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_e_e_L -> S_e_e_e
   */
  transition_scores.transition (L_e_e_L, S_e_e_e) = ScorePMul (transition_scores.transition (L_e_e_L, BiSL_e_e_BpeL), transition_scores.end[L_e_e_L]);

  /* 
   * L_e_e_L -> L_e_e_BiSiL -> (L_e_e_L, e_e_e_Si)
   *   L_e_e_L -> End
   *   e_e_e_Si
   * giving an effective transition
   *   L_e_e_L -> e_e_e_Si
   */
  transition_scores.transition (L_e_e_L, e_e_e_Si) = ScorePMul (transition_scores.transition (L_e_e_L, L_e_e_BiSiL), transition_scores.end[L_e_e_L]);

  /* 
   * L_e_e_e -> BiSL_e_e_e -> (L_e_e_e, S_e_e_e)
   *   L_e_e_e -> End
   *   S_e_e_e
   * giving an effective transition
   *   L_e_e_e -> S_e_e_e
   */
  transition_scores.transition (L_e_e_e, S_e_e_e) = ScorePMul (transition_scores.transition (L_e_e_e, BiSL_e_e_e), transition_scores.end[L_e_e_e]);

  /* 
   * e_Li_e_e -> e_BiSiLi_e_e -> (e_Li_e_e, e_Si_e_e)
   *   e_Li_e_e -> End
   *   e_Si_e_e
   * giving an effective transition
   *   e_Li_e_e -> e_Si_e_e
   */
  transition_scores.transition (e_Li_e_e, e_Si_e_e) = ScorePMul (transition_scores.transition (e_Li_e_e, e_BiSiLi_e_e), transition_scores.end[e_Li_e_e]);

  /* 
   * e_e_Li_e -> e_e_BiSiLi_e -> (e_e_Li_e, e_e_Si_e)
   *   e_e_Li_e -> End
   *   e_e_Si_e
   * giving an effective transition
   *   e_e_Li_e -> e_e_Si_e
   */
  transition_scores.transition (e_e_Li_e, e_e_Si_e) = ScorePMul (transition_scores.transition (e_e_Li_e, e_e_BiSiLi_e), transition_scores.end[e_e_Li_e]);

  /* 
   * e_e_e_Li -> e_e_e_BiSiLi -> (e_e_e_Li, e_e_e_Si)
   *   e_e_e_Li -> End
   *   e_e_e_Si
   * giving an effective transition
   *   e_e_e_Li -> e_e_e_Si
   */
  transition_scores.transition (e_e_e_Li, e_e_e_Si) = ScorePMul (transition_scores.transition (e_e_e_Li, e_e_e_BiSiLi), transition_scores.end[e_e_e_Li]);

}


void TKFST_Triplet_SCFG::init_ancestral_state_types()
{
  /* Emit and Null states */
  state_type_ancestral_map.insert (make_pair (IL_DL_DL_DL, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_DL_DL_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_DL_DL_e, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_DL_L_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_DL_L_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_DL_ML_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_DL_e_DL, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_DL_e_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_DL_e_e, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_L_WL_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_L_WL_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_L_e_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_L_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_ML_DL_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_ML_L_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_ML_L_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_ML_ML_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_ML_e_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_DL_DL, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_e_DL_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_DL_e, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_e_L_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_L_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_ML_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_e_DL, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_e_e_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_e_e, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IS_DS_DS_DS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_DS_DS_e, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_DS_e_DS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_DS_e_e, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_e_DS_DS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_e_DS_e, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_e_e_DS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_e_e_e, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (L_L_L_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_L_L_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_L_L_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_L_WL_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_L_WL_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_L_e_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_L_e_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_L_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_e_L_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_e_L_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_e_L_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_e_e_L, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_e_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_S_S_S, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_S_S_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_S_e_S, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_S_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_e_S_S, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_e_S_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_e_e_S, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_e_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_Li_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_Si_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_e_Li_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_e_Si_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_e_e_Li, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_e_e_Si, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_IL_WL_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_IL_WL_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_IL_e_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_IL_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_ML_DL_DL, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_ML_DL_e, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_ML_e_DL, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_ML_e_e, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (L_IL_WL_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_IL_WL_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_IL_e_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_IL_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_ILi_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_IS_WS_WS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_IS_WS_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_IS_e_WS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_IS_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_MS_DS_DS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_MS_DS_e, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_MS_e_DS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_MS_e_e, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (S_IS_WS_WS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_IS_WS_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_IS_e_WS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_IS_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_ISi_e_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_MS_MS_DS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_MS_MS_e, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_MS_MS_MS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_MS_DS_MS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_MS_e_MS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IL_ML_ML_DL, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_ML_ML_e, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_ML_ML_ML, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_ML_DL_ML, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_ML_e_ML, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_DL_IL_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_DL_IL_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_DL_ML_DL, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_DL_ML_e, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_ML_IL_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_ML_IL_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_IL_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_IL_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_ML_DL, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_e_ML_e, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (L_L_IL_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_L_IL_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_e_IL_WL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_e_IL_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_e_ILi_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_DS_IS_WS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_DS_IS_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_DS_MS_DS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_DS_MS_e, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_MS_IS_WS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_MS_IS_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_e_IS_WS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_e_IS_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_e_MS_DS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_e_MS_e, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (S_S_IS_WS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_S_IS_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_e_IS_WS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_e_IS_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_e_ISi_e, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_DS_MS_MS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_e_MS_MS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IL_DL_ML_ML, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_e_ML_ML, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_DL_DL_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_DL_DL_ML, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_DL_ML_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_DL_e_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_DL_e_ML, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_ML_DL_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_ML_ML_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_ML_e_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_DL_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_DL_ML, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (IL_e_ML_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_e_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IL_e_e_ML, SCFG_state_typing::EmitWL));
  state_type_ancestral_map.insert (make_pair (L_L_L_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_L_e_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_e_L_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (L_e_e_IL, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_e_e_ILi, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_DS_DS_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_DS_DS_MS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_DS_MS_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_DS_e_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_DS_e_MS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_MS_DS_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_MS_MS_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_MS_e_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_e_DS_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_e_DS_MS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (IS_e_MS_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_e_e_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (IS_e_e_MS, SCFG_state_typing::EmitWLR));
  state_type_ancestral_map.insert (make_pair (S_S_S_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_S_e_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_e_S_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (S_e_e_IS, SCFG_state_typing::NullW));
  state_type_ancestral_map.insert (make_pair (e_e_e_ISi, SCFG_state_typing::NullW));

  /* Bifurc states */
  state_type_ancestral_map.insert (make_pair (L_L_L_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BmSL_BpeL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_ML_ML_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (e_e_e_BiSiLi, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (L_e_BiSiL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (L_e_BiSiL_WL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (L_L_BiSiL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BpeL_e_BmSL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (L_BiSiL_e_WL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BpeL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BmSL_e_BpeL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BmSL_e_BmSL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_e_BiSiL_WL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BpeL_BmSL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BpeL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_BiSiL_e_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_e_BpeL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_e_BmSL_BpeL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (L_BiSiL_e_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (e_e_BiSiLi_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (e_BiSiLi_e_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BmSL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_e_DL_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_DL_DL_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_BiSiL_WL_WL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (L_L_e_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (L_BiSiL_WL_WL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BpeL_BpeL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (L_BiSiL_WL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_e_BiSiL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_ML_BiSiL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_e_BpeL_BpeL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BpeL_BmSL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BpeL_BpeL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (L_e_e_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BmSL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BpeL_e_BpeL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BmSL_BmSL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_e_BmSL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_ML_BiSiL_WL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_DL_ML_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_BiSiL_e_WL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (L_L_BiSiL_WL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BmSL_BmSL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_e_BmSL_BmSL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_DL_e_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_e_e_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_ML_e_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BmSL_BpeL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BpeL_e_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_e_BpeL_BmSL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_BiSiL_WL_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_e_e_BmSL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_e_e_BpeL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_e_e_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_ML_DL_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (BiSL_BmSL_e_e, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_e_ML_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_DL_BiSiL_WL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (L_e_L_BiSiL, SCFG_state_typing::BifurcW));
  state_type_ancestral_map.insert (make_pair (IL_DL_BiSiL_e, SCFG_state_typing::BifurcW));
}
