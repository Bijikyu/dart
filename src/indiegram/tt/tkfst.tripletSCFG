// Triplet_SCFG statistics:
//   231 = 169+61+1 effective total states
//   61 Bifurcation states (effectively deterministic)
//      (61 possibly non-deterministic bifurc states)
//   106 Emit states
//   62 Null states
//   169 (non-bifurcation) states in TM
//   1790 transitions in TM
//      169^2 = 28561 (for comparison)

/// number of states (not counting Start and End)
static const int num_states = 229;

/// Triplet_SCFG state enumeration
/*
 * Automatically generated by 'tripletSCFG.pl' --write.
 */
enum Triplet_states {
IL_DL_DL_DL = 0, IL_DL_DL_L = 1, IL_DL_DL_e = 2, IL_DL_L_WL = 3, 
IL_DL_L_e = 4, IL_DL_ML_L = 5, IL_DL_e_DL = 6, IL_DL_e_L = 7, 
IL_DL_e_e = 8, IL_L_WL_WL = 9, IL_L_WL_e = 10, IL_L_e_WL = 11, 
IL_L_e_e = 12, IL_ML_DL_L = 13, IL_ML_L_WL = 14, IL_ML_L_e = 15, 
IL_ML_ML_L = 16, IL_ML_e_L = 17, IL_e_DL_DL = 18, IL_e_DL_L = 19, 
IL_e_DL_e = 20, IL_e_L_WL = 21, IL_e_L_e = 22, IL_e_ML_L = 23, 
IL_e_e_DL = 24, IL_e_e_L = 25, IL_e_e_e = 26, IS_DS_DS_DS = 27, 
IS_DS_DS_e = 28, IS_DS_e_DS = 29, IS_DS_e_e = 30, IS_e_DS_DS = 31, 
IS_e_DS_e = 32, IS_e_e_DS = 33, IS_e_e_e = 34, L_L_L_L = 35, 
L_L_L_WL = 36, L_L_L_e = 37, L_L_WL_WL = 38, L_L_WL_e = 39, 
L_L_e_L = 40, L_L_e_WL = 41, L_L_e_e = 42, L_e_L_L = 43, 
L_e_L_WL = 44, L_e_L_e = 45, L_e_e_L = 46, L_e_e_e = 47, 
S_S_S_S = 48, S_S_S_e = 49, S_S_e_S = 50, S_S_e_e = 51, 
S_e_S_S = 52, S_e_S_e = 53, S_e_e_S = 54, S_e_e_e = 55, 
e_Li_e_e = 56, e_Si_e_e = 57, e_e_Li_e = 58, e_e_Si_e = 59, 
e_e_e_Li = 60, e_e_e_Si = 61, IL_IL_WL_WL = 62, IL_IL_WL_e = 63, 
IL_IL_e_WL = 64, IL_IL_e_e = 65, IL_ML_DL_DL = 66, IL_ML_DL_e = 67, 
IL_ML_e_DL = 68, IL_ML_e_e = 69, L_IL_WL_WL = 70, L_IL_WL_e = 71, 
L_IL_e_WL = 72, L_IL_e_e = 73, e_ILi_e_e = 74, IS_IS_WS_WS = 75, 
IS_IS_WS_e = 76, IS_IS_e_WS = 77, IS_IS_e_e = 78, IS_MS_DS_DS = 79, 
IS_MS_DS_e = 80, IS_MS_e_DS = 81, IS_MS_e_e = 82, S_IS_WS_WS = 83, 
S_IS_WS_e = 84, S_IS_e_WS = 85, S_IS_e_e = 86, e_ISi_e_e = 87, 
IS_MS_MS_DS = 88, IS_MS_MS_e = 89, IS_MS_MS_MS = 90, IS_MS_DS_MS = 91, 
IS_MS_e_MS = 92, IL_ML_ML_DL = 93, IL_ML_ML_e = 94, IL_ML_ML_ML = 95, 
IL_ML_DL_ML = 96, IL_ML_e_ML = 97, IL_DL_IL_WL = 98, IL_DL_IL_e = 99, 
IL_DL_ML_DL = 100, IL_DL_ML_e = 101, IL_ML_IL_WL = 102, IL_ML_IL_e = 103, 
IL_e_IL_WL = 104, IL_e_IL_e = 105, IL_e_ML_DL = 106, IL_e_ML_e = 107, 
L_L_IL_WL = 108, L_L_IL_e = 109, L_e_IL_WL = 110, L_e_IL_e = 111, 
e_e_ILi_e = 112, IS_DS_IS_WS = 113, IS_DS_IS_e = 114, IS_DS_MS_DS = 115, 
IS_DS_MS_e = 116, IS_MS_IS_WS = 117, IS_MS_IS_e = 118, IS_e_IS_WS = 119, 
IS_e_IS_e = 120, IS_e_MS_DS = 121, IS_e_MS_e = 122, S_S_IS_WS = 123, 
S_S_IS_e = 124, S_e_IS_WS = 125, S_e_IS_e = 126, e_e_ISi_e = 127, 
IS_DS_MS_MS = 128, IS_e_MS_MS = 129, IL_DL_ML_ML = 130, IL_e_ML_ML = 131, 
IL_DL_DL_IL = 132, IL_DL_DL_ML = 133, IL_DL_ML_IL = 134, IL_DL_e_IL = 135, 
IL_DL_e_ML = 136, IL_ML_DL_IL = 137, IL_ML_ML_IL = 138, IL_ML_e_IL = 139, 
IL_e_DL_IL = 140, IL_e_DL_ML = 141, IL_e_ML_IL = 142, IL_e_e_IL = 143, 
IL_e_e_ML = 144, L_L_L_IL = 145, L_L_e_IL = 146, L_e_L_IL = 147, 
L_e_e_IL = 148, e_e_e_ILi = 149, IS_DS_DS_IS = 150, IS_DS_DS_MS = 151, 
IS_DS_MS_IS = 152, IS_DS_e_IS = 153, IS_DS_e_MS = 154, IS_MS_DS_IS = 155, 
IS_MS_MS_IS = 156, IS_MS_e_IS = 157, IS_e_DS_IS = 158, IS_e_DS_MS = 159, 
IS_e_MS_IS = 160, IS_e_e_IS = 161, IS_e_e_MS = 162, S_S_S_IS = 163, 
S_S_e_IS = 164, S_e_S_IS = 165, S_e_e_IS = 166, e_e_e_ISi = 167, 

L_L_L_BiSiL = 168, BiSL_BmSL_BmSL_BpeL = 169, IL_ML_ML_BiSiL = 170, e_e_e_BiSiLi = 171, 
L_e_BiSiL_e = 172, L_e_BiSiL_WL = 173, L_L_BiSiL_e = 174, BiSL_BpeL_e_BmSL = 175, 
L_BiSiL_e_WL = 176, BiSL_BpeL_BpeL_e = 177, BiSL_BmSL_e_BpeL = 178, BiSL_BmSL_e_BmSL = 179, 
IL_e_BiSiL_WL = 180, BiSL_BmSL_BpeL_BmSL = 181, BiSL_BmSL_BpeL_e = 182, IL_BiSiL_e_e = 183, 
BiSL_e_BpeL_e = 184, BiSL_e_BmSL_BpeL = 185, L_BiSiL_e_e = 186, e_e_BiSiLi_e = 187, 
e_BiSiLi_e_e = 188, BiSL_BmSL_BmSL_e = 189, IL_e_DL_BiSiL = 190, IL_DL_DL_BiSiL = 191, 
IL_BiSiL_WL_WL = 192, L_L_e_BiSiL = 193, L_BiSiL_WL_WL = 194, BiSL_BmSL_BpeL_BpeL = 195, 
L_BiSiL_WL_e = 196, IL_e_BiSiL_e = 197, IL_ML_BiSiL_e = 198, BiSL_e_BpeL_BpeL = 199, 
BiSL_BpeL_BpeL_BmSL = 200, BiSL_BpeL_BpeL_BpeL = 201, L_e_e_BiSiL = 202, BiSL_BpeL_BmSL_e = 203, 
BiSL_BpeL_e_BpeL = 204, BiSL_BmSL_BmSL_BmSL = 205, BiSL_e_BmSL_e = 206, IL_ML_BiSiL_WL = 207, 
IL_DL_ML_BiSiL = 208, IL_BiSiL_e_WL = 209, L_L_BiSiL_WL = 210, BiSL_BpeL_BmSL_BmSL = 211, 
BiSL_e_BmSL_BmSL = 212, IL_DL_e_BiSiL = 213, IL_e_e_BiSiL = 214, IL_ML_e_BiSiL = 215, 
BiSL_BpeL_BmSL_BpeL = 216, BiSL_BpeL_e_e = 217, BiSL_e_BpeL_BmSL = 218, IL_BiSiL_WL_e = 219, 
BiSL_e_e_BmSL = 220, BiSL_e_e_BpeL = 221, BiSL_e_e_e = 222, IL_ML_DL_BiSiL = 223, 
BiSL_BmSL_e_e = 224, IL_e_ML_BiSiL = 225, IL_DL_BiSiL_WL = 226, L_e_L_BiSiL = 227, 
IL_DL_BiSiL_e = 228, };


/// Triplet_SCFG ancestral state information
/*
 * Automatically generated by 'tripletSCFG.pl' --write.
 */

enum State_type_ancestral { Null = 0,
EmitWR = 1, EmitWL = 2, EmitWLR = 3,
Bifurc = 4 };


map<Triplet_states, State_type_ancestral> state_type_ancestral_map;

/* Emit and Null states */
state_type_ancestral_map.insert (make_pair (IL_DL_DL_DL, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_DL_DL_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_DL_DL_e, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_DL_L_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_DL_L_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_DL_ML_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_DL_e_DL, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_DL_e_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_DL_e_e, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_L_WL_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_L_WL_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_L_e_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_L_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_ML_DL_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_ML_L_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_ML_L_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_ML_ML_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_ML_e_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_DL_DL, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_e_DL_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_DL_e, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_e_L_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_L_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_ML_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_e_DL, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_e_e_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_e_e, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IS_DS_DS_DS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_DS_DS_e, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_DS_e_DS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_DS_e_e, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_e_DS_DS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_e_DS_e, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_e_e_DS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_e_e_e, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (L_L_L_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_L_L_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_L_L_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_L_WL_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_L_WL_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_L_e_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_L_e_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_L_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_e_L_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_e_L_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_e_L_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_e_e_L, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_e_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_S_S_S, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_S_S_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_S_e_S, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_S_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_e_S_S, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_e_S_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_e_e_S, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_e_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_Li_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_Si_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_e_Li_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_e_Si_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_e_e_Li, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_e_e_Si, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_IL_WL_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_IL_WL_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_IL_e_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_IL_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_ML_DL_DL, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_ML_DL_e, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_ML_e_DL, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_ML_e_e, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (L_IL_WL_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_IL_WL_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_IL_e_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_IL_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_ILi_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_IS_WS_WS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_IS_WS_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_IS_e_WS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_IS_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_MS_DS_DS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_MS_DS_e, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_MS_e_DS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_MS_e_e, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (S_IS_WS_WS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_IS_WS_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_IS_e_WS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_IS_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_ISi_e_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_MS_MS_DS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_MS_MS_e, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_MS_MS_MS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_MS_DS_MS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_MS_e_MS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IL_ML_ML_DL, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_ML_ML_e, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_ML_ML_ML, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_ML_DL_ML, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_ML_e_ML, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_DL_IL_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_DL_IL_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_DL_ML_DL, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_DL_ML_e, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_ML_IL_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_ML_IL_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_IL_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_IL_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_ML_DL, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_e_ML_e, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (L_L_IL_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_L_IL_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_e_IL_WL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_e_IL_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_e_ILi_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_DS_IS_WS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_DS_IS_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_DS_MS_DS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_DS_MS_e, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_MS_IS_WS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_MS_IS_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_e_IS_WS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_e_IS_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_e_MS_DS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_e_MS_e, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (S_S_IS_WS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_S_IS_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_e_IS_WS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_e_IS_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_e_ISi_e, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_DS_MS_MS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_e_MS_MS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IL_DL_ML_ML, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_e_ML_ML, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_DL_DL_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_DL_DL_ML, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_DL_ML_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_DL_e_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_DL_e_ML, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_ML_DL_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_ML_ML_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_ML_e_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_DL_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_DL_ML, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (IL_e_ML_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_e_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IL_e_e_ML, State_type_ancestral::EmitWL);
state_type_ancestral_map.insert (make_pair (L_L_L_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_L_e_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_e_L_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (L_e_e_IL, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_e_e_ILi, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_DS_DS_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_DS_DS_MS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_DS_MS_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_DS_e_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_DS_e_MS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_MS_DS_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_MS_MS_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_MS_e_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_e_DS_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_e_DS_MS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (IS_e_MS_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_e_e_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (IS_e_e_MS, State_type_ancestral::EmitWLR);
state_type_ancestral_map.insert (make_pair (S_S_S_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_S_e_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_e_S_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (S_e_e_IS, State_type_ancestral::Null));
state_type_ancestral_map.insert (make_pair (e_e_e_ISi, State_type_ancestral::Null));

/* Bifurc states */
state_type_ancestral_map.insert (make_pair (L_L_L_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BmSL_BpeL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_ML_ML_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (e_e_e_BiSiLi, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (L_e_BiSiL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (L_e_BiSiL_WL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (L_L_BiSiL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BpeL_e_BmSL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (L_BiSiL_e_WL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BpeL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BmSL_e_BpeL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BmSL_e_BmSL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_e_BiSiL_WL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BpeL_BmSL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BpeL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_BiSiL_e_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_e_BpeL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_e_BmSL_BpeL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (L_BiSiL_e_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (e_e_BiSiLi_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (e_BiSiLi_e_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BmSL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_e_DL_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_DL_DL_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_BiSiL_WL_WL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (L_L_e_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (L_BiSiL_WL_WL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BpeL_BpeL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (L_BiSiL_WL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_e_BiSiL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_ML_BiSiL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_e_BpeL_BpeL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BpeL_BmSL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BpeL_BpeL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (L_e_e_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BmSL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BpeL_e_BpeL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BmSL_BmSL_BmSL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_e_BmSL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_ML_BiSiL_WL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_DL_ML_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_BiSiL_e_WL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (L_L_BiSiL_WL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BmSL_BmSL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_e_BmSL_BmSL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_DL_e_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_e_e_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_ML_e_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BpeL_BmSL_BpeL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BpeL_e_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_e_BpeL_BmSL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_BiSiL_WL_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_e_e_BmSL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_e_e_BpeL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_e_e_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_ML_DL_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (BiSL_BmSL_e_e, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_e_ML_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_DL_BiSiL_WL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (L_e_L_BiSiL, State_type_ancestral::Bifurc));
state_type_ancestral_map.insert (make_pair (IL_DL_BiSiL_e, State_type_ancestral::Bifurc));


/*
 * state initialization: Null states
 */
// state initialization: Null
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IL_DL_DL_DL, Null);
init_emit (IL_DL_DL_L, Null);
init_emit (IL_DL_DL_e, Null);
init_emit (IL_DL_L_WL, Null);
init_emit (IL_DL_L_e, Null);
init_emit (IL_DL_ML_L, Null);
init_emit (IL_DL_e_DL, Null);
init_emit (IL_DL_e_L, Null);
init_emit (IL_DL_e_e, Null);
init_emit (IL_L_WL_WL, Null);
init_emit (IL_L_WL_e, Null);
init_emit (IL_L_e_WL, Null);
init_emit (IL_L_e_e, Null);
init_emit (IL_ML_DL_L, Null);
init_emit (IL_ML_L_WL, Null);
init_emit (IL_ML_L_e, Null);
init_emit (IL_ML_ML_L, Null);
init_emit (IL_ML_e_L, Null);
init_emit (IL_e_DL_DL, Null);
init_emit (IL_e_DL_L, Null);
init_emit (IL_e_DL_e, Null);
init_emit (IL_e_L_WL, Null);
init_emit (IL_e_L_e, Null);
init_emit (IL_e_ML_L, Null);
init_emit (IL_e_e_DL, Null);
init_emit (IL_e_e_L, Null);
init_emit (IL_e_e_e, Null);
init_emit (IS_DS_DS_DS, Null);
init_emit (IS_DS_DS_e, Null);
init_emit (IS_DS_e_DS, Null);
init_emit (IS_DS_e_e, Null);
init_emit (IS_e_DS_DS, Null);
init_emit (IS_e_DS_e, Null);
init_emit (IS_e_e_DS, Null);
init_emit (IS_e_e_e, Null);
init_emit (L_L_L_L, Null);
init_emit (L_L_L_WL, Null);
init_emit (L_L_L_e, Null);
init_emit (L_L_WL_WL, Null);
init_emit (L_L_WL_e, Null);
init_emit (L_L_e_L, Null);
init_emit (L_L_e_WL, Null);
init_emit (L_L_e_e, Null);
init_emit (L_e_L_L, Null);
init_emit (L_e_L_WL, Null);
init_emit (L_e_L_e, Null);
init_emit (L_e_e_L, Null);
init_emit (L_e_e_e, Null);
init_emit (S_S_S_S, Null);
init_emit (S_S_S_e, Null);
init_emit (S_S_e_S, Null);
init_emit (S_S_e_e, Null);
init_emit (S_e_S_S, Null);
init_emit (S_e_S_e, Null);
init_emit (S_e_e_S, Null);
init_emit (S_e_e_e, Null);
init_emit (e_Li_e_e, Null);
init_emit (e_Si_e_e, Null);
init_emit (e_e_Li_e, Null);
init_emit (e_e_Si_e, Null);
init_emit (e_e_e_Li, Null);
init_emit (e_e_e_Si, Null);

/*
 * state initialization: unpaired Emit states
 */
// state initialization: EmitXL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IL_IL_WL_WL, EmitXL);
init_emit (IL_IL_WL_e, EmitXL);
init_emit (IL_IL_e_WL, EmitXL);
init_emit (IL_IL_e_e, EmitXL);
init_emit (IL_ML_DL_DL, EmitXL);
init_emit (IL_ML_DL_e, EmitXL);
init_emit (IL_ML_e_DL, EmitXL);
init_emit (IL_ML_e_e, EmitXL);
init_emit (L_IL_WL_WL, EmitXL);
init_emit (L_IL_WL_e, EmitXL);
init_emit (L_IL_e_WL, EmitXL);
init_emit (L_IL_e_e, EmitXL);
init_emit (e_ILi_e_e, EmitXL);

// emissions: EmitXL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
  {
    int emit_idx = (*this).emit_idx (EmitXL, xl, 0, 0, 0, 0, 0);
    Prob pr;
    emit[IL_IL_WL_WL][emit_idx] = Prob2Score (p1(xl));
    emit[IL_IL_WL_e][emit_idx] = Prob2Score (p1(xl));
    emit[IL_IL_e_WL][emit_idx] = Prob2Score (p1(xl));
    emit[IL_IL_e_e][emit_idx] = Prob2Score (p1(xl));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_x(wl,xl);
    emit[IL_ML_DL_DL][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_x(wl,xl);
    emit[IL_ML_DL_e][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_x(wl,xl);
    emit[IL_ML_e_DL][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_x(wl,xl);
    emit[IL_ML_e_e][emit_idx] = Prob2Score (pr);
    emit[L_IL_WL_WL][emit_idx] = Prob2Score (p1(xl));
    emit[L_IL_WL_e][emit_idx] = Prob2Score (p1(xl));
    emit[L_IL_e_WL][emit_idx] = Prob2Score (p1(xl));
    emit[L_IL_e_e][emit_idx] = Prob2Score (p1(xl));
    emit[e_ILi_e_e][emit_idx] = Prob2Score (p1(xl));
  }

// state initialization: EmitXLYL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IL_ML_ML_DL, EmitXLYL);
init_emit (IL_ML_ML_e, EmitXLYL);

// emissions: EmitXLYL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
  {
    int emit_idx = (*this).emit_idx (EmitXLYL, xl, 0, yl, 0, 0, 0);
    Prob pr;
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_x(wl,xl) * m1_y(wl,yl);
    emit[IL_ML_ML_DL][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_x(wl,xl) * m1_y(wl,yl);
    emit[IL_ML_ML_e][emit_idx] = Prob2Score (pr);
  }

// state initialization: EmitXLYLZL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IL_ML_ML_ML, EmitXLYLZL);

// emissions: EmitXLYLZL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
  {
    int emit_idx = (*this).emit_idx (EmitXLYLZL, xl, 0, yl, 0, zl, 0);
    Prob pr;
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_x(wl,xl) * m1_y(wl,yl) * m1_z(wl,zl);
    emit[IL_ML_ML_ML][emit_idx] = Prob2Score (pr);
  }

// state initialization: EmitXLZL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IL_ML_DL_ML, EmitXLZL);
init_emit (IL_ML_e_ML, EmitXLZL);

// emissions: EmitXLZL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
  {
    int emit_idx = (*this).emit_idx (EmitXLZL, xl, 0, 0, 0, zl, 0);
    Prob pr;
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_x(wl,xl) * m1_z(wl,zl);
    emit[IL_ML_DL_ML][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_x(wl,xl) * m1_z(wl,zl);
    emit[IL_ML_e_ML][emit_idx] = Prob2Score (pr);
  }

// state initialization: EmitYL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IL_DL_IL_WL, EmitYL);
init_emit (IL_DL_IL_e, EmitYL);
init_emit (IL_DL_ML_DL, EmitYL);
init_emit (IL_DL_ML_e, EmitYL);
init_emit (IL_ML_IL_WL, EmitYL);
init_emit (IL_ML_IL_e, EmitYL);
init_emit (IL_e_IL_WL, EmitYL);
init_emit (IL_e_IL_e, EmitYL);
init_emit (IL_e_ML_DL, EmitYL);
init_emit (IL_e_ML_e, EmitYL);
init_emit (L_L_IL_WL, EmitYL);
init_emit (L_L_IL_e, EmitYL);
init_emit (L_e_IL_WL, EmitYL);
init_emit (L_e_IL_e, EmitYL);
init_emit (e_e_ILi_e, EmitYL);

// emissions: EmitYL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
  {
    int emit_idx = (*this).emit_idx (EmitYL, 0, 0, yl, 0, 0, 0);
    Prob pr;
    emit[IL_DL_IL_WL][emit_idx] = Prob2Score (p1(yl));
    emit[IL_DL_IL_e][emit_idx] = Prob2Score (p1(yl));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_y(wl,yl);
    emit[IL_DL_ML_DL][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_y(wl,yl);
    emit[IL_DL_ML_e][emit_idx] = Prob2Score (pr);
    emit[IL_ML_IL_WL][emit_idx] = Prob2Score (p1(yl));
    emit[IL_ML_IL_e][emit_idx] = Prob2Score (p1(yl));
    emit[IL_e_IL_WL][emit_idx] = Prob2Score (p1(yl));
    emit[IL_e_IL_e][emit_idx] = Prob2Score (p1(yl));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_y(wl,yl);
    emit[IL_e_ML_DL][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_y(wl,yl);
    emit[IL_e_ML_e][emit_idx] = Prob2Score (pr);
    emit[L_L_IL_WL][emit_idx] = Prob2Score (p1(yl));
    emit[L_L_IL_e][emit_idx] = Prob2Score (p1(yl));
    emit[L_e_IL_WL][emit_idx] = Prob2Score (p1(yl));
    emit[L_e_IL_e][emit_idx] = Prob2Score (p1(yl));
    emit[e_e_ILi_e][emit_idx] = Prob2Score (p1(yl));
  }

// state initialization: EmitYLZL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IL_DL_ML_ML, EmitYLZL);
init_emit (IL_e_ML_ML, EmitYLZL);

// emissions: EmitYLZL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
  {
    int emit_idx = (*this).emit_idx (EmitYLZL, 0, 0, yl, 0, zl, 0);
    Prob pr;
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_y(wl,yl) * m1_z(wl,zl);
    emit[IL_DL_ML_ML][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_y(wl,yl) * m1_z(wl,zl);
    emit[IL_e_ML_ML][emit_idx] = Prob2Score (pr);
  }

// state initialization: EmitZL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IL_DL_DL_IL, EmitZL);
init_emit (IL_DL_DL_ML, EmitZL);
init_emit (IL_DL_ML_IL, EmitZL);
init_emit (IL_DL_e_IL, EmitZL);
init_emit (IL_DL_e_ML, EmitZL);
init_emit (IL_ML_DL_IL, EmitZL);
init_emit (IL_ML_ML_IL, EmitZL);
init_emit (IL_ML_e_IL, EmitZL);
init_emit (IL_e_DL_IL, EmitZL);
init_emit (IL_e_DL_ML, EmitZL);
init_emit (IL_e_ML_IL, EmitZL);
init_emit (IL_e_e_IL, EmitZL);
init_emit (IL_e_e_ML, EmitZL);
init_emit (L_L_L_IL, EmitZL);
init_emit (L_L_e_IL, EmitZL);
init_emit (L_e_L_IL, EmitZL);
init_emit (L_e_e_IL, EmitZL);
init_emit (e_e_e_ILi, EmitZL);

// emissions: EmitZL
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
  {
    int emit_idx = (*this).emit_idx (EmitZL, 0, 0, 0, 0, zl, 0);
    Prob pr;
    emit[IL_DL_DL_IL][emit_idx] = Prob2Score (p1(zl));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_z(wl,zl);
    emit[IL_DL_DL_ML][emit_idx] = Prob2Score (pr);
    emit[IL_DL_ML_IL][emit_idx] = Prob2Score (p1(zl));
    emit[IL_DL_e_IL][emit_idx] = Prob2Score (p1(zl));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_z(wl,zl);
    emit[IL_DL_e_ML][emit_idx] = Prob2Score (pr);
    emit[IL_ML_DL_IL][emit_idx] = Prob2Score (p1(zl));
    emit[IL_ML_ML_IL][emit_idx] = Prob2Score (p1(zl));
    emit[IL_ML_e_IL][emit_idx] = Prob2Score (p1(zl));
    emit[IL_e_DL_IL][emit_idx] = Prob2Score (p1(zl));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_z(wl,zl);
    emit[IL_e_DL_ML][emit_idx] = Prob2Score (pr);
    emit[IL_e_ML_IL][emit_idx] = Prob2Score (p1(zl));
    emit[IL_e_e_IL][emit_idx] = Prob2Score (p1(zl));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      pr += p1(wl) * m1_z(wl,zl);
    emit[IL_e_e_ML][emit_idx] = Prob2Score (pr);
    emit[L_L_L_IL][emit_idx] = Prob2Score (p1(zl));
    emit[L_L_e_IL][emit_idx] = Prob2Score (p1(zl));
    emit[L_e_L_IL][emit_idx] = Prob2Score (p1(zl));
    emit[L_e_e_IL][emit_idx] = Prob2Score (p1(zl));
    emit[e_e_e_ILi][emit_idx] = Prob2Score (p1(zl));
  }


/*
 * state initialization: paired Emit states
 */
// state initialization: EmitXLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IS_IS_WS_WS, EmitXLR);
init_emit (IS_IS_WS_e, EmitXLR);
init_emit (IS_IS_e_WS, EmitXLR);
init_emit (IS_IS_e_e, EmitXLR);
init_emit (IS_MS_DS_DS, EmitXLR);
init_emit (IS_MS_DS_e, EmitXLR);
init_emit (IS_MS_e_DS, EmitXLR);
init_emit (IS_MS_e_e, EmitXLR);
init_emit (S_IS_WS_WS, EmitXLR);
init_emit (S_IS_WS_e, EmitXLR);
init_emit (S_IS_e_WS, EmitXLR);
init_emit (S_IS_e_e, EmitXLR);
init_emit (e_ISi_e_e, EmitXLR);

// emissions: EmitXLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
for (int xr = 0; xr < SCFG_alphabet_size; ++xr)
  {
    int emit_idx = (*this).emit_idx (EmitXLR, xl, xr, 0, 0, 0, 0);
    Prob pr;
    int xlr = (*this).emit_idx (EmitXLR, xl, xr, 0, 0, 0, 0);
    emit[IS_IS_WS_WS][emit_idx] = Prob2Score (p2(xlr));
    emit[IS_IS_WS_e][emit_idx] = Prob2Score (p2(xlr));
    emit[IS_IS_e_WS][emit_idx] = Prob2Score (p2(xlr));
    emit[IS_IS_e_e][emit_idx] = Prob2Score (p2(xlr));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_x(wlr,xlr);
        }
    emit[IS_MS_DS_DS][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_x(wlr,xlr);
        }
    emit[IS_MS_DS_e][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_x(wlr,xlr);
        }
    emit[IS_MS_e_DS][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_x(wlr,xlr);
        }
    emit[IS_MS_e_e][emit_idx] = Prob2Score (pr);
    emit[S_IS_WS_WS][emit_idx] = Prob2Score (p2(xlr));
    emit[S_IS_WS_e][emit_idx] = Prob2Score (p2(xlr));
    emit[S_IS_e_WS][emit_idx] = Prob2Score (p2(xlr));
    emit[S_IS_e_e][emit_idx] = Prob2Score (p2(xlr));
    emit[e_ISi_e_e][emit_idx] = Prob2Score (p2(xlr));
  }

// state initialization: EmitXLRYLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IS_MS_MS_DS, EmitXLRYLR);
init_emit (IS_MS_MS_e, EmitXLRYLR);

// emissions: EmitXLRYLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
for (int xr = 0; xr < SCFG_alphabet_size; ++xr)
for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
for (int yr = 0; yr < SCFG_alphabet_size; ++yr)
  {
    int emit_idx = (*this).emit_idx (EmitXLRYLR, xl, xr, yl, yr, 0, 0);
    Prob pr;
    int xlr = (*this).emit_idx (EmitXLR, xl, xr, 0, 0, 0, 0);
    int ylr = (*this).emit_idx (EmitYLR, 0, 0, yl, yr, 0, 0);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_x(wlr,xlr) * m2_y(wlr,ylr);
        }
    emit[IS_MS_MS_DS][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_x(wlr,xlr) * m2_y(wlr,ylr);
        }
    emit[IS_MS_MS_e][emit_idx] = Prob2Score (pr);
  }

// state initialization: EmitXLRYLRZLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IS_MS_MS_MS, EmitXLRYLRZLR);

// emissions: EmitXLRYLRZLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
for (int xr = 0; xr < SCFG_alphabet_size; ++xr)
for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
for (int yr = 0; yr < SCFG_alphabet_size; ++yr)
for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
for (int zr = 0; zr < SCFG_alphabet_size; ++zr)
  {
    int emit_idx = (*this).emit_idx (EmitXLRYLRZLR, xl, xr, yl, yr, zl, zr);
    Prob pr;
    int xlr = (*this).emit_idx (EmitXLR, xl, xr, 0, 0, 0, 0);
    int ylr = (*this).emit_idx (EmitYLR, 0, 0, yl, yr, 0, 0);
    int zlr = (*this).emit_idx (EmitZLR, 0, 0, 0, 0, zl, zr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_x(wlr,xlr) * m2_y(wlr,ylr) * m2_z(wlr,zlr);
        }
    emit[IS_MS_MS_MS][emit_idx] = Prob2Score (pr);
  }

// state initialization: EmitXLRZLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IS_MS_DS_MS, EmitXLRZLR);
init_emit (IS_MS_e_MS, EmitXLRZLR);

// emissions: EmitXLRZLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int xl = 0; xl < SCFG_alphabet_size; ++xl)
for (int xr = 0; xr < SCFG_alphabet_size; ++xr)
for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
for (int zr = 0; zr < SCFG_alphabet_size; ++zr)
  {
    int emit_idx = (*this).emit_idx (EmitXLRZLR, xl, xr, 0, 0, zl, zr);
    Prob pr;
    int xlr = (*this).emit_idx (EmitXLR, xl, xr, 0, 0, 0, 0);
    int zlr = (*this).emit_idx (EmitZLR, 0, 0, 0, 0, zl, zr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_x(wlr,xlr) * m2_z(wlr,zlr);
        }
    emit[IS_MS_DS_MS][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_x(wlr,xlr) * m2_z(wlr,zlr);
        }
    emit[IS_MS_e_MS][emit_idx] = Prob2Score (pr);
  }

// state initialization: EmitYLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IS_DS_IS_WS, EmitYLR);
init_emit (IS_DS_IS_e, EmitYLR);
init_emit (IS_DS_MS_DS, EmitYLR);
init_emit (IS_DS_MS_e, EmitYLR);
init_emit (IS_MS_IS_WS, EmitYLR);
init_emit (IS_MS_IS_e, EmitYLR);
init_emit (IS_e_IS_WS, EmitYLR);
init_emit (IS_e_IS_e, EmitYLR);
init_emit (IS_e_MS_DS, EmitYLR);
init_emit (IS_e_MS_e, EmitYLR);
init_emit (S_S_IS_WS, EmitYLR);
init_emit (S_S_IS_e, EmitYLR);
init_emit (S_e_IS_WS, EmitYLR);
init_emit (S_e_IS_e, EmitYLR);
init_emit (e_e_ISi_e, EmitYLR);

// emissions: EmitYLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
for (int yr = 0; yr < SCFG_alphabet_size; ++yr)
  {
    int emit_idx = (*this).emit_idx (EmitYLR, 0, 0, yl, yr, 0, 0);
    Prob pr;
    int ylr = (*this).emit_idx (EmitYLR, 0, 0, yl, yr, 0, 0);
    emit[IS_DS_IS_WS][emit_idx] = Prob2Score (p2(ylr));
    emit[IS_DS_IS_e][emit_idx] = Prob2Score (p2(ylr));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_y(wlr,ylr);
        }
    emit[IS_DS_MS_DS][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_y(wlr,ylr);
        }
    emit[IS_DS_MS_e][emit_idx] = Prob2Score (pr);
    emit[IS_MS_IS_WS][emit_idx] = Prob2Score (p2(ylr));
    emit[IS_MS_IS_e][emit_idx] = Prob2Score (p2(ylr));
    emit[IS_e_IS_WS][emit_idx] = Prob2Score (p2(ylr));
    emit[IS_e_IS_e][emit_idx] = Prob2Score (p2(ylr));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_y(wlr,ylr);
        }
    emit[IS_e_MS_DS][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_y(wlr,ylr);
        }
    emit[IS_e_MS_e][emit_idx] = Prob2Score (pr);
    emit[S_S_IS_WS][emit_idx] = Prob2Score (p2(ylr));
    emit[S_S_IS_e][emit_idx] = Prob2Score (p2(ylr));
    emit[S_e_IS_WS][emit_idx] = Prob2Score (p2(ylr));
    emit[S_e_IS_e][emit_idx] = Prob2Score (p2(ylr));
    emit[e_e_ISi_e][emit_idx] = Prob2Score (p2(ylr));
  }

// state initialization: EmitYLRZLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IS_DS_MS_MS, EmitYLRZLR);
init_emit (IS_e_MS_MS, EmitYLRZLR);

// emissions: EmitYLRZLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int yl = 0; yl < SCFG_alphabet_size; ++yl)
for (int yr = 0; yr < SCFG_alphabet_size; ++yr)
for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
for (int zr = 0; zr < SCFG_alphabet_size; ++zr)
  {
    int emit_idx = (*this).emit_idx (EmitYLRZLR, 0, 0, yl, yr, zl, zr);
    Prob pr;
    int ylr = (*this).emit_idx (EmitYLR, 0, 0, yl, yr, 0, 0);
    int zlr = (*this).emit_idx (EmitZLR, 0, 0, 0, 0, zl, zr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_y(wlr,ylr) * m2_z(wlr,zlr);
        }
    emit[IS_DS_MS_MS][emit_idx] = Prob2Score (pr);
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_y(wlr,ylr) * m2_z(wlr,zlr);
        }
    emit[IS_e_MS_MS][emit_idx] = Prob2Score (pr);
  }

// state initialization: EmitZLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
init_emit (IS_DS_DS_IS, EmitZLR);
init_emit (IS_DS_DS_MS, EmitZLR);
init_emit (IS_DS_MS_IS, EmitZLR);
init_emit (IS_DS_e_IS, EmitZLR);
init_emit (IS_DS_e_MS, EmitZLR);
init_emit (IS_MS_DS_IS, EmitZLR);
init_emit (IS_MS_MS_IS, EmitZLR);
init_emit (IS_MS_e_IS, EmitZLR);
init_emit (IS_e_DS_IS, EmitZLR);
init_emit (IS_e_DS_MS, EmitZLR);
init_emit (IS_e_MS_IS, EmitZLR);
init_emit (IS_e_e_IS, EmitZLR);
init_emit (IS_e_e_MS, EmitZLR);
init_emit (S_S_S_IS, EmitZLR);
init_emit (S_S_e_IS, EmitZLR);
init_emit (S_e_S_IS, EmitZLR);
init_emit (S_e_e_IS, EmitZLR);
init_emit (e_e_e_ISi, EmitZLR);

// emissions: EmitZLR
//  (Automatically generated by 'tripletSCFG.pl' --write.)
for (int zl = 0; zl < SCFG_alphabet_size; ++zl)
for (int zr = 0; zr < SCFG_alphabet_size; ++zr)
  {
    int emit_idx = (*this).emit_idx (EmitZLR, 0, 0, 0, 0, zl, zr);
    Prob pr;
    int zlr = (*this).emit_idx (EmitZLR, 0, 0, 0, 0, zl, zr);
    emit[IS_DS_DS_IS][emit_idx] = Prob2Score (p2(zlr));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_z(wlr,zlr);
        }
    emit[IS_DS_DS_MS][emit_idx] = Prob2Score (pr);
    emit[IS_DS_MS_IS][emit_idx] = Prob2Score (p2(zlr));
    emit[IS_DS_e_IS][emit_idx] = Prob2Score (p2(zlr));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_z(wlr,zlr);
        }
    emit[IS_DS_e_MS][emit_idx] = Prob2Score (pr);
    emit[IS_MS_DS_IS][emit_idx] = Prob2Score (p2(zlr));
    emit[IS_MS_MS_IS][emit_idx] = Prob2Score (p2(zlr));
    emit[IS_MS_e_IS][emit_idx] = Prob2Score (p2(zlr));
    emit[IS_e_DS_IS][emit_idx] = Prob2Score (p2(zlr));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_z(wlr,zlr);
        }
    emit[IS_e_DS_MS][emit_idx] = Prob2Score (pr);
    emit[IS_e_MS_IS][emit_idx] = Prob2Score (p2(zlr));
    emit[IS_e_e_IS][emit_idx] = Prob2Score (p2(zlr));
    pr = 0;
    for (int wl = 0; wl < SCFG_alphabet_size; ++wl)
      for (int wr = 0; wr < SCFG_alphabet_size; ++wr)
        {
          // hack to create an emit_idx hash for (wl,wr)
          int wlr = (*this).emit_idx (EmitXLR, wl, wr, 0, 0, 0, 0);
          pr += p2(wlr) * m2_z(wlr,zlr);
        }
    emit[IS_e_e_MS][emit_idx] = Prob2Score (pr);
    emit[S_S_S_IS][emit_idx] = Prob2Score (p2(zlr));
    emit[S_S_e_IS][emit_idx] = Prob2Score (p2(zlr));
    emit[S_e_S_IS][emit_idx] = Prob2Score (p2(zlr));
    emit[S_e_e_IS][emit_idx] = Prob2Score (p2(zlr));
    emit[e_e_e_ISi][emit_idx] = Prob2Score (p2(zlr));
  }

/*
 * state initialization: Bifurc states
 */
init_bifurc (L_L_L_BiSiL, e_e_e_Si, L_L_L_L);
init_bifurc (BiSL_BmSL_BmSL_BpeL, S_S_S_e, L_L_L_L);
init_bifurc (IL_ML_ML_BiSiL, e_e_e_Si, IL_ML_ML_L);
init_bifurc (e_e_e_BiSiLi, e_e_e_Si, e_e_e_Li);
init_bifurc (L_e_BiSiL_e, e_e_Si_e, L_e_L_e);
init_bifurc (L_e_BiSiL_WL, e_e_Si_e, L_e_L_WL);
init_bifurc (L_L_BiSiL_e, e_e_Si_e, L_L_L_e);
init_bifurc (BiSL_BpeL_e_BmSL, S_e_e_S, L_L_e_L);
init_bifurc (L_BiSiL_e_WL, e_Si_e_e, L_L_e_WL);
init_bifurc (BiSL_BpeL_BpeL_e, S_e_e_e, L_L_L_e);
init_bifurc (BiSL_BmSL_e_BpeL, S_S_e_e, L_L_e_L);
init_bifurc (BiSL_BmSL_e_BmSL, S_S_e_S, L_L_e_L);
init_bifurc (IL_e_BiSiL_WL, e_e_Si_e, IL_e_L_WL);
init_bifurc (BiSL_BmSL_BpeL_BmSL, S_S_e_S, L_L_L_L);
init_bifurc (BiSL_BmSL_BpeL_e, S_S_e_e, L_L_L_e);
init_bifurc (IL_BiSiL_e_e, e_Si_e_e, IL_L_e_e);
init_bifurc (BiSL_e_BpeL_e, S_e_e_e, L_e_L_e);
init_bifurc (BiSL_e_BmSL_BpeL, S_e_S_e, L_e_L_L);
init_bifurc (L_BiSiL_e_e, e_Si_e_e, L_L_e_e);
init_bifurc (e_e_BiSiLi_e, e_e_Si_e, e_e_Li_e);
init_bifurc (e_BiSiLi_e_e, e_Si_e_e, e_Li_e_e);
init_bifurc (BiSL_BmSL_BmSL_e, S_S_S_e, L_L_L_e);
init_bifurc (IL_e_DL_BiSiL, e_e_e_Si, IL_e_DL_L);
init_bifurc (IL_DL_DL_BiSiL, e_e_e_Si, IL_DL_DL_L);
init_bifurc (IL_BiSiL_WL_WL, e_Si_e_e, IL_L_WL_WL);
init_bifurc (L_L_e_BiSiL, e_e_e_Si, L_L_e_L);
init_bifurc (L_BiSiL_WL_WL, e_Si_e_e, L_L_WL_WL);
init_bifurc (BiSL_BmSL_BpeL_BpeL, S_S_e_e, L_L_L_L);
init_bifurc (L_BiSiL_WL_e, e_Si_e_e, L_L_WL_e);
init_bifurc (IL_e_BiSiL_e, e_e_Si_e, IL_e_L_e);
init_bifurc (IL_ML_BiSiL_e, e_e_Si_e, IL_ML_L_e);
init_bifurc (BiSL_e_BpeL_BpeL, S_e_e_e, L_e_L_L);
init_bifurc (BiSL_BpeL_BpeL_BmSL, S_e_e_S, L_L_L_L);
init_bifurc (BiSL_BpeL_BpeL_BpeL, S_e_e_e, L_L_L_L);
init_bifurc (L_e_e_BiSiL, e_e_e_Si, L_e_e_L);
init_bifurc (BiSL_BpeL_BmSL_e, S_e_S_e, L_L_L_e);
init_bifurc (BiSL_BpeL_e_BpeL, S_e_e_e, L_L_e_L);
init_bifurc (BiSL_BmSL_BmSL_BmSL, S_S_S_S, L_L_L_L);
init_bifurc (BiSL_e_BmSL_e, S_e_S_e, L_e_L_e);
init_bifurc (IL_ML_BiSiL_WL, e_e_Si_e, IL_ML_L_WL);
init_bifurc (IL_DL_ML_BiSiL, e_e_e_Si, IL_DL_ML_L);
init_bifurc (IL_BiSiL_e_WL, e_Si_e_e, IL_L_e_WL);
init_bifurc (L_L_BiSiL_WL, e_e_Si_e, L_L_L_WL);
init_bifurc (BiSL_BpeL_BmSL_BmSL, S_e_S_S, L_L_L_L);
init_bifurc (BiSL_e_BmSL_BmSL, S_e_S_S, L_e_L_L);
init_bifurc (IL_DL_e_BiSiL, e_e_e_Si, IL_DL_e_L);
init_bifurc (IL_e_e_BiSiL, e_e_e_Si, IL_e_e_L);
init_bifurc (IL_ML_e_BiSiL, e_e_e_Si, IL_ML_e_L);
init_bifurc (BiSL_BpeL_BmSL_BpeL, S_e_S_e, L_L_L_L);
init_bifurc (BiSL_BpeL_e_e, S_e_e_e, L_L_e_e);
init_bifurc (BiSL_e_BpeL_BmSL, S_e_e_S, L_e_L_L);
init_bifurc (IL_BiSiL_WL_e, e_Si_e_e, IL_L_WL_e);
init_bifurc (BiSL_e_e_BmSL, S_e_e_S, L_e_e_L);
init_bifurc (BiSL_e_e_BpeL, S_e_e_e, L_e_e_L);
init_bifurc (BiSL_e_e_e, S_e_e_e, L_e_e_e);
init_bifurc (IL_ML_DL_BiSiL, e_e_e_Si, IL_ML_DL_L);
init_bifurc (BiSL_BmSL_e_e, S_S_e_e, L_L_e_e);
init_bifurc (IL_e_ML_BiSiL, e_e_e_Si, IL_e_ML_L);
init_bifurc (IL_DL_BiSiL_WL, e_e_Si_e, IL_DL_L_WL);
init_bifurc (L_e_L_BiSiL, e_e_e_Si, L_e_L_L);
init_bifurc (IL_DL_BiSiL_e, e_e_Si_e, IL_DL_L_e);

/*
 * transition_scores initialization
 */
transition_scores.start[L_L_L_L] = Prob2Score ((1));

/* IL_DL_DL_DL */
transition_scores.transition (IL_DL_DL_DL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_DL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-g1(u)) * (1-g1(v)));
transition_scores.transition (IL_DL_DL_DL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_DL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_DL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_DL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_DL, IL_DL_IL_WL) = Prob2Score ((g1(u)) * (1-g1(v)));
transition_scores.transition (IL_DL_DL_DL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_DL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_DL, IL_DL_DL_IL) = Prob2Score ((g1(v)));
transition_scores.transition (IL_DL_DL_DL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_DL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_DL_DL, IL_DL_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_DL_DL_DL, IL_DL_DL_BiSiL) = Prob2Score ((g1(v)*pS()));
transition_scores.end[IL_DL_DL_DL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(u))*(1)) * ((1-g1(v))*(1)));

/* IL_DL_DL_L */
transition_scores.transition (IL_DL_DL_L, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_L, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-g1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_DL_L, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_L, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_L, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_L, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_L, IL_DL_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_DL_L, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_L, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_L, IL_DL_DL_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_DL_DL_L, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_L, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_DL_L, IL_DL_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_DL_DL_L, IL_DL_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_DL_DL_L] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_DL_DL_e */
transition_scores.transition (IL_DL_DL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_DL_e, IL_IL_WL_e) = Prob2Score ((g1(t)) * (1-g1(u)));
transition_scores.transition (IL_DL_DL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_DL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))));
transition_scores.transition (IL_DL_DL_e, IL_DL_IL_e) = Prob2Score ((g1(u)));
transition_scores.transition (IL_DL_DL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))));
transition_scores.transition (IL_DL_DL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))));
transition_scores.transition (IL_DL_DL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_DL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))));
transition_scores.transition (IL_DL_DL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_DL_e, IL_BiSiL_WL_e) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_DL_e, IL_DL_BiSiL_e) = Prob2Score ((g1(u)*pS()));
transition_scores.end[IL_DL_DL_e] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(u))*(1)));

/* IL_DL_L_WL */
transition_scores.transition (IL_DL_L_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_L_WL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)));
transition_scores.transition (IL_DL_L_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_L_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_L_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_L_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_L_WL, IL_DL_IL_WL) = Prob2Score ((b1(u)));
transition_scores.transition (IL_DL_L_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_L_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_L_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_L_WL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_L_WL, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_DL_L_WL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * (1));

/* IL_DL_L_e */
transition_scores.transition (IL_DL_L_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_L_e, IL_IL_WL_e) = Prob2Score ((g1(t)) * (1-b1(u)));
transition_scores.transition (IL_DL_L_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_L_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_L_e, IL_DL_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (IL_DL_L_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_L_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_L_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_L_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_L_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_L_e, IL_BiSiL_WL_e) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_L_e, IL_DL_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_DL_L_e] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)));

/* IL_DL_ML_L */
transition_scores.transition (IL_DL_ML_L, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_L, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_ML_L, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_L, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_L, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_L, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_L, IL_DL_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_ML_L, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_L, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_L, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_L, IL_DL_ML_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_L, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_ML_L, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_DL_ML_L, IL_DL_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_DL_ML_L] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_DL_e_DL */
transition_scores.transition (IL_DL_e_DL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_DL, IL_IL_e_WL) = Prob2Score ((g1(t)) * (1-g1(v)));
transition_scores.transition (IL_DL_e_DL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_DL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_DL, IL_DL_e_IL) = Prob2Score ((g1(v)));
transition_scores.transition (IL_DL_e_DL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_DL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_DL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_DL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_DL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_DL, IL_BiSiL_e_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_e_DL, IL_DL_e_BiSiL) = Prob2Score ((g1(v)*pS()));
transition_scores.end[IL_DL_e_DL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(v))*(1)));

/* IL_DL_e_L */
transition_scores.transition (IL_DL_e_L, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_L, IL_IL_e_WL) = Prob2Score ((g1(t)) * (1-b1(v)));
transition_scores.transition (IL_DL_e_L, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_L, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_L, IL_DL_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_DL_e_L, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_L, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_L, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_L, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_L, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_L, IL_BiSiL_e_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_e_L, IL_DL_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_DL_e_L] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(v))*(1)));

/* IL_DL_e_e */
transition_scores.transition (IL_DL_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))));
transition_scores.transition (IL_DL_e_e, IL_IL_e_e) = Prob2Score ((g1(t)));
transition_scores.transition (IL_DL_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))));
transition_scores.transition (IL_DL_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))));
transition_scores.transition (IL_DL_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))));
transition_scores.transition (IL_DL_e_e, IL_BiSiL_e_e) = Prob2Score ((g1(t)*pS()));
transition_scores.end[IL_DL_e_e] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)));

/* IL_L_WL_WL */
transition_scores.transition (IL_L_WL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (IL_L_WL_WL, IL_IL_WL_WL) = Prob2Score ((b1(t)));
transition_scores.transition (IL_L_WL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (IL_L_WL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (IL_L_WL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (IL_L_WL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (IL_L_WL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (IL_L_WL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (IL_L_WL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (IL_L_WL_WL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.end[IL_L_WL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1) * (1));

/* IL_L_WL_e */
transition_scores.transition (IL_L_WL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
transition_scores.transition (IL_L_WL_e, IL_IL_WL_e) = Prob2Score ((b1(t)));
transition_scores.transition (IL_L_WL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
transition_scores.transition (IL_L_WL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)));
transition_scores.transition (IL_L_WL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
transition_scores.transition (IL_L_WL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)));
transition_scores.transition (IL_L_WL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
transition_scores.transition (IL_L_WL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
transition_scores.transition (IL_L_WL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
transition_scores.transition (IL_L_WL_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
transition_scores.end[IL_L_WL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

/* IL_L_e_WL */
transition_scores.transition (IL_L_e_WL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
transition_scores.transition (IL_L_e_WL, IL_IL_e_WL) = Prob2Score ((b1(t)));
transition_scores.transition (IL_L_e_WL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
transition_scores.transition (IL_L_e_WL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(v)));
transition_scores.transition (IL_L_e_WL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
transition_scores.transition (IL_L_e_WL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(v)));
transition_scores.transition (IL_L_e_WL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
transition_scores.transition (IL_L_e_WL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
transition_scores.transition (IL_L_e_WL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
transition_scores.transition (IL_L_e_WL, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.end[IL_L_e_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

/* IL_L_e_e */
transition_scores.transition (IL_L_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))));
transition_scores.transition (IL_L_e_e, IL_IL_e_e) = Prob2Score ((b1(t)));
transition_scores.transition (IL_L_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))));
transition_scores.transition (IL_L_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))));
transition_scores.transition (IL_L_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))));
transition_scores.transition (IL_L_e_e, IL_BiSiL_e_e) = Prob2Score ((b1(t)*pS()));
transition_scores.end[IL_L_e_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)));

/* IL_ML_DL_L */
transition_scores.transition (IL_ML_DL_L, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_L, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-g1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_DL_L, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_L, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_L, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_L, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_L, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_L, IL_ML_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_DL_L, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_L, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_L, IL_ML_DL_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_L, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_DL_L, IL_ML_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_ML_DL_L, IL_ML_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_ML_DL_L] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_ML_L_WL */
transition_scores.transition (IL_ML_L_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_L_WL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)));
transition_scores.transition (IL_ML_L_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_L_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_L_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_L_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_L_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_L_WL, IL_ML_IL_WL) = Prob2Score ((b1(u)));
transition_scores.transition (IL_ML_L_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_L_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_L_WL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_L_WL, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_ML_L_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * (1));

/* IL_ML_L_e */
transition_scores.transition (IL_ML_L_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_L_e, IL_IL_WL_e) = Prob2Score ((b1(t)) * (1-b1(u)));
transition_scores.transition (IL_ML_L_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_L_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_L_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_L_e, IL_ML_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (IL_ML_L_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_L_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_L_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_L_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_L_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_L_e, IL_ML_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_ML_L_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)));

/* IL_ML_ML_L */
transition_scores.transition (IL_ML_ML_L, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_L, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_ML_L, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_L, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_L, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_L, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_L, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_L, IL_ML_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_ML_L, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_L, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_L, IL_ML_ML_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_L, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_ML_L, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_ML_ML_L, IL_ML_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_ML_ML_L] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_ML_e_L */
transition_scores.transition (IL_ML_e_L, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_L, IL_IL_e_WL) = Prob2Score ((b1(t)) * (1-b1(v)));
transition_scores.transition (IL_ML_e_L, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_L, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_L, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_L, IL_ML_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_ML_e_L, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_L, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_L, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_L, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_L, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_e_L, IL_ML_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_ML_e_L] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(v))*(1)));

/* IL_e_DL_DL */
transition_scores.transition (IL_e_DL_DL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_DL, IL_e_IL_WL) = Prob2Score ((g1(u)) * (1-g1(v)));
transition_scores.transition (IL_e_DL_DL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_DL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_DL, IL_e_DL_IL) = Prob2Score ((g1(v)));
transition_scores.transition (IL_e_DL_DL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_DL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_DL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_DL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_DL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_DL, IL_e_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_e_DL_DL, IL_e_DL_BiSiL) = Prob2Score ((g1(v)*pS()));
transition_scores.end[IL_e_DL_DL] = Prob2Score ((1-K1()) * ((1-g1(u))*(1)) * ((1-g1(v))*(1)));

/* IL_e_DL_L */
transition_scores.transition (IL_e_DL_L, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_L, IL_e_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
transition_scores.transition (IL_e_DL_L, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_L, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_L, IL_e_DL_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_e_DL_L, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_L, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_L, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_L, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_L, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_L, IL_e_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_e_DL_L, IL_e_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_e_DL_L] = Prob2Score ((1-K1()) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_e_DL_e */
transition_scores.transition (IL_e_DL_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))));
transition_scores.transition (IL_e_DL_e, IL_e_IL_e) = Prob2Score ((g1(u)));
transition_scores.transition (IL_e_DL_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))));
transition_scores.transition (IL_e_DL_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))));
transition_scores.transition (IL_e_DL_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))));
transition_scores.transition (IL_e_DL_e, IL_e_BiSiL_e) = Prob2Score ((g1(u)*pS()));
transition_scores.end[IL_e_DL_e] = Prob2Score ((1-K1()) * ((1-g1(u))*(1)));

/* IL_e_L_WL */
transition_scores.transition (IL_e_L_WL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_e_L_WL, IL_e_IL_WL) = Prob2Score ((b1(u)));
transition_scores.transition (IL_e_L_WL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_e_L_WL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_e_L_WL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_e_L_WL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_e_L_WL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_e_L_WL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_e_L_WL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_e_L_WL, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_e_L_WL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * (1));

/* IL_e_L_e */
transition_scores.transition (IL_e_L_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_e_L_e, IL_e_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (IL_e_L_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_e_L_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_e_L_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_e_L_e, IL_e_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_e_L_e] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)));

/* IL_e_ML_L */
transition_scores.transition (IL_e_ML_L, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_L, IL_e_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (IL_e_ML_L, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_L, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_L, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_L, IL_e_ML_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_e_ML_L, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_L, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_L, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_L, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_L, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_e_ML_L, IL_e_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_e_ML_L] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_e_e_DL */
transition_scores.transition (IL_e_e_DL, IL_e_e_DL) = Prob2Score ((K1()) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_e_e_DL, IL_e_e_IL) = Prob2Score ((g1(v)));
transition_scores.transition (IL_e_e_DL, IL_e_e_ML) = Prob2Score ((K1()) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_e_e_DL, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_e_e_DL, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_e_e_DL, IL_e_e_BiSiL) = Prob2Score ((g1(v)*pS()));
transition_scores.end[IL_e_e_DL] = Prob2Score ((1-K1()) * ((1-g1(v))*(1)));

/* IL_e_e_L */
transition_scores.transition (IL_e_e_L, IL_e_e_DL) = Prob2Score ((K1()) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_e_L, IL_e_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_e_e_L, IL_e_e_ML) = Prob2Score ((K1()) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_e_L, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_e_L, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_e_L, IL_e_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_e_e_L] = Prob2Score ((1-K1()) * ((1-b1(v))*(1)));

/* IL_e_e_e */
transition_scores.transition (IL_e_e_e, IL_e_e_e) = Prob2Score ((K1()));
transition_scores.transition (IL_e_e_e, BiSL_e_e_e) = Prob2Score ((K1()*pS()));
transition_scores.end[IL_e_e_e] = Prob2Score ((1-K1()));

/* IS_DS_DS_DS */
transition_scores.transition (IS_DS_DS_DS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_DS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
transition_scores.transition (IS_DS_DS_DS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-g2(u)) * (1-g2(v)));
transition_scores.transition (IS_DS_DS_DS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_DS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_DS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_DS_DS_DS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_DS_DS_DS, IS_DS_IS_WS) = Prob2Score ((g2(u)) * (1-g2(v)));
transition_scores.transition (IS_DS_DS_DS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_DS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_DS_DS_DS, IS_DS_DS_IS) = Prob2Score ((g2(v)));
transition_scores.transition (IS_DS_DS_DS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));

/* IS_DS_DS_e */
transition_scores.transition (IS_DS_DS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))));
transition_scores.transition (IS_DS_DS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))));
transition_scores.transition (IS_DS_DS_e, IS_IS_WS_e) = Prob2Score ((g2(t)) * (1-g2(u)));
transition_scores.transition (IS_DS_DS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))));
transition_scores.transition (IS_DS_DS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))));
transition_scores.transition (IS_DS_DS_e, IS_DS_IS_e) = Prob2Score ((g2(u)));
transition_scores.transition (IS_DS_DS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))));

/* IS_DS_e_DS */
transition_scores.transition (IS_DS_e_DS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_e_DS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
transition_scores.transition (IS_DS_e_DS, IS_IS_e_WS) = Prob2Score ((g2(t)) * (1-g2(v)));
transition_scores.transition (IS_DS_e_DS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_e_DS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_DS_e_DS, IS_DS_e_IS) = Prob2Score ((g2(v)));
transition_scores.transition (IS_DS_e_DS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(v))*(a2(v))));

/* IS_DS_e_e */
transition_scores.transition (IS_DS_e_e, IS_DS_e_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))));
transition_scores.transition (IS_DS_e_e, L_L_e_e) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))));
transition_scores.transition (IS_DS_e_e, IS_IS_e_e) = Prob2Score ((g2(t)));
transition_scores.transition (IS_DS_e_e, IS_MS_e_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))));

/* IS_e_DS_DS */
transition_scores.transition (IS_e_DS_DS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_e_DS_DS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
transition_scores.transition (IS_e_DS_DS, IS_e_IS_WS) = Prob2Score ((g2(u)) * (1-g2(v)));
transition_scores.transition (IS_e_DS_DS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_e_DS_DS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_e_DS_DS, IS_e_DS_IS) = Prob2Score ((g2(v)));
transition_scores.transition (IS_e_DS_DS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));

/* IS_e_DS_e */
transition_scores.transition (IS_e_DS_e, IS_e_DS_e) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))));
transition_scores.transition (IS_e_DS_e, L_e_L_e) = Prob2Score (((1-K2())*(1)) * ((1-g2(u))*((1)*(1))));
transition_scores.transition (IS_e_DS_e, IS_e_IS_e) = Prob2Score ((g2(u)));
transition_scores.transition (IS_e_DS_e, IS_e_MS_e) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))));

/* IS_e_e_DS */
transition_scores.transition (IS_e_e_DS, IS_e_e_DS) = Prob2Score ((K2()) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_e_e_DS, L_e_e_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(v))*((1)*(1))));
transition_scores.transition (IS_e_e_DS, IS_e_e_IS) = Prob2Score ((g2(v)));
transition_scores.transition (IS_e_e_DS, IS_e_e_MS) = Prob2Score ((K2()) * ((1-g2(v))*(a2(v))));

/* IS_e_e_e */
transition_scores.transition (IS_e_e_e, IS_e_e_e) = Prob2Score ((K2()));
transition_scores.transition (IS_e_e_e, L_e_e_e) = Prob2Score (((1-K2())*(1)));

/* L_L_L_L */
transition_scores.transition (L_L_L_L, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_L, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_L, L_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-b1(v)));
transition_scores.transition (L_L_L_L, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_L, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_L, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_L, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_L, L_L_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (L_L_L_L, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_L, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_L, L_L_L_IL) = Prob2Score ((b1(v)));
transition_scores.transition (L_L_L_L, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_L, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_L, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_L, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_L, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_L, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_L, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_L, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_L, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (L_L_L_L, L_L_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (L_L_L_L, L_L_L_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[L_L_L_L] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* L_L_L_WL */
transition_scores.transition (L_L_L_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_L_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_L_WL, L_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)));
transition_scores.transition (L_L_L_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_L_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_L_L_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_L_L_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_L_WL, L_L_IL_WL) = Prob2Score ((b1(u)));
transition_scores.transition (L_L_L_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_L_L_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_L_L_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_L_L_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_L_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_L_L_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_L_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_L_L_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_L_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_L_L_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_L_WL, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (L_L_L_WL, L_L_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.end[L_L_L_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * (1));

/* L_L_L_e */
transition_scores.transition (L_L_L_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_L_L_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_L_L_e, L_IL_WL_e) = Prob2Score ((b1(t)) * (1-b1(u)));
transition_scores.transition (L_L_L_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_L_L_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_L_L_e, L_L_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (L_L_L_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_L_L_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_L_L_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_L_L_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_L_L_e, L_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (L_L_L_e, L_L_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[L_L_L_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)));

/* L_L_WL_WL */
transition_scores.transition (L_L_WL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (L_L_WL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (L_L_WL_WL, L_IL_WL_WL) = Prob2Score ((b1(t)));
transition_scores.transition (L_L_WL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (L_L_WL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (L_L_WL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (L_L_WL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (L_L_WL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (L_L_WL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (L_L_WL_WL, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.end[L_L_WL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1) * (1));

/* L_L_WL_e */
transition_scores.transition (L_L_WL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
transition_scores.transition (L_L_WL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
transition_scores.transition (L_L_WL_e, L_IL_WL_e) = Prob2Score ((b1(t)));
transition_scores.transition (L_L_WL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)));
transition_scores.transition (L_L_WL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
transition_scores.transition (L_L_WL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)));
transition_scores.transition (L_L_WL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
transition_scores.transition (L_L_WL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
transition_scores.transition (L_L_WL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
transition_scores.transition (L_L_WL_e, L_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
transition_scores.end[L_L_WL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

/* L_L_e_L */
transition_scores.transition (L_L_e_L, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_e_L, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_e_L, L_IL_e_WL) = Prob2Score ((b1(t)) * (1-b1(v)));
transition_scores.transition (L_L_e_L, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_e_L, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_e_L, L_L_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (L_L_e_L, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_e_L, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_e_L, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_e_L, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_e_L, L_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (L_L_e_L, L_L_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[L_L_e_L] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(v))*(1)));

/* L_L_e_WL */
transition_scores.transition (L_L_e_WL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
transition_scores.transition (L_L_e_WL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
transition_scores.transition (L_L_e_WL, L_IL_e_WL) = Prob2Score ((b1(t)));
transition_scores.transition (L_L_e_WL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(v)));
transition_scores.transition (L_L_e_WL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
transition_scores.transition (L_L_e_WL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(v)));
transition_scores.transition (L_L_e_WL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
transition_scores.transition (L_L_e_WL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
transition_scores.transition (L_L_e_WL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
transition_scores.transition (L_L_e_WL, L_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.end[L_L_e_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

/* L_L_e_e */
transition_scores.transition (L_L_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))));
transition_scores.transition (L_L_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))));
transition_scores.transition (L_L_e_e, L_IL_e_e) = Prob2Score ((b1(t)));
transition_scores.transition (L_L_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))));
transition_scores.transition (L_L_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))));
transition_scores.transition (L_L_e_e, L_BiSiL_e_e) = Prob2Score ((b1(t)*pS()));
transition_scores.end[L_L_e_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)));

/* L_e_L_L */
transition_scores.transition (L_e_L_L, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_L_L, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_L_L, L_e_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (L_e_L_L, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_L_L, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_L_L, L_e_L_IL) = Prob2Score ((b1(v)));
transition_scores.transition (L_e_L_L, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_L_L, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_L_L, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_L_L, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_L_L, L_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (L_e_L_L, L_e_L_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[L_e_L_L] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* L_e_L_WL */
transition_scores.transition (L_e_L_WL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_e_L_WL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_e_L_WL, L_e_IL_WL) = Prob2Score ((b1(u)));
transition_scores.transition (L_e_L_WL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_e_L_WL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_e_L_WL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_e_L_WL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_e_L_WL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_e_L_WL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_e_L_WL, L_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.end[L_e_L_WL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * (1));

/* L_e_L_e */
transition_scores.transition (L_e_L_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_e_L_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_e_L_e, L_e_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (L_e_L_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_e_L_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_e_L_e, L_e_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[L_e_L_e] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)));

/* L_e_e_L */
transition_scores.transition (L_e_e_L, IL_e_e_DL) = Prob2Score ((K1()) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_e_L, IL_e_e_ML) = Prob2Score ((K1()) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_e_L, L_e_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (L_e_e_L, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_e_L, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_e_L, L_e_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[L_e_e_L] = Prob2Score ((1-K1()) * ((1-b1(v))*(1)));

/* L_e_e_e */
transition_scores.transition (L_e_e_e, IL_e_e_e) = Prob2Score ((K1()));
transition_scores.transition (L_e_e_e, BiSL_e_e_e) = Prob2Score ((K1()*pS()));
transition_scores.end[L_e_e_e] = Prob2Score ((1-K1()));

/* S_S_S_S */
transition_scores.transition (S_S_S_S, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_S_S, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (S_S_S_S, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_S_S, S_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)) * (1-b2(v)));
transition_scores.transition (S_S_S_S, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_S_S, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_S_S, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_S_S, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_S_S, S_S_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
transition_scores.transition (S_S_S_S, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_S_S, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_S_S, S_S_S_IS) = Prob2Score ((b2(v)));

/* S_S_S_e */
transition_scores.transition (S_S_S_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (S_S_S_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
transition_scores.transition (S_S_S_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (S_S_S_e, S_IS_WS_e) = Prob2Score ((b2(t)) * (1-b2(u)));
transition_scores.transition (S_S_S_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
transition_scores.transition (S_S_S_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));
transition_scores.transition (S_S_S_e, S_S_IS_e) = Prob2Score ((b2(u)));

/* S_S_e_S */
transition_scores.transition (S_S_e_S, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_e_S, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (S_S_e_S, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_e_S, S_IS_e_WS) = Prob2Score ((b2(t)) * (1-b2(v)));
transition_scores.transition (S_S_e_S, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_e_S, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_e_S, S_S_e_IS) = Prob2Score ((b2(v)));

/* S_S_e_e */
transition_scores.transition (S_S_e_e, IS_DS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))));
transition_scores.transition (S_S_e_e, L_L_e_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))));
transition_scores.transition (S_S_e_e, IS_MS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))));
transition_scores.transition (S_S_e_e, S_IS_e_e) = Prob2Score ((b2(t)));

/* S_e_S_S */
transition_scores.transition (S_e_S_S, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_e_S_S, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (S_e_S_S, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_e_S_S, S_e_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
transition_scores.transition (S_e_S_S, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_e_S_S, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_e_S_S, S_e_S_IS) = Prob2Score ((b2(v)));

/* S_e_S_e */
transition_scores.transition (S_e_S_e, IS_e_DS_e) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (S_e_S_e, L_e_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))));
transition_scores.transition (S_e_S_e, IS_e_MS_e) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))));
transition_scores.transition (S_e_S_e, S_e_IS_e) = Prob2Score ((b2(u)));

/* S_e_e_S */
transition_scores.transition (S_e_e_S, IS_e_e_DS) = Prob2Score ((K2()) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_e_e_S, L_e_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (S_e_e_S, IS_e_e_MS) = Prob2Score ((K2()) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_e_e_S, S_e_e_IS) = Prob2Score ((b2(v)));

/* S_e_e_e */
transition_scores.transition (S_e_e_e, IS_e_e_e) = Prob2Score ((K2()));
transition_scores.transition (S_e_e_e, L_e_e_e) = Prob2Score (((1-K2())*(1)));

/* e_Li_e_e */
transition_scores.transition (e_Li_e_e, e_ILi_e_e) = Prob2Score ((K1()));
transition_scores.transition (e_Li_e_e, e_BiSiLi_e_e) = Prob2Score ((K1()*pS()));
transition_scores.end[e_Li_e_e] = Prob2Score ((1-K1()));

/* e_Si_e_e */
transition_scores.transition (e_Si_e_e, e_Li_e_e) = Prob2Score (((1-K2())*(1)));
transition_scores.transition (e_Si_e_e, e_ISi_e_e) = Prob2Score ((K2()));

/* e_e_Li_e */
transition_scores.transition (e_e_Li_e, e_e_ILi_e) = Prob2Score ((K1()));
transition_scores.transition (e_e_Li_e, e_e_BiSiLi_e) = Prob2Score ((K1()*pS()));
transition_scores.end[e_e_Li_e] = Prob2Score ((1-K1()));

/* e_e_Si_e */
transition_scores.transition (e_e_Si_e, e_e_Li_e) = Prob2Score (((1-K2())*(1)));
transition_scores.transition (e_e_Si_e, e_e_ISi_e) = Prob2Score ((K2()));

/* e_e_e_Li */
transition_scores.transition (e_e_e_Li, e_e_e_ILi) = Prob2Score ((K1()));
transition_scores.transition (e_e_e_Li, e_e_e_BiSiLi) = Prob2Score ((K1()*pS()));
transition_scores.end[e_e_e_Li] = Prob2Score ((1-K1()));

/* e_e_e_Si */
transition_scores.transition (e_e_e_Si, e_e_e_Li) = Prob2Score (((1-K2())*(1)));
transition_scores.transition (e_e_e_Si, e_e_e_ISi) = Prob2Score ((K2()));

/* IL_IL_WL_WL */
transition_scores.transition (IL_IL_WL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (IL_IL_WL_WL, IL_IL_WL_WL) = Prob2Score ((b1(t)));
transition_scores.transition (IL_IL_WL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (IL_IL_WL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (IL_IL_WL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (IL_IL_WL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (IL_IL_WL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (IL_IL_WL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (IL_IL_WL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (IL_IL_WL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (IL_IL_WL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (IL_IL_WL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (IL_IL_WL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (IL_IL_WL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (IL_IL_WL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (IL_IL_WL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (IL_IL_WL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (IL_IL_WL_WL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.end[IL_IL_WL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1) * (1));

/* IL_IL_WL_e */
transition_scores.transition (IL_IL_WL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
transition_scores.transition (IL_IL_WL_e, IL_IL_WL_e) = Prob2Score ((b1(t)));
transition_scores.transition (IL_IL_WL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
transition_scores.transition (IL_IL_WL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)));
transition_scores.transition (IL_IL_WL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
transition_scores.transition (IL_IL_WL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)));
transition_scores.transition (IL_IL_WL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
transition_scores.transition (IL_IL_WL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
transition_scores.transition (IL_IL_WL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
transition_scores.transition (IL_IL_WL_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
transition_scores.end[IL_IL_WL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

/* IL_IL_e_WL */
transition_scores.transition (IL_IL_e_WL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
transition_scores.transition (IL_IL_e_WL, IL_IL_e_WL) = Prob2Score ((b1(t)));
transition_scores.transition (IL_IL_e_WL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
transition_scores.transition (IL_IL_e_WL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(v)));
transition_scores.transition (IL_IL_e_WL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
transition_scores.transition (IL_IL_e_WL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(v)));
transition_scores.transition (IL_IL_e_WL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
transition_scores.transition (IL_IL_e_WL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
transition_scores.transition (IL_IL_e_WL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
transition_scores.transition (IL_IL_e_WL, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.end[IL_IL_e_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

/* IL_IL_e_e */
transition_scores.transition (IL_IL_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))));
transition_scores.transition (IL_IL_e_e, IL_IL_e_e) = Prob2Score ((b1(t)));
transition_scores.transition (IL_IL_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))));
transition_scores.transition (IL_IL_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))));
transition_scores.transition (IL_IL_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))));
transition_scores.transition (IL_IL_e_e, IL_BiSiL_e_e) = Prob2Score ((b1(t)*pS()));
transition_scores.end[IL_IL_e_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)));

/* IL_ML_DL_DL */
transition_scores.transition (IL_ML_DL_DL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_DL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-g1(u)) * (1-g1(v)));
transition_scores.transition (IL_ML_DL_DL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_DL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_DL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_DL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_DL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_DL, IL_ML_IL_WL) = Prob2Score ((g1(u)) * (1-g1(v)));
transition_scores.transition (IL_ML_DL_DL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_DL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_DL, IL_ML_DL_IL) = Prob2Score ((g1(v)));
transition_scores.transition (IL_ML_DL_DL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_DL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_DL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_DL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_DL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_DL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_DL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_DL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_DL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_DL_DL, IL_ML_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_ML_DL_DL, IL_ML_DL_BiSiL) = Prob2Score ((g1(v)*pS()));
transition_scores.end[IL_ML_DL_DL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(u))*(1)) * ((1-g1(v))*(1)));

/* IL_ML_DL_e */
transition_scores.transition (IL_ML_DL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_DL_e, IL_IL_WL_e) = Prob2Score ((b1(t)) * (1-g1(u)));
transition_scores.transition (IL_ML_DL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_DL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))));
transition_scores.transition (IL_ML_DL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))));
transition_scores.transition (IL_ML_DL_e, IL_ML_IL_e) = Prob2Score ((g1(u)));
transition_scores.transition (IL_ML_DL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))));
transition_scores.transition (IL_ML_DL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_DL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))));
transition_scores.transition (IL_ML_DL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_DL_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_DL_e, IL_ML_BiSiL_e) = Prob2Score ((g1(u)*pS()));
transition_scores.end[IL_ML_DL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(u))*(1)));

/* IL_ML_e_DL */
transition_scores.transition (IL_ML_e_DL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_DL, IL_IL_e_WL) = Prob2Score ((b1(t)) * (1-g1(v)));
transition_scores.transition (IL_ML_e_DL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_DL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_DL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_DL, IL_ML_e_IL) = Prob2Score ((g1(v)));
transition_scores.transition (IL_ML_e_DL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_DL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_DL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_DL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_DL, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_e_DL, IL_ML_e_BiSiL) = Prob2Score ((g1(v)*pS()));
transition_scores.end[IL_ML_e_DL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(v))*(1)));

/* IL_ML_e_e */
transition_scores.transition (IL_ML_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))));
transition_scores.transition (IL_ML_e_e, IL_IL_e_e) = Prob2Score ((b1(t)));
transition_scores.transition (IL_ML_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))));
transition_scores.transition (IL_ML_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))));
transition_scores.transition (IL_ML_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))));
transition_scores.transition (IL_ML_e_e, IL_BiSiL_e_e) = Prob2Score ((b1(t)*pS()));
transition_scores.end[IL_ML_e_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)));

/* L_IL_WL_WL */
transition_scores.transition (L_IL_WL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (L_IL_WL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (L_IL_WL_WL, L_IL_WL_WL) = Prob2Score ((b1(t)));
transition_scores.transition (L_IL_WL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (L_IL_WL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (L_IL_WL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (L_IL_WL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (L_IL_WL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (L_IL_WL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (L_IL_WL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (L_IL_WL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (L_IL_WL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (L_IL_WL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (L_IL_WL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (a1(v)));
transition_scores.transition (L_IL_WL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)) * (1-a1(v)));
transition_scores.transition (L_IL_WL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (a1(v)));
transition_scores.transition (L_IL_WL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)) * (1-a1(v)));
transition_scores.transition (L_IL_WL_WL, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.end[L_IL_WL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1) * (1));

/* L_IL_WL_e */
transition_scores.transition (L_IL_WL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
transition_scores.transition (L_IL_WL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
transition_scores.transition (L_IL_WL_e, L_IL_WL_e) = Prob2Score ((b1(t)));
transition_scores.transition (L_IL_WL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(u)));
transition_scores.transition (L_IL_WL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
transition_scores.transition (L_IL_WL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(u)));
transition_scores.transition (L_IL_WL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(u)));
transition_scores.transition (L_IL_WL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(u)));
transition_scores.transition (L_IL_WL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(u)));
transition_scores.transition (L_IL_WL_e, L_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
transition_scores.end[L_IL_WL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

/* L_IL_e_WL */
transition_scores.transition (L_IL_e_WL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
transition_scores.transition (L_IL_e_WL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
transition_scores.transition (L_IL_e_WL, L_IL_e_WL) = Prob2Score ((b1(t)));
transition_scores.transition (L_IL_e_WL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * (a1(v)));
transition_scores.transition (L_IL_e_WL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
transition_scores.transition (L_IL_e_WL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (a1(v)));
transition_scores.transition (L_IL_e_WL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * (1-a1(v)));
transition_scores.transition (L_IL_e_WL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (a1(v)));
transition_scores.transition (L_IL_e_WL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * (1-a1(v)));
transition_scores.transition (L_IL_e_WL, L_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.end[L_IL_e_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * (1));

/* L_IL_e_e */
transition_scores.transition (L_IL_e_e, IL_DL_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))));
transition_scores.transition (L_IL_e_e, IL_ML_e_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))));
transition_scores.transition (L_IL_e_e, L_IL_e_e) = Prob2Score ((b1(t)));
transition_scores.transition (L_IL_e_e, BiSL_BmSL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))));
transition_scores.transition (L_IL_e_e, BiSL_BpeL_e_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))));
transition_scores.transition (L_IL_e_e, L_BiSiL_e_e) = Prob2Score ((b1(t)*pS()));
transition_scores.end[L_IL_e_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)));

/* e_ILi_e_e */
transition_scores.transition (e_ILi_e_e, e_ILi_e_e) = Prob2Score ((K1()));
transition_scores.transition (e_ILi_e_e, e_BiSiLi_e_e) = Prob2Score ((K1()*pS()));
transition_scores.end[e_ILi_e_e] = Prob2Score ((1-K1()));

/* IS_IS_WS_WS */
transition_scores.transition (IS_IS_WS_WS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)) * (1-a2(v)));
transition_scores.transition (IS_IS_WS_WS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)) * ((1)*(1)));
transition_scores.transition (IS_IS_WS_WS, IS_IS_WS_WS) = Prob2Score ((b2(t)));
transition_scores.transition (IS_IS_WS_WS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)) * (1-a2(v)));
transition_scores.transition (IS_IS_WS_WS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)) * (1-a2(v)));
transition_scores.transition (IS_IS_WS_WS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)) * (a2(v)));
transition_scores.transition (IS_IS_WS_WS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)) * (a2(v)));
transition_scores.transition (IS_IS_WS_WS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)) * (1-a2(v)));
transition_scores.transition (IS_IS_WS_WS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)) * (a2(v)));
transition_scores.transition (IS_IS_WS_WS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)) * (a2(v)));

/* IS_IS_WS_e */
transition_scores.transition (IS_IS_WS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)));
transition_scores.transition (IS_IS_WS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)));
transition_scores.transition (IS_IS_WS_e, IS_IS_WS_e) = Prob2Score ((b2(t)));
transition_scores.transition (IS_IS_WS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)));
transition_scores.transition (IS_IS_WS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)));
transition_scores.transition (IS_IS_WS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)));

/* IS_IS_e_WS */
transition_scores.transition (IS_IS_e_WS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(v)));
transition_scores.transition (IS_IS_e_WS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)));
transition_scores.transition (IS_IS_e_WS, IS_IS_e_WS) = Prob2Score ((b2(t)));
transition_scores.transition (IS_IS_e_WS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(v)));
transition_scores.transition (IS_IS_e_WS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(v)));
transition_scores.transition (IS_IS_e_WS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(v)));

/* IS_IS_e_e */
transition_scores.transition (IS_IS_e_e, IS_DS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))));
transition_scores.transition (IS_IS_e_e, L_L_e_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))));
transition_scores.transition (IS_IS_e_e, IS_IS_e_e) = Prob2Score ((b2(t)));
transition_scores.transition (IS_IS_e_e, IS_MS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))));

/* IS_MS_DS_DS */
transition_scores.transition (IS_MS_DS_DS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_DS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
transition_scores.transition (IS_MS_DS_DS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-g2(u)) * (1-g2(v)));
transition_scores.transition (IS_MS_DS_DS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_DS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_DS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_DS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_DS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_DS, IS_MS_IS_WS) = Prob2Score ((g2(u)) * (1-g2(v)));
transition_scores.transition (IS_MS_DS_DS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_DS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_DS, IS_MS_DS_IS) = Prob2Score ((g2(v)));

/* IS_MS_DS_e */
transition_scores.transition (IS_MS_DS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))));
transition_scores.transition (IS_MS_DS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))));
transition_scores.transition (IS_MS_DS_e, IS_IS_WS_e) = Prob2Score ((b2(t)) * (1-g2(u)));
transition_scores.transition (IS_MS_DS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))));
transition_scores.transition (IS_MS_DS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))));
transition_scores.transition (IS_MS_DS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))));
transition_scores.transition (IS_MS_DS_e, IS_MS_IS_e) = Prob2Score ((g2(u)));

/* IS_MS_e_DS */
transition_scores.transition (IS_MS_e_DS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_e_DS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
transition_scores.transition (IS_MS_e_DS, IS_IS_e_WS) = Prob2Score ((b2(t)) * (1-g2(v)));
transition_scores.transition (IS_MS_e_DS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_e_DS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_MS_e_DS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_MS_e_DS, IS_MS_e_IS) = Prob2Score ((g2(v)));

/* IS_MS_e_e */
transition_scores.transition (IS_MS_e_e, IS_DS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))));
transition_scores.transition (IS_MS_e_e, L_L_e_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))));
transition_scores.transition (IS_MS_e_e, IS_IS_e_e) = Prob2Score ((b2(t)));
transition_scores.transition (IS_MS_e_e, IS_MS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))));

/* S_IS_WS_WS */
transition_scores.transition (S_IS_WS_WS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)) * (1-a2(v)));
transition_scores.transition (S_IS_WS_WS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)) * ((1)*(1)));
transition_scores.transition (S_IS_WS_WS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)) * (1-a2(v)));
transition_scores.transition (S_IS_WS_WS, S_IS_WS_WS) = Prob2Score ((b2(t)));
transition_scores.transition (S_IS_WS_WS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)) * (1-a2(v)));
transition_scores.transition (S_IS_WS_WS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)) * (a2(v)));
transition_scores.transition (S_IS_WS_WS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)) * (a2(v)));
transition_scores.transition (S_IS_WS_WS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)) * (1-a2(v)));
transition_scores.transition (S_IS_WS_WS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)) * (a2(v)));
transition_scores.transition (S_IS_WS_WS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)) * (a2(v)));

/* S_IS_WS_e */
transition_scores.transition (S_IS_WS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(u)));
transition_scores.transition (S_IS_WS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)));
transition_scores.transition (S_IS_WS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(u)));
transition_scores.transition (S_IS_WS_e, S_IS_WS_e) = Prob2Score ((b2(t)));
transition_scores.transition (S_IS_WS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(u)));
transition_scores.transition (S_IS_WS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(u)));

/* S_IS_e_WS */
transition_scores.transition (S_IS_e_WS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (1-a2(v)));
transition_scores.transition (S_IS_e_WS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1)*(1)));
transition_scores.transition (S_IS_e_WS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (1-a2(v)));
transition_scores.transition (S_IS_e_WS, S_IS_e_WS) = Prob2Score ((b2(t)));
transition_scores.transition (S_IS_e_WS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * (a2(v)));
transition_scores.transition (S_IS_e_WS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * (a2(v)));

/* S_IS_e_e */
transition_scores.transition (S_IS_e_e, IS_DS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))));
transition_scores.transition (S_IS_e_e, L_L_e_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))));
transition_scores.transition (S_IS_e_e, IS_MS_e_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))));
transition_scores.transition (S_IS_e_e, S_IS_e_e) = Prob2Score ((b2(t)));

/* e_ISi_e_e */
transition_scores.transition (e_ISi_e_e, e_Li_e_e) = Prob2Score (((1-K2())*(1)));
transition_scores.transition (e_ISi_e_e, e_ISi_e_e) = Prob2Score ((K2()));

/* IS_MS_MS_DS */
transition_scores.transition (IS_MS_MS_DS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_DS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
transition_scores.transition (IS_MS_MS_DS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)) * (1-g2(v)));
transition_scores.transition (IS_MS_MS_DS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_DS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_DS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_DS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_DS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_DS, IS_MS_IS_WS) = Prob2Score ((b2(u)) * (1-g2(v)));
transition_scores.transition (IS_MS_MS_DS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_DS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_DS, IS_MS_MS_IS) = Prob2Score ((g2(v)));

/* IS_MS_MS_e */
transition_scores.transition (IS_MS_MS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (IS_MS_MS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
transition_scores.transition (IS_MS_MS_e, IS_IS_WS_e) = Prob2Score ((b2(t)) * (1-b2(u)));
transition_scores.transition (IS_MS_MS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (IS_MS_MS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
transition_scores.transition (IS_MS_MS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));
transition_scores.transition (IS_MS_MS_e, IS_MS_IS_e) = Prob2Score ((b2(u)));

/* IS_MS_MS_MS */
transition_scores.transition (IS_MS_MS_MS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_MS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_MS_MS_MS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)) * (1-b2(v)));
transition_scores.transition (IS_MS_MS_MS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_MS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_MS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_MS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_MS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_MS, IS_MS_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
transition_scores.transition (IS_MS_MS_MS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_MS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_MS, IS_MS_MS_IS) = Prob2Score ((b2(v)));

/* IS_MS_DS_MS */
transition_scores.transition (IS_MS_DS_MS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_MS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_MS_DS_MS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-g2(u)) * (1-b2(v)));
transition_scores.transition (IS_MS_DS_MS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_MS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_MS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_MS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_MS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_MS, IS_MS_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
transition_scores.transition (IS_MS_DS_MS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_MS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_MS, IS_MS_DS_IS) = Prob2Score ((b2(v)));

/* IS_MS_e_MS */
transition_scores.transition (IS_MS_e_MS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_e_MS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_MS_e_MS, IS_IS_e_WS) = Prob2Score ((b2(t)) * (1-b2(v)));
transition_scores.transition (IS_MS_e_MS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_e_MS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_e_MS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_e_MS, IS_MS_e_IS) = Prob2Score ((b2(v)));

/* IL_ML_ML_DL */
transition_scores.transition (IL_ML_ML_DL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_DL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-g1(v)));
transition_scores.transition (IL_ML_ML_DL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_DL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_DL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_DL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_DL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_DL, IL_ML_IL_WL) = Prob2Score ((b1(u)) * (1-g1(v)));
transition_scores.transition (IL_ML_ML_DL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_DL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_DL, IL_ML_ML_IL) = Prob2Score ((g1(v)));
transition_scores.transition (IL_ML_ML_DL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_DL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_DL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_DL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_DL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_DL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_DL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_DL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_DL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_ML_DL, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_ML_ML_DL, IL_ML_ML_BiSiL) = Prob2Score ((g1(v)*pS()));
transition_scores.end[IL_ML_ML_DL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-g1(v))*(1)));

/* IL_ML_ML_e */
transition_scores.transition (IL_ML_ML_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_ML_e, IL_IL_WL_e) = Prob2Score ((b1(t)) * (1-b1(u)));
transition_scores.transition (IL_ML_ML_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_ML_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_ML_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_ML_e, IL_ML_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (IL_ML_ML_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_ML_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_ML_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_ML_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_ML_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_ML_e, IL_ML_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_ML_ML_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)));

/* IL_ML_ML_ML */
transition_scores.transition (IL_ML_ML_ML, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_ML, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_ML_ML, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_ML, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_ML, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_ML, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_ML, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_ML, IL_ML_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_ML_ML, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_ML, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_ML, IL_ML_ML_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_ML_ML_ML, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_ML, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_ML, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_ML, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_ML, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_ML, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_ML, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_ML, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_ML, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_ML_ML, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_ML_ML_ML, IL_ML_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_ML_ML_ML] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_ML_DL_ML */
transition_scores.transition (IL_ML_DL_ML, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_ML, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-g1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_DL_ML, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_ML, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_ML, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_ML, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_ML, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_ML, IL_ML_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_DL_ML, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_ML, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_ML, IL_ML_DL_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_ML_DL_ML, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_ML, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_ML, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_ML, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_ML, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_ML, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_ML, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_ML, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_ML, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_DL_ML, IL_ML_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_ML_DL_ML, IL_ML_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_ML_DL_ML] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_ML_e_ML */
transition_scores.transition (IL_ML_e_ML, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_ML, IL_IL_e_WL) = Prob2Score ((b1(t)) * (1-b1(v)));
transition_scores.transition (IL_ML_e_ML, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_ML, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_ML, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_ML, IL_ML_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_ML_e_ML, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_ML, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_ML, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_ML, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_ML, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_e_ML, IL_ML_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_ML_e_ML] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(v))*(1)));

/* IL_DL_IL_WL */
transition_scores.transition (IL_DL_IL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_IL_WL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)));
transition_scores.transition (IL_DL_IL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_IL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_IL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_IL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_IL_WL, IL_DL_IL_WL) = Prob2Score ((b1(u)));
transition_scores.transition (IL_DL_IL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_IL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_IL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_IL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_IL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_IL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_IL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_IL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_IL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_IL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_DL_IL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_DL_IL_WL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_IL_WL, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_DL_IL_WL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * (1));

/* IL_DL_IL_e */
transition_scores.transition (IL_DL_IL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_IL_e, IL_IL_WL_e) = Prob2Score ((g1(t)) * (1-b1(u)));
transition_scores.transition (IL_DL_IL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_IL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_IL_e, IL_DL_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (IL_DL_IL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_IL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_IL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_IL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_IL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_IL_e, IL_BiSiL_WL_e) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_IL_e, IL_DL_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_DL_IL_e] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)));

/* IL_DL_ML_DL */
transition_scores.transition (IL_DL_ML_DL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_DL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)) * (1-g1(v)));
transition_scores.transition (IL_DL_ML_DL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_DL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_DL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_DL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_DL, IL_DL_IL_WL) = Prob2Score ((b1(u)) * (1-g1(v)));
transition_scores.transition (IL_DL_ML_DL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_DL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_DL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_DL, IL_DL_ML_IL) = Prob2Score ((g1(v)));
transition_scores.transition (IL_DL_ML_DL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_DL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_DL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_DL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_DL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_DL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_DL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_DL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_DL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_ML_DL, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_DL_ML_DL, IL_DL_ML_BiSiL) = Prob2Score ((g1(v)*pS()));
transition_scores.end[IL_DL_ML_DL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * ((1-g1(v))*(1)));

/* IL_DL_ML_e */
transition_scores.transition (IL_DL_ML_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_ML_e, IL_IL_WL_e) = Prob2Score ((g1(t)) * (1-b1(u)));
transition_scores.transition (IL_DL_ML_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_ML_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_ML_e, IL_DL_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (IL_DL_ML_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_ML_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_ML_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_ML_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_DL_ML_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_DL_ML_e, IL_BiSiL_WL_e) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_ML_e, IL_DL_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_DL_ML_e] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)));

/* IL_ML_IL_WL */
transition_scores.transition (IL_ML_IL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_IL_WL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)));
transition_scores.transition (IL_ML_IL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_IL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_IL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_IL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_IL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_IL_WL, IL_ML_IL_WL) = Prob2Score ((b1(u)));
transition_scores.transition (IL_ML_IL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_IL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_IL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_IL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_IL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_IL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_IL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_IL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_IL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_ML_IL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_ML_IL_WL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_IL_WL, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_ML_IL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * (1));

/* IL_ML_IL_e */
transition_scores.transition (IL_ML_IL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_IL_e, IL_IL_WL_e) = Prob2Score ((b1(t)) * (1-b1(u)));
transition_scores.transition (IL_ML_IL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_IL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_IL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_IL_e, IL_ML_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (IL_ML_IL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_IL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_IL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_ML_IL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_ML_IL_e, IL_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_IL_e, IL_ML_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_ML_IL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)));

/* IL_e_IL_WL */
transition_scores.transition (IL_e_IL_WL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_e_IL_WL, IL_e_IL_WL) = Prob2Score ((b1(u)));
transition_scores.transition (IL_e_IL_WL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_e_IL_WL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_e_IL_WL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_e_IL_WL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (IL_e_IL_WL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (IL_e_IL_WL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (IL_e_IL_WL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (IL_e_IL_WL, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_e_IL_WL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * (1));

/* IL_e_IL_e */
transition_scores.transition (IL_e_IL_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_e_IL_e, IL_e_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (IL_e_IL_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_e_IL_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_e_IL_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_e_IL_e, IL_e_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_e_IL_e] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)));

/* IL_e_ML_DL */
transition_scores.transition (IL_e_ML_DL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_DL, IL_e_IL_WL) = Prob2Score ((b1(u)) * (1-g1(v)));
transition_scores.transition (IL_e_ML_DL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_DL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_DL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_DL, IL_e_ML_IL) = Prob2Score ((g1(v)));
transition_scores.transition (IL_e_ML_DL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_DL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_DL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_DL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-g1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_DL, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_e_ML_DL, IL_e_ML_BiSiL) = Prob2Score ((g1(v)*pS()));
transition_scores.end[IL_e_ML_DL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-g1(v))*(1)));

/* IL_e_ML_e */
transition_scores.transition (IL_e_ML_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_e_ML_e, IL_e_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (IL_e_ML_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_e_ML_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))));
transition_scores.transition (IL_e_ML_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (IL_e_ML_e, IL_e_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[IL_e_ML_e] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)));

/* L_L_IL_WL */
transition_scores.transition (L_L_IL_WL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_IL_WL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_IL_WL, L_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)));
transition_scores.transition (L_L_IL_WL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_IL_WL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_L_IL_WL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_L_IL_WL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_IL_WL, L_L_IL_WL) = Prob2Score ((b1(u)));
transition_scores.transition (L_L_IL_WL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_L_IL_WL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_L_IL_WL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_L_IL_WL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_IL_WL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_L_IL_WL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_IL_WL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_L_IL_WL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_IL_WL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_L_IL_WL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_L_IL_WL, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (L_L_IL_WL, L_L_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.end[L_L_IL_WL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * (1));

/* L_L_IL_e */
transition_scores.transition (L_L_IL_e, IL_DL_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_L_IL_e, IL_ML_DL_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_L_IL_e, L_IL_WL_e) = Prob2Score ((b1(t)) * (1-b1(u)));
transition_scores.transition (L_L_IL_e, IL_ML_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_L_IL_e, IL_DL_ML_e) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_L_IL_e, L_L_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (L_L_IL_e, BiSL_BmSL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_L_IL_e, BiSL_BmSL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_L_IL_e, BiSL_BpeL_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_L_IL_e, BiSL_BpeL_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_L_IL_e, L_BiSiL_WL_e) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (L_L_IL_e, L_L_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[L_L_IL_e] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)));

/* L_e_IL_WL */
transition_scores.transition (L_e_IL_WL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_e_IL_WL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_e_IL_WL, L_e_IL_WL) = Prob2Score ((b1(u)));
transition_scores.transition (L_e_IL_WL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_e_IL_WL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_e_IL_WL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (a1(v)));
transition_scores.transition (L_e_IL_WL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * (1-a1(v)));
transition_scores.transition (L_e_IL_WL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (a1(v)));
transition_scores.transition (L_e_IL_WL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * (1-a1(v)));
transition_scores.transition (L_e_IL_WL, L_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.end[L_e_IL_WL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * (1));

/* L_e_IL_e */
transition_scores.transition (L_e_IL_e, IL_e_DL_e) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_e_IL_e, IL_e_ML_e) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_e_IL_e, L_e_IL_e) = Prob2Score ((b1(u)));
transition_scores.transition (L_e_IL_e, BiSL_e_BmSL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))));
transition_scores.transition (L_e_IL_e, BiSL_e_BpeL_e) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))));
transition_scores.transition (L_e_IL_e, L_e_BiSiL_e) = Prob2Score ((b1(u)*pS()));
transition_scores.end[L_e_IL_e] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)));

/* e_e_ILi_e */
transition_scores.transition (e_e_ILi_e, e_e_ILi_e) = Prob2Score ((K1()));
transition_scores.transition (e_e_ILi_e, e_e_BiSiLi_e) = Prob2Score ((K1()*pS()));
transition_scores.end[e_e_ILi_e] = Prob2Score ((1-K1()));

/* IS_DS_IS_WS */
transition_scores.transition (IS_DS_IS_WS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
transition_scores.transition (IS_DS_IS_WS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1)*(1)));
transition_scores.transition (IS_DS_IS_WS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-b2(u)));
transition_scores.transition (IS_DS_IS_WS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
transition_scores.transition (IS_DS_IS_WS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
transition_scores.transition (IS_DS_IS_WS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
transition_scores.transition (IS_DS_IS_WS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));
transition_scores.transition (IS_DS_IS_WS, IS_DS_IS_WS) = Prob2Score ((b2(u)));
transition_scores.transition (IS_DS_IS_WS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
transition_scores.transition (IS_DS_IS_WS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
transition_scores.transition (IS_DS_IS_WS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));

/* IS_DS_IS_e */
transition_scores.transition (IS_DS_IS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (IS_DS_IS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
transition_scores.transition (IS_DS_IS_e, IS_IS_WS_e) = Prob2Score ((g2(t)) * (1-b2(u)));
transition_scores.transition (IS_DS_IS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (IS_DS_IS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
transition_scores.transition (IS_DS_IS_e, IS_DS_IS_e) = Prob2Score ((b2(u)));
transition_scores.transition (IS_DS_IS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));

/* IS_DS_MS_DS */
transition_scores.transition (IS_DS_MS_DS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_DS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
transition_scores.transition (IS_DS_MS_DS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-b2(u)) * (1-g2(v)));
transition_scores.transition (IS_DS_MS_DS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_DS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_DS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_DS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_DS, IS_DS_IS_WS) = Prob2Score ((b2(u)) * (1-g2(v)));
transition_scores.transition (IS_DS_MS_DS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_DS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_DS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_DS, IS_DS_MS_IS) = Prob2Score ((g2(v)));

/* IS_DS_MS_e */
transition_scores.transition (IS_DS_MS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (IS_DS_MS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
transition_scores.transition (IS_DS_MS_e, IS_IS_WS_e) = Prob2Score ((g2(t)) * (1-b2(u)));
transition_scores.transition (IS_DS_MS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (IS_DS_MS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
transition_scores.transition (IS_DS_MS_e, IS_DS_IS_e) = Prob2Score ((b2(u)));
transition_scores.transition (IS_DS_MS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));

/* IS_MS_IS_WS */
transition_scores.transition (IS_MS_IS_WS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
transition_scores.transition (IS_MS_IS_WS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1)*(1)));
transition_scores.transition (IS_MS_IS_WS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)));
transition_scores.transition (IS_MS_IS_WS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
transition_scores.transition (IS_MS_IS_WS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
transition_scores.transition (IS_MS_IS_WS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
transition_scores.transition (IS_MS_IS_WS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));
transition_scores.transition (IS_MS_IS_WS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
transition_scores.transition (IS_MS_IS_WS, IS_MS_IS_WS) = Prob2Score ((b2(u)));
transition_scores.transition (IS_MS_IS_WS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
transition_scores.transition (IS_MS_IS_WS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));

/* IS_MS_IS_e */
transition_scores.transition (IS_MS_IS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (IS_MS_IS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
transition_scores.transition (IS_MS_IS_e, IS_IS_WS_e) = Prob2Score ((b2(t)) * (1-b2(u)));
transition_scores.transition (IS_MS_IS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (IS_MS_IS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
transition_scores.transition (IS_MS_IS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));
transition_scores.transition (IS_MS_IS_e, IS_MS_IS_e) = Prob2Score ((b2(u)));

/* IS_e_IS_WS */
transition_scores.transition (IS_e_IS_WS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
transition_scores.transition (IS_e_IS_WS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1)*(1)));
transition_scores.transition (IS_e_IS_WS, IS_e_IS_WS) = Prob2Score ((b2(u)));
transition_scores.transition (IS_e_IS_WS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
transition_scores.transition (IS_e_IS_WS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * (a2(v)));
transition_scores.transition (IS_e_IS_WS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * (a2(v)));

/* IS_e_IS_e */
transition_scores.transition (IS_e_IS_e, IS_e_DS_e) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (IS_e_IS_e, L_e_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))));
transition_scores.transition (IS_e_IS_e, IS_e_IS_e) = Prob2Score ((b2(u)));
transition_scores.transition (IS_e_IS_e, IS_e_MS_e) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))));

/* IS_e_MS_DS */
transition_scores.transition (IS_e_MS_DS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_e_MS_DS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1-g2(v))*((1)*(1))));
transition_scores.transition (IS_e_MS_DS, IS_e_IS_WS) = Prob2Score ((b2(u)) * (1-g2(v)));
transition_scores.transition (IS_e_MS_DS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(1-a2(v))));
transition_scores.transition (IS_e_MS_DS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_e_MS_DS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-g2(v))*(a2(v))));
transition_scores.transition (IS_e_MS_DS, IS_e_MS_IS) = Prob2Score ((g2(v)));

/* IS_e_MS_e */
transition_scores.transition (IS_e_MS_e, IS_e_DS_e) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (IS_e_MS_e, L_e_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))));
transition_scores.transition (IS_e_MS_e, IS_e_IS_e) = Prob2Score ((b2(u)));
transition_scores.transition (IS_e_MS_e, IS_e_MS_e) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))));

/* S_S_IS_WS */
transition_scores.transition (S_S_IS_WS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
transition_scores.transition (S_S_IS_WS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1)*(1)));
transition_scores.transition (S_S_IS_WS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
transition_scores.transition (S_S_IS_WS, S_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)));
transition_scores.transition (S_S_IS_WS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
transition_scores.transition (S_S_IS_WS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
transition_scores.transition (S_S_IS_WS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));
transition_scores.transition (S_S_IS_WS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
transition_scores.transition (S_S_IS_WS, S_S_IS_WS) = Prob2Score ((b2(u)));
transition_scores.transition (S_S_IS_WS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * (a2(v)));
transition_scores.transition (S_S_IS_WS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * (a2(v)));

/* S_S_IS_e */
transition_scores.transition (S_S_IS_e, IS_DS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (S_S_IS_e, L_L_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))));
transition_scores.transition (S_S_IS_e, IS_MS_DS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (S_S_IS_e, S_IS_WS_e) = Prob2Score ((b2(t)) * (1-b2(u)));
transition_scores.transition (S_S_IS_e, IS_MS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))));
transition_scores.transition (S_S_IS_e, IS_DS_MS_e) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))));
transition_scores.transition (S_S_IS_e, S_S_IS_e) = Prob2Score ((b2(u)));

/* S_e_IS_WS */
transition_scores.transition (S_e_IS_WS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * (1-a2(v)));
transition_scores.transition (S_e_IS_WS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1)*(1)));
transition_scores.transition (S_e_IS_WS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * (1-a2(v)));
transition_scores.transition (S_e_IS_WS, S_e_IS_WS) = Prob2Score ((b2(u)));
transition_scores.transition (S_e_IS_WS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * (a2(v)));
transition_scores.transition (S_e_IS_WS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * (a2(v)));

/* S_e_IS_e */
transition_scores.transition (S_e_IS_e, IS_e_DS_e) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))));
transition_scores.transition (S_e_IS_e, L_e_L_e) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))));
transition_scores.transition (S_e_IS_e, IS_e_MS_e) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))));
transition_scores.transition (S_e_IS_e, S_e_IS_e) = Prob2Score ((b2(u)));

/* e_e_ISi_e */
transition_scores.transition (e_e_ISi_e, e_e_Li_e) = Prob2Score (((1-K2())*(1)));
transition_scores.transition (e_e_ISi_e, e_e_ISi_e) = Prob2Score ((K2()));

/* IS_DS_MS_MS */
transition_scores.transition (IS_DS_MS_MS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_MS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_DS_MS_MS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-b2(u)) * (1-b2(v)));
transition_scores.transition (IS_DS_MS_MS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_MS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_MS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_MS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_MS, IS_DS_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
transition_scores.transition (IS_DS_MS_MS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_MS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_MS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_MS, IS_DS_MS_IS) = Prob2Score ((b2(v)));

/* IS_e_MS_MS */
transition_scores.transition (IS_e_MS_MS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_e_MS_MS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_e_MS_MS, IS_e_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
transition_scores.transition (IS_e_MS_MS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_e_MS_MS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_e_MS_MS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_e_MS_MS, IS_e_MS_IS) = Prob2Score ((b2(v)));

/* IL_DL_ML_ML */
transition_scores.transition (IL_DL_ML_ML, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_ML, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_ML_ML, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_ML, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_ML, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_ML, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_ML, IL_DL_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_ML_ML, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_ML, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_ML, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_ML, IL_DL_ML_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_DL_ML_ML, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_ML, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_ML, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_ML, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_ML, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_ML, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_ML, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_ML, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_ML, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_ML_ML, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_DL_ML_ML, IL_DL_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_DL_ML_ML] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_e_ML_ML */
transition_scores.transition (IL_e_ML_ML, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_ML, IL_e_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (IL_e_ML_ML, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_ML, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_ML, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_ML, IL_e_ML_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_e_ML_ML, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_ML, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_ML, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_ML, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_ML, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_e_ML_ML, IL_e_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_e_ML_ML] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_DL_DL_IL */
transition_scores.transition (IL_DL_DL_IL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_IL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-g1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_DL_IL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_IL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_IL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_IL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_IL, IL_DL_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_DL_IL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_IL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_IL, IL_DL_DL_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_DL_DL_IL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_IL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_IL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_IL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_IL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_IL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_IL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_IL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_IL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_IL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_DL_IL, IL_DL_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_DL_DL_IL, IL_DL_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_DL_DL_IL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_DL_DL_ML */
transition_scores.transition (IL_DL_DL_ML, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_ML, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-g1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_DL_ML, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_ML, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_ML, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_ML, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_ML, IL_DL_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_DL_ML, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_ML, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_ML, IL_DL_DL_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_DL_DL_ML, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_ML, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_ML, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_ML, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_ML, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_ML, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_ML, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_ML, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_DL_ML, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_DL_ML, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_DL_ML, IL_DL_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_DL_DL_ML, IL_DL_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_DL_DL_ML] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_DL_ML_IL */
transition_scores.transition (IL_DL_ML_IL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_IL, IL_IL_WL_WL) = Prob2Score ((g1(t)) * (1-b1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_ML_IL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_IL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_IL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_IL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_IL, IL_DL_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (IL_DL_ML_IL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_IL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_IL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_IL, IL_DL_ML_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_DL_ML_IL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_IL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_IL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_IL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_IL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_IL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_IL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_ML_IL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_ML_IL, IL_BiSiL_WL_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_ML_IL, IL_DL_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_DL_ML_IL, IL_DL_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_DL_ML_IL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_DL_e_IL */
transition_scores.transition (IL_DL_e_IL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_IL, IL_IL_e_WL) = Prob2Score ((g1(t)) * (1-b1(v)));
transition_scores.transition (IL_DL_e_IL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_IL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_IL, IL_DL_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_DL_e_IL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_IL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_IL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_IL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_IL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_IL, IL_BiSiL_e_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_e_IL, IL_DL_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_DL_e_IL] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(v))*(1)));

/* IL_DL_e_ML */
transition_scores.transition (IL_DL_e_ML, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_ML, IL_IL_e_WL) = Prob2Score ((g1(t)) * (1-b1(v)));
transition_scores.transition (IL_DL_e_ML, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_ML, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_ML, IL_DL_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_DL_e_ML, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_ML, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_ML, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_ML, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_DL_e_ML, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_DL_e_ML, IL_BiSiL_e_WL) = Prob2Score ((g1(t)*pS()));
transition_scores.transition (IL_DL_e_ML, IL_DL_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_DL_e_ML] = Prob2Score ((1-K1()) * ((1-g1(t))*(1)) * ((1-b1(v))*(1)));

/* IL_ML_DL_IL */
transition_scores.transition (IL_ML_DL_IL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_IL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-g1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_DL_IL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_IL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_IL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_IL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_IL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_IL, IL_ML_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_DL_IL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_IL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_IL, IL_ML_DL_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_ML_DL_IL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_IL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_IL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_IL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_IL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_IL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_IL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_DL_IL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_DL_IL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_DL_IL, IL_ML_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_ML_DL_IL, IL_ML_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_ML_DL_IL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_ML_ML_IL */
transition_scores.transition (IL_ML_ML_IL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_IL, IL_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_ML_IL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_IL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_IL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_IL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_IL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_IL, IL_ML_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (IL_ML_ML_IL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_IL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_IL, IL_ML_ML_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_ML_ML_IL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_IL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_IL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_IL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_IL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_IL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_IL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_ML_IL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_ML_IL, IL_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_ML_IL, IL_ML_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_ML_ML_IL, IL_ML_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_ML_ML_IL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_ML_e_IL */
transition_scores.transition (IL_ML_e_IL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_IL, IL_IL_e_WL) = Prob2Score ((b1(t)) * (1-b1(v)));
transition_scores.transition (IL_ML_e_IL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_IL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_IL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_IL, IL_ML_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_ML_e_IL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_IL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_IL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_ML_e_IL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_ML_e_IL, IL_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (IL_ML_e_IL, IL_ML_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_ML_e_IL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(v))*(1)));

/* IL_e_DL_IL */
transition_scores.transition (IL_e_DL_IL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_IL, IL_e_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
transition_scores.transition (IL_e_DL_IL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_IL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_IL, IL_e_DL_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_e_DL_IL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_IL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_IL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_IL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_IL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_IL, IL_e_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_e_DL_IL, IL_e_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_e_DL_IL] = Prob2Score ((1-K1()) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_e_DL_ML */
transition_scores.transition (IL_e_DL_ML, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_ML, IL_e_IL_WL) = Prob2Score ((g1(u)) * (1-b1(v)));
transition_scores.transition (IL_e_DL_ML, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_ML, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_ML, IL_e_DL_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_e_DL_ML, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_ML, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_ML, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_ML, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_DL_ML, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-g1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_DL_ML, IL_e_BiSiL_WL) = Prob2Score ((g1(u)*pS()));
transition_scores.transition (IL_e_DL_ML, IL_e_DL_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_e_DL_ML] = Prob2Score ((1-K1()) * ((1-g1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_e_ML_IL */
transition_scores.transition (IL_e_ML_IL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_IL, IL_e_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (IL_e_ML_IL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_IL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_IL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_IL, IL_e_ML_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_e_ML_IL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_IL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_IL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_ML_IL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_ML_IL, IL_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (IL_e_ML_IL, IL_e_ML_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_e_ML_IL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* IL_e_e_IL */
transition_scores.transition (IL_e_e_IL, IL_e_e_DL) = Prob2Score ((K1()) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_e_IL, IL_e_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_e_e_IL, IL_e_e_ML) = Prob2Score ((K1()) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_e_IL, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_e_IL, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_e_IL, IL_e_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_e_e_IL] = Prob2Score ((1-K1()) * ((1-b1(v))*(1)));

/* IL_e_e_ML */
transition_scores.transition (IL_e_e_ML, IL_e_e_DL) = Prob2Score ((K1()) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_e_ML, IL_e_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (IL_e_e_ML, IL_e_e_ML) = Prob2Score ((K1()) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_e_ML, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(a1(v))));
transition_scores.transition (IL_e_e_ML, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (IL_e_e_ML, IL_e_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[IL_e_e_ML] = Prob2Score ((1-K1()) * ((1-b1(v))*(1)));

/* L_L_L_IL */
transition_scores.transition (L_L_L_IL, IL_DL_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_IL, IL_ML_DL_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_IL, L_IL_WL_WL) = Prob2Score ((b1(t)) * (1-b1(u)) * (1-b1(v)));
transition_scores.transition (L_L_L_IL, IL_ML_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_IL, IL_ML_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_IL, IL_ML_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_IL, IL_DL_ML_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_IL, L_L_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (L_L_L_IL, IL_DL_ML_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_IL, IL_DL_DL_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_IL, L_L_L_IL) = Prob2Score ((b1(v)));
transition_scores.transition (L_L_L_IL, BiSL_BmSL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_IL, BiSL_BmSL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_IL, BiSL_BmSL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_IL, BiSL_BmSL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_IL, BiSL_BpeL_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_IL, BiSL_BpeL_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_IL, BiSL_BpeL_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_L_IL, BiSL_BpeL_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_L_IL, L_BiSiL_WL_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (L_L_L_IL, L_L_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (L_L_L_IL, L_L_L_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[L_L_L_IL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* L_L_e_IL */
transition_scores.transition (L_L_e_IL, IL_DL_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_e_IL, IL_ML_e_DL) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_e_IL, L_IL_e_WL) = Prob2Score ((b1(t)) * (1-b1(v)));
transition_scores.transition (L_L_e_IL, IL_ML_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_e_IL, IL_DL_e_ML) = Prob2Score ((K1()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_e_IL, L_L_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (L_L_e_IL, BiSL_BmSL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_e_IL, BiSL_BmSL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_e_IL, BiSL_BpeL_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_L_e_IL, BiSL_BpeL_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(t))*(1-a1(t))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_L_e_IL, L_BiSiL_e_WL) = Prob2Score ((b1(t)*pS()));
transition_scores.transition (L_L_e_IL, L_L_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[L_L_e_IL] = Prob2Score ((1-K1()) * ((1-b1(t))*(1)) * ((1-b1(v))*(1)));

/* L_e_L_IL */
transition_scores.transition (L_e_L_IL, IL_e_DL_DL) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_L_IL, IL_e_ML_DL) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_L_IL, L_e_IL_WL) = Prob2Score ((b1(u)) * (1-b1(v)));
transition_scores.transition (L_e_L_IL, IL_e_ML_ML) = Prob2Score ((K1()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_L_IL, IL_e_DL_ML) = Prob2Score ((K1()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_L_IL, L_e_L_IL) = Prob2Score ((b1(v)));
transition_scores.transition (L_e_L_IL, BiSL_e_BmSL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_L_IL, BiSL_e_BmSL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_L_IL, BiSL_e_BpeL_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_L_IL, BiSL_e_BpeL_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(u))*(1-a1(u))) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_L_IL, L_e_BiSiL_WL) = Prob2Score ((b1(u)*pS()));
transition_scores.transition (L_e_L_IL, L_e_L_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[L_e_L_IL] = Prob2Score ((1-K1()) * ((1-b1(u))*(1)) * ((1-b1(v))*(1)));

/* L_e_e_IL */
transition_scores.transition (L_e_e_IL, IL_e_e_DL) = Prob2Score ((K1()) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_e_IL, IL_e_e_ML) = Prob2Score ((K1()) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_e_IL, L_e_e_IL) = Prob2Score ((b1(v)));
transition_scores.transition (L_e_e_IL, BiSL_e_e_BmSL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(a1(v))));
transition_scores.transition (L_e_e_IL, BiSL_e_e_BpeL) = Prob2Score ((K1()*pS()) * ((1-b1(v))*(1-a1(v))));
transition_scores.transition (L_e_e_IL, L_e_e_BiSiL) = Prob2Score ((b1(v)*pS()));
transition_scores.end[L_e_e_IL] = Prob2Score ((1-K1()) * ((1-b1(v))*(1)));

/* e_e_e_ILi */
transition_scores.transition (e_e_e_ILi, e_e_e_ILi) = Prob2Score ((K1()));
transition_scores.transition (e_e_e_ILi, e_e_e_BiSiLi) = Prob2Score ((K1()*pS()));
transition_scores.end[e_e_e_ILi] = Prob2Score ((1-K1()));

/* IS_DS_DS_IS */
transition_scores.transition (IS_DS_DS_IS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_IS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_DS_DS_IS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-g2(u)) * (1-b2(v)));
transition_scores.transition (IS_DS_DS_IS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_IS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_IS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_DS_IS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_DS_IS, IS_DS_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
transition_scores.transition (IS_DS_DS_IS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_IS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_DS_IS, IS_DS_DS_IS) = Prob2Score ((b2(v)));
transition_scores.transition (IS_DS_DS_IS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));

/* IS_DS_DS_MS */
transition_scores.transition (IS_DS_DS_MS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_MS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_DS_DS_MS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-g2(u)) * (1-b2(v)));
transition_scores.transition (IS_DS_DS_MS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_MS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_MS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_DS_MS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_DS_MS, IS_DS_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
transition_scores.transition (IS_DS_DS_MS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_DS_MS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_DS_MS, IS_DS_DS_IS) = Prob2Score ((b2(v)));
transition_scores.transition (IS_DS_DS_MS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));

/* IS_DS_MS_IS */
transition_scores.transition (IS_DS_MS_IS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_IS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_DS_MS_IS, IS_IS_WS_WS) = Prob2Score ((g2(t)) * (1-b2(u)) * (1-b2(v)));
transition_scores.transition (IS_DS_MS_IS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_IS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_IS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_IS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_IS, IS_DS_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
transition_scores.transition (IS_DS_MS_IS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_MS_IS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_IS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_MS_IS, IS_DS_MS_IS) = Prob2Score ((b2(v)));

/* IS_DS_e_IS */
transition_scores.transition (IS_DS_e_IS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_e_IS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_DS_e_IS, IS_IS_e_WS) = Prob2Score ((g2(t)) * (1-b2(v)));
transition_scores.transition (IS_DS_e_IS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_e_IS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_e_IS, IS_DS_e_IS) = Prob2Score ((b2(v)));
transition_scores.transition (IS_DS_e_IS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));

/* IS_DS_e_MS */
transition_scores.transition (IS_DS_e_MS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_e_MS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_DS_e_MS, IS_IS_e_WS) = Prob2Score ((g2(t)) * (1-b2(v)));
transition_scores.transition (IS_DS_e_MS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_DS_e_MS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_DS_e_MS, IS_DS_e_IS) = Prob2Score ((b2(v)));
transition_scores.transition (IS_DS_e_MS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-g2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));

/* IS_MS_DS_IS */
transition_scores.transition (IS_MS_DS_IS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_IS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_MS_DS_IS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-g2(u)) * (1-b2(v)));
transition_scores.transition (IS_MS_DS_IS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_IS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_IS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_IS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_IS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_DS_IS, IS_MS_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
transition_scores.transition (IS_MS_DS_IS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_IS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_DS_IS, IS_MS_DS_IS) = Prob2Score ((b2(v)));

/* IS_MS_MS_IS */
transition_scores.transition (IS_MS_MS_IS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_IS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_MS_MS_IS, IS_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)) * (1-b2(v)));
transition_scores.transition (IS_MS_MS_IS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_IS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_IS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_IS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_IS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_MS_IS, IS_MS_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
transition_scores.transition (IS_MS_MS_IS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_IS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_MS_IS, IS_MS_MS_IS) = Prob2Score ((b2(v)));

/* IS_MS_e_IS */
transition_scores.transition (IS_MS_e_IS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_e_IS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_MS_e_IS, IS_IS_e_WS) = Prob2Score ((b2(t)) * (1-b2(v)));
transition_scores.transition (IS_MS_e_IS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_MS_e_IS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_e_IS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_MS_e_IS, IS_MS_e_IS) = Prob2Score ((b2(v)));

/* IS_e_DS_IS */
transition_scores.transition (IS_e_DS_IS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_e_DS_IS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_e_DS_IS, IS_e_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
transition_scores.transition (IS_e_DS_IS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_e_DS_IS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_e_DS_IS, IS_e_DS_IS) = Prob2Score ((b2(v)));
transition_scores.transition (IS_e_DS_IS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));

/* IS_e_DS_MS */
transition_scores.transition (IS_e_DS_MS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_e_DS_MS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-g2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_e_DS_MS, IS_e_IS_WS) = Prob2Score ((g2(u)) * (1-b2(v)));
transition_scores.transition (IS_e_DS_MS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_e_DS_MS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_e_DS_MS, IS_e_DS_IS) = Prob2Score ((b2(v)));
transition_scores.transition (IS_e_DS_MS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-g2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));

/* IS_e_MS_IS */
transition_scores.transition (IS_e_MS_IS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_e_MS_IS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_e_MS_IS, IS_e_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
transition_scores.transition (IS_e_MS_IS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_e_MS_IS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_e_MS_IS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (IS_e_MS_IS, IS_e_MS_IS) = Prob2Score ((b2(v)));

/* IS_e_e_IS */
transition_scores.transition (IS_e_e_IS, IS_e_e_DS) = Prob2Score ((K2()) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_e_e_IS, L_e_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_e_e_IS, IS_e_e_IS) = Prob2Score ((b2(v)));
transition_scores.transition (IS_e_e_IS, IS_e_e_MS) = Prob2Score ((K2()) * ((1-b2(v))*(a2(v))));

/* IS_e_e_MS */
transition_scores.transition (IS_e_e_MS, IS_e_e_DS) = Prob2Score ((K2()) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (IS_e_e_MS, L_e_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (IS_e_e_MS, IS_e_e_IS) = Prob2Score ((b2(v)));
transition_scores.transition (IS_e_e_MS, IS_e_e_MS) = Prob2Score ((K2()) * ((1-b2(v))*(a2(v))));

/* S_S_S_IS */
transition_scores.transition (S_S_S_IS, IS_DS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_S_IS, L_L_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (S_S_S_IS, IS_MS_DS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_S_IS, S_IS_WS_WS) = Prob2Score ((b2(t)) * (1-b2(u)) * (1-b2(v)));
transition_scores.transition (S_S_S_IS, IS_MS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_S_IS, IS_MS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_S_IS, IS_MS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_S_IS, IS_DS_MS_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_S_IS, S_S_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
transition_scores.transition (S_S_S_IS, IS_DS_MS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_S_IS, IS_DS_DS_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_S_IS, S_S_S_IS) = Prob2Score ((b2(v)));

/* S_S_e_IS */
transition_scores.transition (S_S_e_IS, IS_DS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_e_IS, L_L_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(t))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (S_S_e_IS, IS_MS_e_DS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_S_e_IS, S_IS_e_WS) = Prob2Score ((b2(t)) * (1-b2(v)));
transition_scores.transition (S_S_e_IS, IS_MS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(a2(t))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_e_IS, IS_DS_e_MS) = Prob2Score ((K2()) * ((1-b2(t))*(1-a2(t))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_S_e_IS, S_S_e_IS) = Prob2Score ((b2(v)));

/* S_e_S_IS */
transition_scores.transition (S_e_S_IS, IS_e_DS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_e_S_IS, L_e_L_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(u))*((1)*(1))) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (S_e_S_IS, IS_e_MS_DS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_e_S_IS, S_e_IS_WS) = Prob2Score ((b2(u)) * (1-b2(v)));
transition_scores.transition (S_e_S_IS, IS_e_MS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_e_S_IS, IS_e_DS_MS) = Prob2Score ((K2()) * ((1-b2(u))*(1-a2(u))) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_e_S_IS, S_e_S_IS) = Prob2Score ((b2(v)));

/* S_e_e_IS */
transition_scores.transition (S_e_e_IS, IS_e_e_DS) = Prob2Score ((K2()) * ((1-b2(v))*(1-a2(v))));
transition_scores.transition (S_e_e_IS, L_e_e_L) = Prob2Score (((1-K2())*(1)) * ((1-b2(v))*((1)*(1))));
transition_scores.transition (S_e_e_IS, IS_e_e_MS) = Prob2Score ((K2()) * ((1-b2(v))*(a2(v))));
transition_scores.transition (S_e_e_IS, S_e_e_IS) = Prob2Score ((b2(v)));

/* e_e_e_ISi */
transition_scores.transition (e_e_e_ISi, e_e_e_Li) = Prob2Score (((1-K2())*(1)));
transition_scores.transition (e_e_e_ISi, e_e_e_ISi) = Prob2Score ((K2()));

/*
 * transition_scores initialization: effective direct transitions 
 * due to half-empty bifurcations 
 */
/* 
 * IL_DL_DL_DL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
 *   L_L_L_L -> End
 *   S_S_S_S
 * giving an effective transition
 *   IL_DL_DL_DL -> S_S_S_S
 */
transition_scores.transition (IL_DL_DL_DL, S_S_S_S) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_DL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
 *   L_L_L_L -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_DL_DL_DL -> S_S_S_e
 */
transition_scores.transition (IL_DL_DL_DL, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_DL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
 *   L_L_L_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_DL_DL_DL -> S_S_e_S
 */
transition_scores.transition (IL_DL_DL_DL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_DL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
 *   L_L_L_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_DL_DL_DL -> S_S_e_e
 */
transition_scores.transition (IL_DL_DL_DL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_DL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
 *   L_L_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_DL_DL_DL -> S_e_S_S
 */
transition_scores.transition (IL_DL_DL_DL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_DL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
 *   L_L_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_DL_DL_DL -> S_e_S_e
 */
transition_scores.transition (IL_DL_DL_DL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_DL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
 *   L_L_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_DL_DL_DL -> S_e_e_S
 */
transition_scores.transition (IL_DL_DL_DL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_DL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
 *   L_L_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_DL_DL_DL -> S_e_e_e
 */
transition_scores.transition (IL_DL_DL_DL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_DL -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
 *   IL_L_WL_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_DL_DL_DL -> e_Si_e_e
 */
transition_scores.transition (IL_DL_DL_DL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

/* 
 * IL_DL_DL_DL -> IL_DL_BiSiL_WL -> (IL_DL_L_WL, e_e_Si_e)
 *   IL_DL_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_DL_DL_DL -> e_e_Si_e
 */
transition_scores.transition (IL_DL_DL_DL, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, IL_DL_BiSiL_WL), transition_scores.end[IL_DL_L_WL]);

/* 
 * IL_DL_DL_DL -> IL_DL_DL_BiSiL -> (IL_DL_DL_L, e_e_e_Si)
 *   IL_DL_DL_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_DL_DL_DL -> e_e_e_Si
 */
transition_scores.transition (IL_DL_DL_DL, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_DL_DL_DL, IL_DL_DL_BiSiL), transition_scores.end[IL_DL_DL_L]);

/* 
 * IL_DL_DL_L -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
 *   L_L_L_L -> End
 *   S_S_S_S
 * giving an effective transition
 *   IL_DL_DL_L -> S_S_S_S
 */
transition_scores.transition (IL_DL_DL_L, S_S_S_S) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_L -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
 *   L_L_L_L -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_DL_DL_L -> S_S_S_e
 */
transition_scores.transition (IL_DL_DL_L, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_L -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
 *   L_L_L_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_DL_DL_L -> S_S_e_S
 */
transition_scores.transition (IL_DL_DL_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_L -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
 *   L_L_L_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_DL_DL_L -> S_S_e_e
 */
transition_scores.transition (IL_DL_DL_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_L -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
 *   L_L_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_DL_DL_L -> S_e_S_S
 */
transition_scores.transition (IL_DL_DL_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_L -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
 *   L_L_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_DL_DL_L -> S_e_S_e
 */
transition_scores.transition (IL_DL_DL_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_L -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
 *   L_L_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_DL_DL_L -> S_e_e_S
 */
transition_scores.transition (IL_DL_DL_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_L -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
 *   L_L_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_DL_DL_L -> S_e_e_e
 */
transition_scores.transition (IL_DL_DL_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_DL_L -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
 *   IL_L_WL_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_DL_DL_L -> e_Si_e_e
 */
transition_scores.transition (IL_DL_DL_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

/* 
 * IL_DL_DL_L -> IL_DL_BiSiL_WL -> (IL_DL_L_WL, e_e_Si_e)
 *   IL_DL_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_DL_DL_L -> e_e_Si_e
 */
transition_scores.transition (IL_DL_DL_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_DL_L, IL_DL_BiSiL_WL), transition_scores.end[IL_DL_L_WL]);

/* 
 * IL_DL_DL_L -> IL_DL_DL_BiSiL -> (IL_DL_DL_L, e_e_e_Si)
 *   IL_DL_DL_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_DL_DL_L -> e_e_e_Si
 */
transition_scores.transition (IL_DL_DL_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_DL_DL_L, IL_DL_DL_BiSiL), transition_scores.end[IL_DL_DL_L]);

/* 
 * IL_DL_DL_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
 *   L_L_L_e -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_DL_DL_e -> S_S_S_e
 */
transition_scores.transition (IL_DL_DL_e, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_DL_DL_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
 *   L_L_L_e -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_DL_DL_e -> S_S_e_e
 */
transition_scores.transition (IL_DL_DL_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_DL_DL_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
 *   L_L_L_e -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_DL_DL_e -> S_e_S_e
 */
transition_scores.transition (IL_DL_DL_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_DL_DL_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
 *   L_L_L_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_DL_DL_e -> S_e_e_e
 */
transition_scores.transition (IL_DL_DL_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_DL_DL_e -> IL_BiSiL_WL_e -> (IL_L_WL_e, e_Si_e_e)
 *   IL_L_WL_e -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_DL_DL_e -> e_Si_e_e
 */
transition_scores.transition (IL_DL_DL_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, IL_BiSiL_WL_e), transition_scores.end[IL_L_WL_e]);

/* 
 * IL_DL_DL_e -> IL_DL_BiSiL_e -> (IL_DL_L_e, e_e_Si_e)
 *   IL_DL_L_e -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_DL_DL_e -> e_e_Si_e
 */
transition_scores.transition (IL_DL_DL_e, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_DL_e, IL_DL_BiSiL_e), transition_scores.end[IL_DL_L_e]);

/* 
 * IL_DL_L_WL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
 *   L_L_L_L -> End
 *   S_S_S_S
 * giving an effective transition
 *   IL_DL_L_WL -> S_S_S_S
 */
transition_scores.transition (IL_DL_L_WL, S_S_S_S) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_L_WL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
 *   L_L_L_L -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_DL_L_WL -> S_S_S_e
 */
transition_scores.transition (IL_DL_L_WL, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_L_WL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
 *   L_L_L_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_DL_L_WL -> S_S_e_S
 */
transition_scores.transition (IL_DL_L_WL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_L_WL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
 *   L_L_L_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_DL_L_WL -> S_S_e_e
 */
transition_scores.transition (IL_DL_L_WL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_L_WL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
 *   L_L_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_DL_L_WL -> S_e_S_S
 */
transition_scores.transition (IL_DL_L_WL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_L_WL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
 *   L_L_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_DL_L_WL -> S_e_S_e
 */
transition_scores.transition (IL_DL_L_WL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_L_WL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
 *   L_L_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_DL_L_WL -> S_e_e_S
 */
transition_scores.transition (IL_DL_L_WL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_L_WL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
 *   L_L_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_DL_L_WL -> S_e_e_e
 */
transition_scores.transition (IL_DL_L_WL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_L_WL -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
 *   IL_L_WL_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_DL_L_WL -> e_Si_e_e
 */
transition_scores.transition (IL_DL_L_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

/* 
 * IL_DL_L_WL -> IL_DL_BiSiL_WL -> (IL_DL_L_WL, e_e_Si_e)
 *   IL_DL_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_DL_L_WL -> e_e_Si_e
 */
transition_scores.transition (IL_DL_L_WL, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_L_WL, IL_DL_BiSiL_WL), transition_scores.end[IL_DL_L_WL]);

/* 
 * IL_DL_L_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
 *   L_L_L_e -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_DL_L_e -> S_S_S_e
 */
transition_scores.transition (IL_DL_L_e, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_DL_L_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
 *   L_L_L_e -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_DL_L_e -> S_S_e_e
 */
transition_scores.transition (IL_DL_L_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_DL_L_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
 *   L_L_L_e -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_DL_L_e -> S_e_S_e
 */
transition_scores.transition (IL_DL_L_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_DL_L_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
 *   L_L_L_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_DL_L_e -> S_e_e_e
 */
transition_scores.transition (IL_DL_L_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_DL_L_e -> IL_BiSiL_WL_e -> (IL_L_WL_e, e_Si_e_e)
 *   IL_L_WL_e -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_DL_L_e -> e_Si_e_e
 */
transition_scores.transition (IL_DL_L_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, IL_BiSiL_WL_e), transition_scores.end[IL_L_WL_e]);

/* 
 * IL_DL_L_e -> IL_DL_BiSiL_e -> (IL_DL_L_e, e_e_Si_e)
 *   IL_DL_L_e -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_DL_L_e -> e_e_Si_e
 */
transition_scores.transition (IL_DL_L_e, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_L_e, IL_DL_BiSiL_e), transition_scores.end[IL_DL_L_e]);

/* 
 * IL_DL_ML_L -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
 *   L_L_L_L -> End
 *   S_S_S_S
 * giving an effective transition
 *   IL_DL_ML_L -> S_S_S_S
 */
transition_scores.transition (IL_DL_ML_L, S_S_S_S) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_ML_L -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
 *   L_L_L_L -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_DL_ML_L -> S_S_S_e
 */
transition_scores.transition (IL_DL_ML_L, S_S_S_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_ML_L -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
 *   L_L_L_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_DL_ML_L -> S_S_e_S
 */
transition_scores.transition (IL_DL_ML_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_ML_L -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
 *   L_L_L_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_DL_ML_L -> S_S_e_e
 */
transition_scores.transition (IL_DL_ML_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_ML_L -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
 *   L_L_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_DL_ML_L -> S_e_S_S
 */
transition_scores.transition (IL_DL_ML_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_ML_L -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
 *   L_L_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_DL_ML_L -> S_e_S_e
 */
transition_scores.transition (IL_DL_ML_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_ML_L -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
 *   L_L_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_DL_ML_L -> S_e_e_S
 */
transition_scores.transition (IL_DL_ML_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_ML_L -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
 *   L_L_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_DL_ML_L -> S_e_e_e
 */
transition_scores.transition (IL_DL_ML_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_DL_ML_L -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
 *   IL_L_WL_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_DL_ML_L -> e_Si_e_e
 */
transition_scores.transition (IL_DL_ML_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

/* 
 * IL_DL_ML_L -> IL_DL_BiSiL_WL -> (IL_DL_L_WL, e_e_Si_e)
 *   IL_DL_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_DL_ML_L -> e_e_Si_e
 */
transition_scores.transition (IL_DL_ML_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_DL_ML_L, IL_DL_BiSiL_WL), transition_scores.end[IL_DL_L_WL]);

/* 
 * IL_DL_ML_L -> IL_DL_ML_BiSiL -> (IL_DL_ML_L, e_e_e_Si)
 *   IL_DL_ML_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_DL_ML_L -> e_e_e_Si
 */
transition_scores.transition (IL_DL_ML_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_DL_ML_L, IL_DL_ML_BiSiL), transition_scores.end[IL_DL_ML_L]);

/* 
 * IL_DL_e_DL -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
 *   L_L_e_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_DL_e_DL -> S_S_e_S
 */
transition_scores.transition (IL_DL_e_DL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_e_DL, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * IL_DL_e_DL -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
 *   L_L_e_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_DL_e_DL -> S_S_e_e
 */
transition_scores.transition (IL_DL_e_DL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_DL, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * IL_DL_e_DL -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
 *   L_L_e_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_DL_e_DL -> S_e_e_S
 */
transition_scores.transition (IL_DL_e_DL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_e_DL, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * IL_DL_e_DL -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
 *   L_L_e_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_DL_e_DL -> S_e_e_e
 */
transition_scores.transition (IL_DL_e_DL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_DL, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * IL_DL_e_DL -> IL_BiSiL_e_WL -> (IL_L_e_WL, e_Si_e_e)
 *   IL_L_e_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_DL_e_DL -> e_Si_e_e
 */
transition_scores.transition (IL_DL_e_DL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_DL, IL_BiSiL_e_WL), transition_scores.end[IL_L_e_WL]);

/* 
 * IL_DL_e_DL -> IL_DL_e_BiSiL -> (IL_DL_e_L, e_e_e_Si)
 *   IL_DL_e_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_DL_e_DL -> e_e_e_Si
 */
transition_scores.transition (IL_DL_e_DL, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_DL_e_DL, IL_DL_e_BiSiL), transition_scores.end[IL_DL_e_L]);

/* 
 * IL_DL_e_L -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
 *   L_L_e_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_DL_e_L -> S_S_e_S
 */
transition_scores.transition (IL_DL_e_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_DL_e_L, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * IL_DL_e_L -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
 *   L_L_e_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_DL_e_L -> S_S_e_e
 */
transition_scores.transition (IL_DL_e_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_L, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * IL_DL_e_L -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
 *   L_L_e_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_DL_e_L -> S_e_e_S
 */
transition_scores.transition (IL_DL_e_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_DL_e_L, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * IL_DL_e_L -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
 *   L_L_e_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_DL_e_L -> S_e_e_e
 */
transition_scores.transition (IL_DL_e_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_L, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * IL_DL_e_L -> IL_BiSiL_e_WL -> (IL_L_e_WL, e_Si_e_e)
 *   IL_L_e_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_DL_e_L -> e_Si_e_e
 */
transition_scores.transition (IL_DL_e_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_L, IL_BiSiL_e_WL), transition_scores.end[IL_L_e_WL]);

/* 
 * IL_DL_e_L -> IL_DL_e_BiSiL -> (IL_DL_e_L, e_e_e_Si)
 *   IL_DL_e_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_DL_e_L -> e_e_e_Si
 */
transition_scores.transition (IL_DL_e_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_DL_e_L, IL_DL_e_BiSiL), transition_scores.end[IL_DL_e_L]);

/* 
 * IL_DL_e_e -> BiSL_BmSL_e_e -> (L_L_e_e, S_S_e_e)
 *   L_L_e_e -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_DL_e_e -> S_S_e_e
 */
transition_scores.transition (IL_DL_e_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_e, BiSL_BmSL_e_e), transition_scores.end[L_L_e_e]);

/* 
 * IL_DL_e_e -> BiSL_BpeL_e_e -> (L_L_e_e, S_e_e_e)
 *   L_L_e_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_DL_e_e -> S_e_e_e
 */
transition_scores.transition (IL_DL_e_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_e, BiSL_BpeL_e_e), transition_scores.end[L_L_e_e]);

/* 
 * IL_DL_e_e -> IL_BiSiL_e_e -> (IL_L_e_e, e_Si_e_e)
 *   IL_L_e_e -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_DL_e_e -> e_Si_e_e
 */
transition_scores.transition (IL_DL_e_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_DL_e_e, IL_BiSiL_e_e), transition_scores.end[IL_L_e_e]);

/* 
 * IL_L_WL_WL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
 *   L_L_L_L -> End
 *   S_S_S_S
 * giving an effective transition
 *   IL_L_WL_WL -> S_S_S_S
 */
transition_scores.transition (IL_L_WL_WL, S_S_S_S) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_L_WL_WL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
 *   L_L_L_L -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_L_WL_WL -> S_S_S_e
 */
transition_scores.transition (IL_L_WL_WL, S_S_S_e) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_L_WL_WL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
 *   L_L_L_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_L_WL_WL -> S_S_e_S
 */
transition_scores.transition (IL_L_WL_WL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_L_WL_WL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
 *   L_L_L_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_L_WL_WL -> S_S_e_e
 */
transition_scores.transition (IL_L_WL_WL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_L_WL_WL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
 *   L_L_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_L_WL_WL -> S_e_S_S
 */
transition_scores.transition (IL_L_WL_WL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_L_WL_WL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
 *   L_L_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_L_WL_WL -> S_e_S_e
 */
transition_scores.transition (IL_L_WL_WL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_L_WL_WL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
 *   L_L_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_L_WL_WL -> S_e_e_S
 */
transition_scores.transition (IL_L_WL_WL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_L_WL_WL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
 *   L_L_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_L_WL_WL -> S_e_e_e
 */
transition_scores.transition (IL_L_WL_WL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_WL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_L_WL_WL -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
 *   IL_L_WL_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_L_WL_WL -> e_Si_e_e
 */
transition_scores.transition (IL_L_WL_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_WL, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

/* 
 * IL_L_WL_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
 *   L_L_L_e -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_L_WL_e -> S_S_S_e
 */
transition_scores.transition (IL_L_WL_e, S_S_S_e) = ScorePMul (transition_scores.transition (IL_L_WL_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_L_WL_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
 *   L_L_L_e -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_L_WL_e -> S_S_e_e
 */
transition_scores.transition (IL_L_WL_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_L_WL_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
 *   L_L_L_e -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_L_WL_e -> S_e_S_e
 */
transition_scores.transition (IL_L_WL_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_L_WL_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_L_WL_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
 *   L_L_L_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_L_WL_e -> S_e_e_e
 */
transition_scores.transition (IL_L_WL_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_L_WL_e -> IL_BiSiL_WL_e -> (IL_L_WL_e, e_Si_e_e)
 *   IL_L_WL_e -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_L_WL_e -> e_Si_e_e
 */
transition_scores.transition (IL_L_WL_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_L_WL_e, IL_BiSiL_WL_e), transition_scores.end[IL_L_WL_e]);

/* 
 * IL_L_e_WL -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
 *   L_L_e_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_L_e_WL -> S_S_e_S
 */
transition_scores.transition (IL_L_e_WL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_L_e_WL, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * IL_L_e_WL -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
 *   L_L_e_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_L_e_WL -> S_S_e_e
 */
transition_scores.transition (IL_L_e_WL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_L_e_WL, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * IL_L_e_WL -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
 *   L_L_e_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_L_e_WL -> S_e_e_S
 */
transition_scores.transition (IL_L_e_WL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_L_e_WL, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * IL_L_e_WL -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
 *   L_L_e_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_L_e_WL -> S_e_e_e
 */
transition_scores.transition (IL_L_e_WL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_L_e_WL, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * IL_L_e_WL -> IL_BiSiL_e_WL -> (IL_L_e_WL, e_Si_e_e)
 *   IL_L_e_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_L_e_WL -> e_Si_e_e
 */
transition_scores.transition (IL_L_e_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_L_e_WL, IL_BiSiL_e_WL), transition_scores.end[IL_L_e_WL]);

/* 
 * IL_L_e_e -> BiSL_BmSL_e_e -> (L_L_e_e, S_S_e_e)
 *   L_L_e_e -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_L_e_e -> S_S_e_e
 */
transition_scores.transition (IL_L_e_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_L_e_e, BiSL_BmSL_e_e), transition_scores.end[L_L_e_e]);

/* 
 * IL_L_e_e -> BiSL_BpeL_e_e -> (L_L_e_e, S_e_e_e)
 *   L_L_e_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_L_e_e -> S_e_e_e
 */
transition_scores.transition (IL_L_e_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_L_e_e, BiSL_BpeL_e_e), transition_scores.end[L_L_e_e]);

/* 
 * IL_L_e_e -> IL_BiSiL_e_e -> (IL_L_e_e, e_Si_e_e)
 *   IL_L_e_e -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_L_e_e -> e_Si_e_e
 */
transition_scores.transition (IL_L_e_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_L_e_e, IL_BiSiL_e_e), transition_scores.end[IL_L_e_e]);

/* 
 * IL_ML_DL_L -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
 *   L_L_L_L -> End
 *   S_S_S_S
 * giving an effective transition
 *   IL_ML_DL_L -> S_S_S_S
 */
transition_scores.transition (IL_ML_DL_L, S_S_S_S) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_DL_L -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
 *   L_L_L_L -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_ML_DL_L -> S_S_S_e
 */
transition_scores.transition (IL_ML_DL_L, S_S_S_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_DL_L -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
 *   L_L_L_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_ML_DL_L -> S_S_e_S
 */
transition_scores.transition (IL_ML_DL_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_DL_L -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
 *   L_L_L_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_ML_DL_L -> S_S_e_e
 */
transition_scores.transition (IL_ML_DL_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_DL_L -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
 *   L_L_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_ML_DL_L -> S_e_S_S
 */
transition_scores.transition (IL_ML_DL_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_DL_L -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
 *   L_L_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_ML_DL_L -> S_e_S_e
 */
transition_scores.transition (IL_ML_DL_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_DL_L -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
 *   L_L_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_ML_DL_L -> S_e_e_S
 */
transition_scores.transition (IL_ML_DL_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_DL_L -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
 *   L_L_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_ML_DL_L -> S_e_e_e
 */
transition_scores.transition (IL_ML_DL_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_DL_L -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
 *   IL_L_WL_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_ML_DL_L -> e_Si_e_e
 */
transition_scores.transition (IL_ML_DL_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

/* 
 * IL_ML_DL_L -> IL_ML_BiSiL_WL -> (IL_ML_L_WL, e_e_Si_e)
 *   IL_ML_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_ML_DL_L -> e_e_Si_e
 */
transition_scores.transition (IL_ML_DL_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_ML_DL_L, IL_ML_BiSiL_WL), transition_scores.end[IL_ML_L_WL]);

/* 
 * IL_ML_DL_L -> IL_ML_DL_BiSiL -> (IL_ML_DL_L, e_e_e_Si)
 *   IL_ML_DL_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_ML_DL_L -> e_e_e_Si
 */
transition_scores.transition (IL_ML_DL_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_ML_DL_L, IL_ML_DL_BiSiL), transition_scores.end[IL_ML_DL_L]);

/* 
 * IL_ML_L_WL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
 *   L_L_L_L -> End
 *   S_S_S_S
 * giving an effective transition
 *   IL_ML_L_WL -> S_S_S_S
 */
transition_scores.transition (IL_ML_L_WL, S_S_S_S) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_L_WL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
 *   L_L_L_L -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_ML_L_WL -> S_S_S_e
 */
transition_scores.transition (IL_ML_L_WL, S_S_S_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_L_WL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
 *   L_L_L_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_ML_L_WL -> S_S_e_S
 */
transition_scores.transition (IL_ML_L_WL, S_S_e_S) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_L_WL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
 *   L_L_L_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_ML_L_WL -> S_S_e_e
 */
transition_scores.transition (IL_ML_L_WL, S_S_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_L_WL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
 *   L_L_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_ML_L_WL -> S_e_S_S
 */
transition_scores.transition (IL_ML_L_WL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_L_WL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
 *   L_L_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_ML_L_WL -> S_e_S_e
 */
transition_scores.transition (IL_ML_L_WL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_L_WL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
 *   L_L_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_ML_L_WL -> S_e_e_S
 */
transition_scores.transition (IL_ML_L_WL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_L_WL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
 *   L_L_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_ML_L_WL -> S_e_e_e
 */
transition_scores.transition (IL_ML_L_WL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_L_WL -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
 *   IL_L_WL_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_ML_L_WL -> e_Si_e_e
 */
transition_scores.transition (IL_ML_L_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

/* 
 * IL_ML_L_WL -> IL_ML_BiSiL_WL -> (IL_ML_L_WL, e_e_Si_e)
 *   IL_ML_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_ML_L_WL -> e_e_Si_e
 */
transition_scores.transition (IL_ML_L_WL, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_ML_L_WL, IL_ML_BiSiL_WL), transition_scores.end[IL_ML_L_WL]);

/* 
 * IL_ML_L_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
 *   L_L_L_e -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_ML_L_e -> S_S_S_e
 */
transition_scores.transition (IL_ML_L_e, S_S_S_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_ML_L_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
 *   L_L_L_e -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_ML_L_e -> S_S_e_e
 */
transition_scores.transition (IL_ML_L_e, S_S_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_ML_L_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
 *   L_L_L_e -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_ML_L_e -> S_e_S_e
 */
transition_scores.transition (IL_ML_L_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_ML_L_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
 *   L_L_L_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_ML_L_e -> S_e_e_e
 */
transition_scores.transition (IL_ML_L_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * IL_ML_L_e -> IL_BiSiL_WL_e -> (IL_L_WL_e, e_Si_e_e)
 *   IL_L_WL_e -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_ML_L_e -> e_Si_e_e
 */
transition_scores.transition (IL_ML_L_e, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, IL_BiSiL_WL_e), transition_scores.end[IL_L_WL_e]);

/* 
 * IL_ML_L_e -> IL_ML_BiSiL_e -> (IL_ML_L_e, e_e_Si_e)
 *   IL_ML_L_e -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_ML_L_e -> e_e_Si_e
 */
transition_scores.transition (IL_ML_L_e, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_ML_L_e, IL_ML_BiSiL_e), transition_scores.end[IL_ML_L_e]);

/* 
 * IL_ML_ML_L -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
 *   L_L_L_L -> End
 *   S_S_S_S
 * giving an effective transition
 *   IL_ML_ML_L -> S_S_S_S
 */
transition_scores.transition (IL_ML_ML_L, S_S_S_S) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_ML_L -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
 *   L_L_L_L -> End
 *   S_S_S_e
 * giving an effective transition
 *   IL_ML_ML_L -> S_S_S_e
 */
transition_scores.transition (IL_ML_ML_L, S_S_S_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_ML_L -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
 *   L_L_L_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_ML_ML_L -> S_S_e_S
 */
transition_scores.transition (IL_ML_ML_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_ML_L -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
 *   L_L_L_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_ML_ML_L -> S_S_e_e
 */
transition_scores.transition (IL_ML_ML_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_ML_L -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
 *   L_L_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_ML_ML_L -> S_e_S_S
 */
transition_scores.transition (IL_ML_ML_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_ML_L -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
 *   L_L_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_ML_ML_L -> S_e_S_e
 */
transition_scores.transition (IL_ML_ML_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_ML_L -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
 *   L_L_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_ML_ML_L -> S_e_e_S
 */
transition_scores.transition (IL_ML_ML_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_ML_L -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
 *   L_L_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_ML_ML_L -> S_e_e_e
 */
transition_scores.transition (IL_ML_ML_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * IL_ML_ML_L -> IL_BiSiL_WL_WL -> (IL_L_WL_WL, e_Si_e_e)
 *   IL_L_WL_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_ML_ML_L -> e_Si_e_e
 */
transition_scores.transition (IL_ML_ML_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, IL_BiSiL_WL_WL), transition_scores.end[IL_L_WL_WL]);

/* 
 * IL_ML_ML_L -> IL_ML_BiSiL_WL -> (IL_ML_L_WL, e_e_Si_e)
 *   IL_ML_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_ML_ML_L -> e_e_Si_e
 */
transition_scores.transition (IL_ML_ML_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_ML_ML_L, IL_ML_BiSiL_WL), transition_scores.end[IL_ML_L_WL]);

/* 
 * IL_ML_ML_L -> IL_ML_ML_BiSiL -> (IL_ML_ML_L, e_e_e_Si)
 *   IL_ML_ML_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_ML_ML_L -> e_e_e_Si
 */
transition_scores.transition (IL_ML_ML_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_ML_ML_L, IL_ML_ML_BiSiL), transition_scores.end[IL_ML_ML_L]);

/* 
 * IL_ML_e_L -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
 *   L_L_e_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   IL_ML_e_L -> S_S_e_S
 */
transition_scores.transition (IL_ML_e_L, S_S_e_S) = ScorePMul (transition_scores.transition (IL_ML_e_L, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * IL_ML_e_L -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
 *   L_L_e_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   IL_ML_e_L -> S_S_e_e
 */
transition_scores.transition (IL_ML_e_L, S_S_e_e) = ScorePMul (transition_scores.transition (IL_ML_e_L, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * IL_ML_e_L -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
 *   L_L_e_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_ML_e_L -> S_e_e_S
 */
transition_scores.transition (IL_ML_e_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_ML_e_L, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * IL_ML_e_L -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
 *   L_L_e_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_ML_e_L -> S_e_e_e
 */
transition_scores.transition (IL_ML_e_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_ML_e_L, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * IL_ML_e_L -> IL_BiSiL_e_WL -> (IL_L_e_WL, e_Si_e_e)
 *   IL_L_e_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   IL_ML_e_L -> e_Si_e_e
 */
transition_scores.transition (IL_ML_e_L, e_Si_e_e) = ScorePMul (transition_scores.transition (IL_ML_e_L, IL_BiSiL_e_WL), transition_scores.end[IL_L_e_WL]);

/* 
 * IL_ML_e_L -> IL_ML_e_BiSiL -> (IL_ML_e_L, e_e_e_Si)
 *   IL_ML_e_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_ML_e_L -> e_e_e_Si
 */
transition_scores.transition (IL_ML_e_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_ML_e_L, IL_ML_e_BiSiL), transition_scores.end[IL_ML_e_L]);

/* 
 * IL_e_DL_DL -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
 *   L_e_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_e_DL_DL -> S_e_S_S
 */
transition_scores.transition (IL_e_DL_DL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_e_DL_DL, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_DL_DL -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
 *   L_e_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_e_DL_DL -> S_e_S_e
 */
transition_scores.transition (IL_e_DL_DL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_DL_DL, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_DL_DL -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
 *   L_e_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_e_DL_DL -> S_e_e_S
 */
transition_scores.transition (IL_e_DL_DL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_DL_DL, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_DL_DL -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
 *   L_e_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_e_DL_DL -> S_e_e_e
 */
transition_scores.transition (IL_e_DL_DL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_DL_DL, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_DL_DL -> IL_e_BiSiL_WL -> (IL_e_L_WL, e_e_Si_e)
 *   IL_e_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_e_DL_DL -> e_e_Si_e
 */
transition_scores.transition (IL_e_DL_DL, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_DL_DL, IL_e_BiSiL_WL), transition_scores.end[IL_e_L_WL]);

/* 
 * IL_e_DL_DL -> IL_e_DL_BiSiL -> (IL_e_DL_L, e_e_e_Si)
 *   IL_e_DL_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_e_DL_DL -> e_e_e_Si
 */
transition_scores.transition (IL_e_DL_DL, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_e_DL_DL, IL_e_DL_BiSiL), transition_scores.end[IL_e_DL_L]);

/* 
 * IL_e_DL_L -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
 *   L_e_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_e_DL_L -> S_e_S_S
 */
transition_scores.transition (IL_e_DL_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_e_DL_L, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_DL_L -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
 *   L_e_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_e_DL_L -> S_e_S_e
 */
transition_scores.transition (IL_e_DL_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_DL_L, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_DL_L -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
 *   L_e_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_e_DL_L -> S_e_e_S
 */
transition_scores.transition (IL_e_DL_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_DL_L, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_DL_L -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
 *   L_e_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_e_DL_L -> S_e_e_e
 */
transition_scores.transition (IL_e_DL_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_DL_L, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_DL_L -> IL_e_BiSiL_WL -> (IL_e_L_WL, e_e_Si_e)
 *   IL_e_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_e_DL_L -> e_e_Si_e
 */
transition_scores.transition (IL_e_DL_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_DL_L, IL_e_BiSiL_WL), transition_scores.end[IL_e_L_WL]);

/* 
 * IL_e_DL_L -> IL_e_DL_BiSiL -> (IL_e_DL_L, e_e_e_Si)
 *   IL_e_DL_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_e_DL_L -> e_e_e_Si
 */
transition_scores.transition (IL_e_DL_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_e_DL_L, IL_e_DL_BiSiL), transition_scores.end[IL_e_DL_L]);

/* 
 * IL_e_DL_e -> BiSL_e_BmSL_e -> (L_e_L_e, S_e_S_e)
 *   L_e_L_e -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_e_DL_e -> S_e_S_e
 */
transition_scores.transition (IL_e_DL_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_DL_e, BiSL_e_BmSL_e), transition_scores.end[L_e_L_e]);

/* 
 * IL_e_DL_e -> BiSL_e_BpeL_e -> (L_e_L_e, S_e_e_e)
 *   L_e_L_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_e_DL_e -> S_e_e_e
 */
transition_scores.transition (IL_e_DL_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_DL_e, BiSL_e_BpeL_e), transition_scores.end[L_e_L_e]);

/* 
 * IL_e_DL_e -> IL_e_BiSiL_e -> (IL_e_L_e, e_e_Si_e)
 *   IL_e_L_e -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_e_DL_e -> e_e_Si_e
 */
transition_scores.transition (IL_e_DL_e, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_DL_e, IL_e_BiSiL_e), transition_scores.end[IL_e_L_e]);

/* 
 * IL_e_L_WL -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
 *   L_e_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_e_L_WL -> S_e_S_S
 */
transition_scores.transition (IL_e_L_WL, S_e_S_S) = ScorePMul (transition_scores.transition (IL_e_L_WL, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_L_WL -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
 *   L_e_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_e_L_WL -> S_e_S_e
 */
transition_scores.transition (IL_e_L_WL, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_L_WL, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_L_WL -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
 *   L_e_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_e_L_WL -> S_e_e_S
 */
transition_scores.transition (IL_e_L_WL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_L_WL, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_L_WL -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
 *   L_e_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_e_L_WL -> S_e_e_e
 */
transition_scores.transition (IL_e_L_WL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_L_WL, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_L_WL -> IL_e_BiSiL_WL -> (IL_e_L_WL, e_e_Si_e)
 *   IL_e_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_e_L_WL -> e_e_Si_e
 */
transition_scores.transition (IL_e_L_WL, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_L_WL, IL_e_BiSiL_WL), transition_scores.end[IL_e_L_WL]);

/* 
 * IL_e_L_e -> BiSL_e_BmSL_e -> (L_e_L_e, S_e_S_e)
 *   L_e_L_e -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_e_L_e -> S_e_S_e
 */
transition_scores.transition (IL_e_L_e, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_L_e, BiSL_e_BmSL_e), transition_scores.end[L_e_L_e]);

/* 
 * IL_e_L_e -> BiSL_e_BpeL_e -> (L_e_L_e, S_e_e_e)
 *   L_e_L_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_e_L_e -> S_e_e_e
 */
transition_scores.transition (IL_e_L_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_L_e, BiSL_e_BpeL_e), transition_scores.end[L_e_L_e]);

/* 
 * IL_e_L_e -> IL_e_BiSiL_e -> (IL_e_L_e, e_e_Si_e)
 *   IL_e_L_e -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_e_L_e -> e_e_Si_e
 */
transition_scores.transition (IL_e_L_e, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_L_e, IL_e_BiSiL_e), transition_scores.end[IL_e_L_e]);

/* 
 * IL_e_ML_L -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
 *   L_e_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   IL_e_ML_L -> S_e_S_S
 */
transition_scores.transition (IL_e_ML_L, S_e_S_S) = ScorePMul (transition_scores.transition (IL_e_ML_L, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_ML_L -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
 *   L_e_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   IL_e_ML_L -> S_e_S_e
 */
transition_scores.transition (IL_e_ML_L, S_e_S_e) = ScorePMul (transition_scores.transition (IL_e_ML_L, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_ML_L -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
 *   L_e_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_e_ML_L -> S_e_e_S
 */
transition_scores.transition (IL_e_ML_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_ML_L, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_ML_L -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
 *   L_e_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_e_ML_L -> S_e_e_e
 */
transition_scores.transition (IL_e_ML_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_ML_L, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * IL_e_ML_L -> IL_e_BiSiL_WL -> (IL_e_L_WL, e_e_Si_e)
 *   IL_e_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   IL_e_ML_L -> e_e_Si_e
 */
transition_scores.transition (IL_e_ML_L, e_e_Si_e) = ScorePMul (transition_scores.transition (IL_e_ML_L, IL_e_BiSiL_WL), transition_scores.end[IL_e_L_WL]);

/* 
 * IL_e_ML_L -> IL_e_ML_BiSiL -> (IL_e_ML_L, e_e_e_Si)
 *   IL_e_ML_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_e_ML_L -> e_e_e_Si
 */
transition_scores.transition (IL_e_ML_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_e_ML_L, IL_e_ML_BiSiL), transition_scores.end[IL_e_ML_L]);

/* 
 * IL_e_e_DL -> BiSL_e_e_BmSL -> (L_e_e_L, S_e_e_S)
 *   L_e_e_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_e_e_DL -> S_e_e_S
 */
transition_scores.transition (IL_e_e_DL, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_e_DL, BiSL_e_e_BmSL), transition_scores.end[L_e_e_L]);

/* 
 * IL_e_e_DL -> BiSL_e_e_BpeL -> (L_e_e_L, S_e_e_e)
 *   L_e_e_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_e_e_DL -> S_e_e_e
 */
transition_scores.transition (IL_e_e_DL, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_e_DL, BiSL_e_e_BpeL), transition_scores.end[L_e_e_L]);

/* 
 * IL_e_e_DL -> IL_e_e_BiSiL -> (IL_e_e_L, e_e_e_Si)
 *   IL_e_e_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_e_e_DL -> e_e_e_Si
 */
transition_scores.transition (IL_e_e_DL, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_e_e_DL, IL_e_e_BiSiL), transition_scores.end[IL_e_e_L]);

/* 
 * IL_e_e_L -> BiSL_e_e_BmSL -> (L_e_e_L, S_e_e_S)
 *   L_e_e_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   IL_e_e_L -> S_e_e_S
 */
transition_scores.transition (IL_e_e_L, S_e_e_S) = ScorePMul (transition_scores.transition (IL_e_e_L, BiSL_e_e_BmSL), transition_scores.end[L_e_e_L]);

/* 
 * IL_e_e_L -> BiSL_e_e_BpeL -> (L_e_e_L, S_e_e_e)
 *   L_e_e_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_e_e_L -> S_e_e_e
 */
transition_scores.transition (IL_e_e_L, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_e_L, BiSL_e_e_BpeL), transition_scores.end[L_e_e_L]);

/* 
 * IL_e_e_L -> IL_e_e_BiSiL -> (IL_e_e_L, e_e_e_Si)
 *   IL_e_e_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   IL_e_e_L -> e_e_e_Si
 */
transition_scores.transition (IL_e_e_L, e_e_e_Si) = ScorePMul (transition_scores.transition (IL_e_e_L, IL_e_e_BiSiL), transition_scores.end[IL_e_e_L]);

/* 
 * IL_e_e_e -> BiSL_e_e_e -> (L_e_e_e, S_e_e_e)
 *   L_e_e_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   IL_e_e_e -> S_e_e_e
 */
transition_scores.transition (IL_e_e_e, S_e_e_e) = ScorePMul (transition_scores.transition (IL_e_e_e, BiSL_e_e_e), transition_scores.end[L_e_e_e]);

/* 
 * L_L_L_L -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
 *   L_L_L_L -> End
 *   S_S_S_S
 * giving an effective transition
 *   L_L_L_L -> S_S_S_S
 */
transition_scores.transition (L_L_L_L, S_S_S_S) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_L -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
 *   L_L_L_L -> End
 *   S_S_S_e
 * giving an effective transition
 *   L_L_L_L -> S_S_S_e
 */
transition_scores.transition (L_L_L_L, S_S_S_e) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_L -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
 *   L_L_L_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   L_L_L_L -> S_S_e_S
 */
transition_scores.transition (L_L_L_L, S_S_e_S) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_L -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
 *   L_L_L_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   L_L_L_L -> S_S_e_e
 */
transition_scores.transition (L_L_L_L, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_L -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
 *   L_L_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   L_L_L_L -> S_e_S_S
 */
transition_scores.transition (L_L_L_L, S_e_S_S) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_L -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
 *   L_L_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   L_L_L_L -> S_e_S_e
 */
transition_scores.transition (L_L_L_L, S_e_S_e) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_L -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
 *   L_L_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   L_L_L_L -> S_e_e_S
 */
transition_scores.transition (L_L_L_L, S_e_e_S) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_L -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
 *   L_L_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_L_L_L -> S_e_e_e
 */
transition_scores.transition (L_L_L_L, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_L_L, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_L -> L_BiSiL_WL_WL -> (L_L_WL_WL, e_Si_e_e)
 *   L_L_WL_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   L_L_L_L -> e_Si_e_e
 */
transition_scores.transition (L_L_L_L, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_L_L, L_BiSiL_WL_WL), transition_scores.end[L_L_WL_WL]);

/* 
 * L_L_L_L -> L_L_BiSiL_WL -> (L_L_L_WL, e_e_Si_e)
 *   L_L_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   L_L_L_L -> e_e_Si_e
 */
transition_scores.transition (L_L_L_L, e_e_Si_e) = ScorePMul (transition_scores.transition (L_L_L_L, L_L_BiSiL_WL), transition_scores.end[L_L_L_WL]);

/* 
 * L_L_L_L -> L_L_L_BiSiL -> (L_L_L_L, e_e_e_Si)
 *   L_L_L_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   L_L_L_L -> e_e_e_Si
 */
transition_scores.transition (L_L_L_L, e_e_e_Si) = ScorePMul (transition_scores.transition (L_L_L_L, L_L_L_BiSiL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_WL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
 *   L_L_L_L -> End
 *   S_S_S_S
 * giving an effective transition
 *   L_L_L_WL -> S_S_S_S
 */
transition_scores.transition (L_L_L_WL, S_S_S_S) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_WL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
 *   L_L_L_L -> End
 *   S_S_S_e
 * giving an effective transition
 *   L_L_L_WL -> S_S_S_e
 */
transition_scores.transition (L_L_L_WL, S_S_S_e) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_WL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
 *   L_L_L_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   L_L_L_WL -> S_S_e_S
 */
transition_scores.transition (L_L_L_WL, S_S_e_S) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_WL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
 *   L_L_L_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   L_L_L_WL -> S_S_e_e
 */
transition_scores.transition (L_L_L_WL, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_WL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
 *   L_L_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   L_L_L_WL -> S_e_S_S
 */
transition_scores.transition (L_L_L_WL, S_e_S_S) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_WL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
 *   L_L_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   L_L_L_WL -> S_e_S_e
 */
transition_scores.transition (L_L_L_WL, S_e_S_e) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_WL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
 *   L_L_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   L_L_L_WL -> S_e_e_S
 */
transition_scores.transition (L_L_L_WL, S_e_e_S) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_WL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
 *   L_L_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_L_L_WL -> S_e_e_e
 */
transition_scores.transition (L_L_L_WL, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_L_WL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_L_WL -> L_BiSiL_WL_WL -> (L_L_WL_WL, e_Si_e_e)
 *   L_L_WL_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   L_L_L_WL -> e_Si_e_e
 */
transition_scores.transition (L_L_L_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_L_WL, L_BiSiL_WL_WL), transition_scores.end[L_L_WL_WL]);

/* 
 * L_L_L_WL -> L_L_BiSiL_WL -> (L_L_L_WL, e_e_Si_e)
 *   L_L_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   L_L_L_WL -> e_e_Si_e
 */
transition_scores.transition (L_L_L_WL, e_e_Si_e) = ScorePMul (transition_scores.transition (L_L_L_WL, L_L_BiSiL_WL), transition_scores.end[L_L_L_WL]);

/* 
 * L_L_L_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
 *   L_L_L_e -> End
 *   S_S_S_e
 * giving an effective transition
 *   L_L_L_e -> S_S_S_e
 */
transition_scores.transition (L_L_L_e, S_S_S_e) = ScorePMul (transition_scores.transition (L_L_L_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * L_L_L_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
 *   L_L_L_e -> End
 *   S_S_e_e
 * giving an effective transition
 *   L_L_L_e -> S_S_e_e
 */
transition_scores.transition (L_L_L_e, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_L_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * L_L_L_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
 *   L_L_L_e -> End
 *   S_e_S_e
 * giving an effective transition
 *   L_L_L_e -> S_e_S_e
 */
transition_scores.transition (L_L_L_e, S_e_S_e) = ScorePMul (transition_scores.transition (L_L_L_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * L_L_L_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
 *   L_L_L_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_L_L_e -> S_e_e_e
 */
transition_scores.transition (L_L_L_e, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_L_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * L_L_L_e -> L_BiSiL_WL_e -> (L_L_WL_e, e_Si_e_e)
 *   L_L_WL_e -> End
 *   e_Si_e_e
 * giving an effective transition
 *   L_L_L_e -> e_Si_e_e
 */
transition_scores.transition (L_L_L_e, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_L_e, L_BiSiL_WL_e), transition_scores.end[L_L_WL_e]);

/* 
 * L_L_L_e -> L_L_BiSiL_e -> (L_L_L_e, e_e_Si_e)
 *   L_L_L_e -> End
 *   e_e_Si_e
 * giving an effective transition
 *   L_L_L_e -> e_e_Si_e
 */
transition_scores.transition (L_L_L_e, e_e_Si_e) = ScorePMul (transition_scores.transition (L_L_L_e, L_L_BiSiL_e), transition_scores.end[L_L_L_e]);

/* 
 * L_L_WL_WL -> BiSL_BmSL_BmSL_BmSL -> (L_L_L_L, S_S_S_S)
 *   L_L_L_L -> End
 *   S_S_S_S
 * giving an effective transition
 *   L_L_WL_WL -> S_S_S_S
 */
transition_scores.transition (L_L_WL_WL, S_S_S_S) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_WL_WL -> BiSL_BmSL_BmSL_BpeL -> (L_L_L_L, S_S_S_e)
 *   L_L_L_L -> End
 *   S_S_S_e
 * giving an effective transition
 *   L_L_WL_WL -> S_S_S_e
 */
transition_scores.transition (L_L_WL_WL, S_S_S_e) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_WL_WL -> BiSL_BmSL_BpeL_BmSL -> (L_L_L_L, S_S_e_S)
 *   L_L_L_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   L_L_WL_WL -> S_S_e_S
 */
transition_scores.transition (L_L_WL_WL, S_S_e_S) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_WL_WL -> BiSL_BmSL_BpeL_BpeL -> (L_L_L_L, S_S_e_e)
 *   L_L_L_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   L_L_WL_WL -> S_S_e_e
 */
transition_scores.transition (L_L_WL_WL, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BmSL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_WL_WL -> BiSL_BpeL_BmSL_BmSL -> (L_L_L_L, S_e_S_S)
 *   L_L_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   L_L_WL_WL -> S_e_S_S
 */
transition_scores.transition (L_L_WL_WL, S_e_S_S) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BmSL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_WL_WL -> BiSL_BpeL_BmSL_BpeL -> (L_L_L_L, S_e_S_e)
 *   L_L_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   L_L_WL_WL -> S_e_S_e
 */
transition_scores.transition (L_L_WL_WL, S_e_S_e) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BmSL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_WL_WL -> BiSL_BpeL_BpeL_BmSL -> (L_L_L_L, S_e_e_S)
 *   L_L_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   L_L_WL_WL -> S_e_e_S
 */
transition_scores.transition (L_L_WL_WL, S_e_e_S) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BpeL_BmSL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_WL_WL -> BiSL_BpeL_BpeL_BpeL -> (L_L_L_L, S_e_e_e)
 *   L_L_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_L_WL_WL -> S_e_e_e
 */
transition_scores.transition (L_L_WL_WL, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_WL_WL, BiSL_BpeL_BpeL_BpeL), transition_scores.end[L_L_L_L]);

/* 
 * L_L_WL_WL -> L_BiSiL_WL_WL -> (L_L_WL_WL, e_Si_e_e)
 *   L_L_WL_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   L_L_WL_WL -> e_Si_e_e
 */
transition_scores.transition (L_L_WL_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_WL_WL, L_BiSiL_WL_WL), transition_scores.end[L_L_WL_WL]);

/* 
 * L_L_WL_e -> BiSL_BmSL_BmSL_e -> (L_L_L_e, S_S_S_e)
 *   L_L_L_e -> End
 *   S_S_S_e
 * giving an effective transition
 *   L_L_WL_e -> S_S_S_e
 */
transition_scores.transition (L_L_WL_e, S_S_S_e) = ScorePMul (transition_scores.transition (L_L_WL_e, BiSL_BmSL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * L_L_WL_e -> BiSL_BmSL_BpeL_e -> (L_L_L_e, S_S_e_e)
 *   L_L_L_e -> End
 *   S_S_e_e
 * giving an effective transition
 *   L_L_WL_e -> S_S_e_e
 */
transition_scores.transition (L_L_WL_e, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_WL_e, BiSL_BmSL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * L_L_WL_e -> BiSL_BpeL_BmSL_e -> (L_L_L_e, S_e_S_e)
 *   L_L_L_e -> End
 *   S_e_S_e
 * giving an effective transition
 *   L_L_WL_e -> S_e_S_e
 */
transition_scores.transition (L_L_WL_e, S_e_S_e) = ScorePMul (transition_scores.transition (L_L_WL_e, BiSL_BpeL_BmSL_e), transition_scores.end[L_L_L_e]);

/* 
 * L_L_WL_e -> BiSL_BpeL_BpeL_e -> (L_L_L_e, S_e_e_e)
 *   L_L_L_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_L_WL_e -> S_e_e_e
 */
transition_scores.transition (L_L_WL_e, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_WL_e, BiSL_BpeL_BpeL_e), transition_scores.end[L_L_L_e]);

/* 
 * L_L_WL_e -> L_BiSiL_WL_e -> (L_L_WL_e, e_Si_e_e)
 *   L_L_WL_e -> End
 *   e_Si_e_e
 * giving an effective transition
 *   L_L_WL_e -> e_Si_e_e
 */
transition_scores.transition (L_L_WL_e, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_WL_e, L_BiSiL_WL_e), transition_scores.end[L_L_WL_e]);

/* 
 * L_L_e_L -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
 *   L_L_e_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   L_L_e_L -> S_S_e_S
 */
transition_scores.transition (L_L_e_L, S_S_e_S) = ScorePMul (transition_scores.transition (L_L_e_L, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * L_L_e_L -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
 *   L_L_e_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   L_L_e_L -> S_S_e_e
 */
transition_scores.transition (L_L_e_L, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_e_L, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * L_L_e_L -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
 *   L_L_e_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   L_L_e_L -> S_e_e_S
 */
transition_scores.transition (L_L_e_L, S_e_e_S) = ScorePMul (transition_scores.transition (L_L_e_L, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * L_L_e_L -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
 *   L_L_e_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_L_e_L -> S_e_e_e
 */
transition_scores.transition (L_L_e_L, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_e_L, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * L_L_e_L -> L_BiSiL_e_WL -> (L_L_e_WL, e_Si_e_e)
 *   L_L_e_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   L_L_e_L -> e_Si_e_e
 */
transition_scores.transition (L_L_e_L, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_e_L, L_BiSiL_e_WL), transition_scores.end[L_L_e_WL]);

/* 
 * L_L_e_L -> L_L_e_BiSiL -> (L_L_e_L, e_e_e_Si)
 *   L_L_e_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   L_L_e_L -> e_e_e_Si
 */
transition_scores.transition (L_L_e_L, e_e_e_Si) = ScorePMul (transition_scores.transition (L_L_e_L, L_L_e_BiSiL), transition_scores.end[L_L_e_L]);

/* 
 * L_L_e_WL -> BiSL_BmSL_e_BmSL -> (L_L_e_L, S_S_e_S)
 *   L_L_e_L -> End
 *   S_S_e_S
 * giving an effective transition
 *   L_L_e_WL -> S_S_e_S
 */
transition_scores.transition (L_L_e_WL, S_S_e_S) = ScorePMul (transition_scores.transition (L_L_e_WL, BiSL_BmSL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * L_L_e_WL -> BiSL_BmSL_e_BpeL -> (L_L_e_L, S_S_e_e)
 *   L_L_e_L -> End
 *   S_S_e_e
 * giving an effective transition
 *   L_L_e_WL -> S_S_e_e
 */
transition_scores.transition (L_L_e_WL, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_e_WL, BiSL_BmSL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * L_L_e_WL -> BiSL_BpeL_e_BmSL -> (L_L_e_L, S_e_e_S)
 *   L_L_e_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   L_L_e_WL -> S_e_e_S
 */
transition_scores.transition (L_L_e_WL, S_e_e_S) = ScorePMul (transition_scores.transition (L_L_e_WL, BiSL_BpeL_e_BmSL), transition_scores.end[L_L_e_L]);

/* 
 * L_L_e_WL -> BiSL_BpeL_e_BpeL -> (L_L_e_L, S_e_e_e)
 *   L_L_e_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_L_e_WL -> S_e_e_e
 */
transition_scores.transition (L_L_e_WL, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_e_WL, BiSL_BpeL_e_BpeL), transition_scores.end[L_L_e_L]);

/* 
 * L_L_e_WL -> L_BiSiL_e_WL -> (L_L_e_WL, e_Si_e_e)
 *   L_L_e_WL -> End
 *   e_Si_e_e
 * giving an effective transition
 *   L_L_e_WL -> e_Si_e_e
 */
transition_scores.transition (L_L_e_WL, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_e_WL, L_BiSiL_e_WL), transition_scores.end[L_L_e_WL]);

/* 
 * L_L_e_e -> BiSL_BmSL_e_e -> (L_L_e_e, S_S_e_e)
 *   L_L_e_e -> End
 *   S_S_e_e
 * giving an effective transition
 *   L_L_e_e -> S_S_e_e
 */
transition_scores.transition (L_L_e_e, S_S_e_e) = ScorePMul (transition_scores.transition (L_L_e_e, BiSL_BmSL_e_e), transition_scores.end[L_L_e_e]);

/* 
 * L_L_e_e -> BiSL_BpeL_e_e -> (L_L_e_e, S_e_e_e)
 *   L_L_e_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_L_e_e -> S_e_e_e
 */
transition_scores.transition (L_L_e_e, S_e_e_e) = ScorePMul (transition_scores.transition (L_L_e_e, BiSL_BpeL_e_e), transition_scores.end[L_L_e_e]);

/* 
 * L_L_e_e -> L_BiSiL_e_e -> (L_L_e_e, e_Si_e_e)
 *   L_L_e_e -> End
 *   e_Si_e_e
 * giving an effective transition
 *   L_L_e_e -> e_Si_e_e
 */
transition_scores.transition (L_L_e_e, e_Si_e_e) = ScorePMul (transition_scores.transition (L_L_e_e, L_BiSiL_e_e), transition_scores.end[L_L_e_e]);

/* 
 * L_e_L_L -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
 *   L_e_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   L_e_L_L -> S_e_S_S
 */
transition_scores.transition (L_e_L_L, S_e_S_S) = ScorePMul (transition_scores.transition (L_e_L_L, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * L_e_L_L -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
 *   L_e_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   L_e_L_L -> S_e_S_e
 */
transition_scores.transition (L_e_L_L, S_e_S_e) = ScorePMul (transition_scores.transition (L_e_L_L, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * L_e_L_L -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
 *   L_e_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   L_e_L_L -> S_e_e_S
 */
transition_scores.transition (L_e_L_L, S_e_e_S) = ScorePMul (transition_scores.transition (L_e_L_L, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * L_e_L_L -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
 *   L_e_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_e_L_L -> S_e_e_e
 */
transition_scores.transition (L_e_L_L, S_e_e_e) = ScorePMul (transition_scores.transition (L_e_L_L, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * L_e_L_L -> L_e_BiSiL_WL -> (L_e_L_WL, e_e_Si_e)
 *   L_e_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   L_e_L_L -> e_e_Si_e
 */
transition_scores.transition (L_e_L_L, e_e_Si_e) = ScorePMul (transition_scores.transition (L_e_L_L, L_e_BiSiL_WL), transition_scores.end[L_e_L_WL]);

/* 
 * L_e_L_L -> L_e_L_BiSiL -> (L_e_L_L, e_e_e_Si)
 *   L_e_L_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   L_e_L_L -> e_e_e_Si
 */
transition_scores.transition (L_e_L_L, e_e_e_Si) = ScorePMul (transition_scores.transition (L_e_L_L, L_e_L_BiSiL), transition_scores.end[L_e_L_L]);

/* 
 * L_e_L_WL -> BiSL_e_BmSL_BmSL -> (L_e_L_L, S_e_S_S)
 *   L_e_L_L -> End
 *   S_e_S_S
 * giving an effective transition
 *   L_e_L_WL -> S_e_S_S
 */
transition_scores.transition (L_e_L_WL, S_e_S_S) = ScorePMul (transition_scores.transition (L_e_L_WL, BiSL_e_BmSL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * L_e_L_WL -> BiSL_e_BmSL_BpeL -> (L_e_L_L, S_e_S_e)
 *   L_e_L_L -> End
 *   S_e_S_e
 * giving an effective transition
 *   L_e_L_WL -> S_e_S_e
 */
transition_scores.transition (L_e_L_WL, S_e_S_e) = ScorePMul (transition_scores.transition (L_e_L_WL, BiSL_e_BmSL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * L_e_L_WL -> BiSL_e_BpeL_BmSL -> (L_e_L_L, S_e_e_S)
 *   L_e_L_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   L_e_L_WL -> S_e_e_S
 */
transition_scores.transition (L_e_L_WL, S_e_e_S) = ScorePMul (transition_scores.transition (L_e_L_WL, BiSL_e_BpeL_BmSL), transition_scores.end[L_e_L_L]);

/* 
 * L_e_L_WL -> BiSL_e_BpeL_BpeL -> (L_e_L_L, S_e_e_e)
 *   L_e_L_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_e_L_WL -> S_e_e_e
 */
transition_scores.transition (L_e_L_WL, S_e_e_e) = ScorePMul (transition_scores.transition (L_e_L_WL, BiSL_e_BpeL_BpeL), transition_scores.end[L_e_L_L]);

/* 
 * L_e_L_WL -> L_e_BiSiL_WL -> (L_e_L_WL, e_e_Si_e)
 *   L_e_L_WL -> End
 *   e_e_Si_e
 * giving an effective transition
 *   L_e_L_WL -> e_e_Si_e
 */
transition_scores.transition (L_e_L_WL, e_e_Si_e) = ScorePMul (transition_scores.transition (L_e_L_WL, L_e_BiSiL_WL), transition_scores.end[L_e_L_WL]);

/* 
 * L_e_L_e -> BiSL_e_BmSL_e -> (L_e_L_e, S_e_S_e)
 *   L_e_L_e -> End
 *   S_e_S_e
 * giving an effective transition
 *   L_e_L_e -> S_e_S_e
 */
transition_scores.transition (L_e_L_e, S_e_S_e) = ScorePMul (transition_scores.transition (L_e_L_e, BiSL_e_BmSL_e), transition_scores.end[L_e_L_e]);

/* 
 * L_e_L_e -> BiSL_e_BpeL_e -> (L_e_L_e, S_e_e_e)
 *   L_e_L_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_e_L_e -> S_e_e_e
 */
transition_scores.transition (L_e_L_e, S_e_e_e) = ScorePMul (transition_scores.transition (L_e_L_e, BiSL_e_BpeL_e), transition_scores.end[L_e_L_e]);

/* 
 * L_e_L_e -> L_e_BiSiL_e -> (L_e_L_e, e_e_Si_e)
 *   L_e_L_e -> End
 *   e_e_Si_e
 * giving an effective transition
 *   L_e_L_e -> e_e_Si_e
 */
transition_scores.transition (L_e_L_e, e_e_Si_e) = ScorePMul (transition_scores.transition (L_e_L_e, L_e_BiSiL_e), transition_scores.end[L_e_L_e]);

/* 
 * L_e_e_L -> BiSL_e_e_BmSL -> (L_e_e_L, S_e_e_S)
 *   L_e_e_L -> End
 *   S_e_e_S
 * giving an effective transition
 *   L_e_e_L -> S_e_e_S
 */
transition_scores.transition (L_e_e_L, S_e_e_S) = ScorePMul (transition_scores.transition (L_e_e_L, BiSL_e_e_BmSL), transition_scores.end[L_e_e_L]);

/* 
 * L_e_e_L -> BiSL_e_e_BpeL -> (L_e_e_L, S_e_e_e)
 *   L_e_e_L -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_e_e_L -> S_e_e_e
 */
transition_scores.transition (L_e_e_L, S_e_e_e) = ScorePMul (transition_scores.transition (L_e_e_L, BiSL_e_e_BpeL), transition_scores.end[L_e_e_L]);

/* 
 * L_e_e_L -> L_e_e_BiSiL -> (L_e_e_L, e_e_e_Si)
 *   L_e_e_L -> End
 *   e_e_e_Si
 * giving an effective transition
 *   L_e_e_L -> e_e_e_Si
 */
transition_scores.transition (L_e_e_L, e_e_e_Si) = ScorePMul (transition_scores.transition (L_e_e_L, L_e_e_BiSiL), transition_scores.end[L_e_e_L]);

/* 
 * L_e_e_e -> BiSL_e_e_e -> (L_e_e_e, S_e_e_e)
 *   L_e_e_e -> End
 *   S_e_e_e
 * giving an effective transition
 *   L_e_e_e -> S_e_e_e
 */
transition_scores.transition (L_e_e_e, S_e_e_e) = ScorePMul (transition_scores.transition (L_e_e_e, BiSL_e_e_e), transition_scores.end[L_e_e_e]);

/* 
 * e_Li_e_e -> e_BiSiLi_e_e -> (e_Li_e_e, e_Si_e_e)
 *   e_Li_e_e -> End
 *   e_Si_e_e
 * giving an effective transition
 *   e_Li_e_e -> e_Si_e_e
 */
transition_scores.transition (e_Li_e_e, e_Si_e_e) = ScorePMul (transition_scores.transition (e_Li_e_e, e_BiSiLi_e_e), transition_scores.end[e_Li_e_e]);

/* 
 * e_e_Li_e -> e_e_BiSiLi_e -> (e_e_Li_e, e_e_Si_e)
 *   e_e_Li_e -> End
 *   e_e_Si_e
 * giving an effective transition
 *   e_e_Li_e -> e_e_Si_e
 */
transition_scores.transition (e_e_Li_e, e_e_Si_e) = ScorePMul (transition_scores.transition (e_e_Li_e, e_e_BiSiLi_e), transition_scores.end[e_e_Li_e]);

/* 
 * e_e_e_Li -> e_e_e_BiSiLi -> (e_e_e_Li, e_e_e_Si)
 *   e_e_e_Li -> End
 *   e_e_e_Si
 * giving an effective transition
 *   e_e_e_Li -> e_e_e_Si
 */
transition_scores.transition (e_e_e_Li, e_e_e_Si) = ScorePMul (transition_scores.transition (e_e_e_Li, e_e_e_BiSiLi), transition_scores.end[e_e_e_Li]);

