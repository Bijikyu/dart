shift/reduce conflict in state 203 resolved as shift.
shift/reduce conflict in state 203 resolved as shift.
shift/reduce conflict in state 203 resolved as shift.
shift/reduce conflict in state 203 resolved as shift.
shift/reduce conflict in state 204 resolved as shift.
shift/reduce conflict in state 204 resolved as shift.
shift/reduce conflict in state 204 resolved as shift.
shift/reduce conflict in state 204 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 206 resolved as shift.
shift/reduce conflict in state 206 resolved as shift.
shift/reduce conflict in state 206 resolved as shift.
shift/reduce conflict in state 206 resolved as shift.


Unused terminals:


Grammar

Rule 1     xgram -> xgram_alphabet_first
Rule 2     xgram -> xgram_grammar_first
Rule 3     xgram_alphabet_first -> alphabet grammar
Rule 4     xgram_grammar_first -> grammar alphabet
Rule 5     grammar -> BO GRAMMAR grammar_components BC
Rule 6     grammar_components -> grammar_components BO grammar_component BC
Rule 7     grammar_components -> empty
Rule 8     grammar_component -> name
Rule 9     grammar_component -> update_rules
Rule 10    grammar_component -> update_rates
Rule 11    grammar_component -> parametric
Rule 12    grammar_component -> rule
Rule 13    grammar_component -> parameters
Rule 14    grammar_component -> consts
Rule 15    grammar_component -> chain
Rule 16    grammar_component -> hybridchain
Rule 17    grammar_component -> pseudocounts
Rule 18    grammar_component -> observedcounts
Rule 19    update_rules -> UPDATERULES FLOAT
Rule 20    update_rates -> UPDATERATES FLOAT
Rule 21    parametric -> PARAMETRIC
Rule 22    rule -> TRANSFORM rule_components
Rule 23    rule_components -> rule_components BO rule_component BC
Rule 24    rule_components -> empty
Rule 25    rule_component -> rule_from
Rule 26    rule_component -> rule_to
Rule 27    rule_component -> rule_rate
Rule 28    rule_component -> rule_annotation
Rule 29    rule_component -> rule_gapsok
Rule 30    rule_component -> rule_minlen
Rule 31    rule_rate -> probability
Rule 32    rule_rate -> rate
Rule 33    rule_from -> FROM BO states BC
Rule 34    rule_to -> TO BO states BC
Rule 35    rule_minlen -> MINLEN FLOAT
Rule 36    rule_gapsok -> GAPSOK
Rule 37    rule_annotation -> ANNOTATE annotation_components
Rule 38    annotation_components -> annotation_components BO annotation_component BC
Rule 39    annotation_components -> empty
Rule 40    annotation_component -> ATOM ATOM
Rule 41    annotation_component -> ROW ATOM
Rule 42    annotation_component -> LABEL ATOM
Rule 43    consts -> CONST parameter_list
Rule 44    parameters -> PARAMS parameter_list
Rule 45    parameters -> PGROUP parameter_list
Rule 46    parameters -> CONSTPGROUP parameter_list
Rule 47    parameters -> RATE parameter_list
Rule 48    parameters -> CONSTRGROUP parameter_list
Rule 49    parameter_list -> BO parameter_group BC parameter_list
Rule 50    parameter_list -> BO parameter BC parameter_list
Rule 51    parameter_list -> empty
Rule 52    parameter_group -> BO parameter BC parameter_group
Rule 53    parameter_group -> empty
Rule 54    parameter -> ATOM FLOAT
Rule 55    pseudocounts -> PSEUDOCOUNTS counts_list
Rule 56    observedcounts -> OBSERVEDCOUNTS counts_list
Rule 57    counts_list -> counts_list BO counts_group BC
Rule 58    counts_list -> empty
Rule 59    counts_group -> ATOM FLOAT
Rule 60    counts_group -> ATOM FLOAT FLOAT
Rule 61    counts_group -> empty
Rule 62    chain -> CHAIN chain_components
Rule 63    chain_components -> chain_components BO chain_component BC
Rule 64    chain_components -> empty
Rule 65    chain_component -> terminal
Rule 66    chain_component -> update_policy
Rule 67    chain_component -> initial_state
Rule 68    chain_component -> transition
Rule 69    chain_component -> hidden_class
Rule 70    terminal -> TERMINAL BO states BC
Rule 71    update_policy -> UPDATEPOLICY ATOM
Rule 72    update_policy -> UPDATEPOLICY PARAMETRIC
Rule 73    initial_state -> INITIAL BO ATOM BO states BC BC BO probability BC
Rule 74    transition -> MUTATE BO FROM BO states BC BC BO TO BO states BC BC BO rate BC
Rule 75    hidden_class -> HIDDENCLASS hidden_class_options_list
Rule 76    hidden_class_options_list -> hidden_class_options_list BO hidden_class_options BC
Rule 77    hidden_class_options_list -> empty
Rule 78    hidden_class_options -> ROW ATOM
Rule 79    hidden_class_options -> LABEL BO states BC
Rule 80    hybridchain -> HYBRIDCHAIN hybridchain_parts
Rule 81    hybridchain_parts -> hybridchain_parts BO hybridchain_part BC
Rule 82    hybridchain_parts -> empty
Rule 83    hybridchain_part -> terminal
Rule 84    hybridchain_part -> row
Rule 85    hybridchain_part -> components
Rule 86    row -> ROW ATOM
Rule 87    components -> COMPONENTS components_list
Rule 88    components_list -> components_list BO component BC
Rule 89    components_list -> empty
Rule 90    component -> BO LABEL ATOM BC BO TERMINAL BO ATOM BC BC
Rule 91    alphabet -> BO ALPHABET alphabet_components BC
Rule 92    alphabet_components -> alphabet_components BO alphabet_component BC
Rule 93    alphabet_components -> empty
Rule 94    alphabet_component -> name
Rule 95    alphabet_component -> tokens
Rule 96    alphabet_component -> complements
Rule 97    alphabet_component -> extension
Rule 98    alphabet_component -> wildcard
Rule 99    tokens -> TOKEN BO token_list BC
Rule 100   complements -> COMPLEMENT BO token_list BC
Rule 101   token_list -> ATOM token_list
Rule 102   token_list -> empty
Rule 103   extension -> EXTEND BO TO ATOM BC from_list
Rule 104   from_list -> BO FROM ATOM BC from_list
Rule 105   from_list -> empty
Rule 106   wildcard -> WILDCARD ATOM
Rule 107   wildcard -> WILDCARD TIMES
Rule 108   name -> NAME ATOM
Rule 109   probability -> PROB expression
Rule 110   rate -> RATE expression
Rule 111   expression -> expression PLUS expression
Rule 112   expression -> expression MINUS expression
Rule 113   expression -> expression TIMES expression
Rule 114   expression -> expression DIVIDE expression
Rule 115   expression -> BO expression BC
Rule 116   expression -> FLOAT
Rule 117   expression -> ATOM
Rule 118   states -> STATE states
Rule 119   states -> ATOM states
Rule 120   states -> NULLNONTERMINAL states
Rule 121   states -> empty
Rule 122   empty -> <empty>

Terminals, with rules where they appear

ALPHABET             : 91
ANNOTATE             : 37
ATOM                 : 40 40 41 42 54 59 60 71 73 78 86 90 90 101 103 104 106 108 117 119
BC                   : 5 6 23 33 34 38 49 50 52 57 63 70 73 73 73 74 74 74 74 74 76 79 81 88 90 90 90 91 92 99 100 103 104 115
BO                   : 5 6 23 33 34 38 49 50 52 57 63 70 73 73 73 74 74 74 74 74 76 79 81 88 90 90 90 91 92 99 100 103 104 115
CHAIN                : 62
COMPLEMENT           : 100
COMPONENTS           : 87
CONST                : 43
CONSTPGROUP          : 46
CONSTRGROUP          : 48
DIVIDE               : 114
EXTEND               : 103
FLOAT                : 19 20 35 54 59 60 60 116
FROM                 : 33 74 104
GAPSOK               : 36
GRAMMAR              : 5
HIDDENCLASS          : 75
HYBRIDCHAIN          : 80
INITIAL              : 73
LABEL                : 42 79 90
MINLEN               : 35
MINUS                : 112
MUTATE               : 74
NAME                 : 108
NULLNONTERMINAL      : 120
OBSERVEDCOUNTS       : 56
PARAMETRIC           : 21 72
PARAMS               : 44
PGROUP               : 45
PLUS                 : 111
PROB                 : 109
PSEUDOCOUNTS         : 55
RATE                 : 47 110
ROW                  : 41 78 86
STATE                : 118
TERMINAL             : 70 90
TIMES                : 107 113
TO                   : 34 74 103
TOKEN                : 99
TRANSFORM            : 22
UPDATEPOLICY         : 71 72
UPDATERATES          : 20
UPDATERULES          : 19
WILDCARD             : 106 107
error                : 

Nonterminals, with rules where they appear

alphabet             : 3 4
alphabet_component   : 92
alphabet_components  : 91 92
annotation_component : 38
annotation_components : 37 38
chain                : 15
chain_component      : 63
chain_components     : 62 63
complements          : 96
component            : 88
components           : 85
components_list      : 87 88
consts               : 14
counts_group         : 57
counts_list          : 55 56 57
empty                : 7 24 39 51 53 58 61 64 77 82 89 93 102 105 121
expression           : 109 110 111 111 112 112 113 113 114 114 115
extension            : 97
from_list            : 103 104
grammar              : 3 4
grammar_component    : 6
grammar_components   : 5 6
hidden_class         : 69
hidden_class_options : 76
hidden_class_options_list : 75 76
hybridchain          : 16
hybridchain_part     : 81
hybridchain_parts    : 80 81
initial_state        : 67
name                 : 8 94
observedcounts       : 18
parameter            : 50 52
parameter_group      : 49 52
parameter_list       : 43 44 45 46 47 48 49 50
parameters           : 13
parametric           : 11
probability          : 31 73
pseudocounts         : 17
rate                 : 32 74
row                  : 84
rule                 : 12
rule_annotation      : 28
rule_component       : 23
rule_components      : 22 23
rule_from            : 25
rule_gapsok          : 29
rule_minlen          : 30
rule_rate            : 27
rule_to              : 26
states               : 33 34 70 73 74 74 79 118 119 120
terminal             : 65 83
token_list           : 99 100 101
tokens               : 95
transition           : 68
update_policy        : 66
update_rates         : 10
update_rules         : 9
wildcard             : 98
xgram                : 0
xgram_alphabet_first : 1
xgram_grammar_first  : 2


Parsing method: LALR


state 0

    (0) S' -> . xgram
    (1) xgram -> . xgram_alphabet_first
    (2) xgram -> . xgram_grammar_first
    (3) xgram_alphabet_first -> . alphabet grammar
    (4) xgram_grammar_first -> . grammar alphabet
    (91) alphabet -> . BO ALPHABET alphabet_components BC
    (5) grammar -> . BO GRAMMAR grammar_components BC

    BO              shift and go to state 3


    grammar                        shift and go to state 1
    alphabet                       shift and go to state 2
    xgram_alphabet_first           shift and go to state 4
    xgram_grammar_first            shift and go to state 5
    xgram                          shift and go to state 6

state 1

    (4) xgram_grammar_first -> grammar . alphabet
    (91) alphabet -> . BO ALPHABET alphabet_components BC

    BO              shift and go to state 8


    alphabet                       shift and go to state 7

state 2

    (3) xgram_alphabet_first -> alphabet . grammar
    (5) grammar -> . BO GRAMMAR grammar_components BC

    BO              shift and go to state 9


    grammar                        shift and go to state 10

state 3

    (91) alphabet -> BO . ALPHABET alphabet_components BC
    (5) grammar -> BO . GRAMMAR grammar_components BC

    ALPHABET        shift and go to state 12
    GRAMMAR         shift and go to state 11



state 4

    (1) xgram -> xgram_alphabet_first .

    $end            reduce using rule 1 (xgram -> xgram_alphabet_first .)



state 5

    (2) xgram -> xgram_grammar_first .

    $end            reduce using rule 2 (xgram -> xgram_grammar_first .)



state 6

    (0) S' -> xgram .




state 7

    (4) xgram_grammar_first -> grammar alphabet .

    $end            reduce using rule 4 (xgram_grammar_first -> grammar alphabet .)



state 8

    (91) alphabet -> BO . ALPHABET alphabet_components BC

    ALPHABET        shift and go to state 12



state 9

    (5) grammar -> BO . GRAMMAR grammar_components BC

    GRAMMAR         shift and go to state 11



state 10

    (3) xgram_alphabet_first -> alphabet grammar .

    $end            reduce using rule 3 (xgram_alphabet_first -> alphabet grammar .)



state 11

    (5) grammar -> BO GRAMMAR . grammar_components BC
    (6) grammar_components -> . grammar_components BO grammar_component BC
    (7) grammar_components -> . empty
    (122) empty -> .

    BC              reduce using rule 122 (empty -> .)
    BO              reduce using rule 122 (empty -> .)


    grammar_components             shift and go to state 13
    empty                          shift and go to state 14

state 12

    (91) alphabet -> BO ALPHABET . alphabet_components BC
    (92) alphabet_components -> . alphabet_components BO alphabet_component BC
    (93) alphabet_components -> . empty
    (122) empty -> .

    BC              reduce using rule 122 (empty -> .)
    BO              reduce using rule 122 (empty -> .)


    alphabet_components            shift and go to state 15
    empty                          shift and go to state 16

state 13

    (5) grammar -> BO GRAMMAR grammar_components . BC
    (6) grammar_components -> grammar_components . BO grammar_component BC

    BC              shift and go to state 18
    BO              shift and go to state 17



state 14

    (7) grammar_components -> empty .

    BC              reduce using rule 7 (grammar_components -> empty .)
    BO              reduce using rule 7 (grammar_components -> empty .)



state 15

    (91) alphabet -> BO ALPHABET alphabet_components . BC
    (92) alphabet_components -> alphabet_components . BO alphabet_component BC

    BC              shift and go to state 20
    BO              shift and go to state 19



state 16

    (93) alphabet_components -> empty .

    BC              reduce using rule 93 (alphabet_components -> empty .)
    BO              reduce using rule 93 (alphabet_components -> empty .)



state 17

    (6) grammar_components -> grammar_components BO . grammar_component BC
    (8) grammar_component -> . name
    (9) grammar_component -> . update_rules
    (10) grammar_component -> . update_rates
    (11) grammar_component -> . parametric
    (12) grammar_component -> . rule
    (13) grammar_component -> . parameters
    (14) grammar_component -> . consts
    (15) grammar_component -> . chain
    (16) grammar_component -> . hybridchain
    (17) grammar_component -> . pseudocounts
    (18) grammar_component -> . observedcounts
    (108) name -> . NAME ATOM
    (19) update_rules -> . UPDATERULES FLOAT
    (20) update_rates -> . UPDATERATES FLOAT
    (21) parametric -> . PARAMETRIC
    (22) rule -> . TRANSFORM rule_components
    (44) parameters -> . PARAMS parameter_list
    (45) parameters -> . PGROUP parameter_list
    (46) parameters -> . CONSTPGROUP parameter_list
    (47) parameters -> . RATE parameter_list
    (48) parameters -> . CONSTRGROUP parameter_list
    (43) consts -> . CONST parameter_list
    (62) chain -> . CHAIN chain_components
    (80) hybridchain -> . HYBRIDCHAIN hybridchain_parts
    (55) pseudocounts -> . PSEUDOCOUNTS counts_list
    (56) observedcounts -> . OBSERVEDCOUNTS counts_list

    NAME            shift and go to state 41
    UPDATERULES     shift and go to state 32
    UPDATERATES     shift and go to state 21
    PARAMETRIC      shift and go to state 35
    TRANSFORM       shift and go to state 25
    PARAMS          shift and go to state 45
    PGROUP          shift and go to state 28
    CONSTPGROUP     shift and go to state 36
    RATE            shift and go to state 27
    CONSTRGROUP     shift and go to state 34
    CONST           shift and go to state 22
    CHAIN           shift and go to state 26
    HYBRIDCHAIN     shift and go to state 33
    PSEUDOCOUNTS    shift and go to state 46
    OBSERVEDCOUNTS  shift and go to state 30


    pseudocounts                   shift and go to state 42
    name                           shift and go to state 43
    parameters                     shift and go to state 31
    chain                          shift and go to state 23
    rule                           shift and go to state 44
    hybridchain                    shift and go to state 37
    update_rules                   shift and go to state 38
    consts                         shift and go to state 39
    update_rates                   shift and go to state 24
    grammar_component              shift and go to state 29
    parametric                     shift and go to state 47
    observedcounts                 shift and go to state 40

state 18

    (5) grammar -> BO GRAMMAR grammar_components BC .

    $end            reduce using rule 5 (grammar -> BO GRAMMAR grammar_components BC .)
    BO              reduce using rule 5 (grammar -> BO GRAMMAR grammar_components BC .)



state 19

    (92) alphabet_components -> alphabet_components BO . alphabet_component BC
    (94) alphabet_component -> . name
    (95) alphabet_component -> . tokens
    (96) alphabet_component -> . complements
    (97) alphabet_component -> . extension
    (98) alphabet_component -> . wildcard
    (108) name -> . NAME ATOM
    (99) tokens -> . TOKEN BO token_list BC
    (100) complements -> . COMPLEMENT BO token_list BC
    (103) extension -> . EXTEND BO TO ATOM BC from_list
    (106) wildcard -> . WILDCARD ATOM
    (107) wildcard -> . WILDCARD TIMES

    NAME            shift and go to state 41
    TOKEN           shift and go to state 53
    COMPLEMENT      shift and go to state 51
    EXTEND          shift and go to state 57
    WILDCARD        shift and go to state 54


    alphabet_component             shift and go to state 48
    name                           shift and go to state 49
    extension                      shift and go to state 50
    tokens                         shift and go to state 52
    wildcard                       shift and go to state 55
    complements                    shift and go to state 56

state 20

    (91) alphabet -> BO ALPHABET alphabet_components BC .

    $end            reduce using rule 91 (alphabet -> BO ALPHABET alphabet_components BC .)
    BO              reduce using rule 91 (alphabet -> BO ALPHABET alphabet_components BC .)



state 21

    (20) update_rates -> UPDATERATES . FLOAT

    FLOAT           shift and go to state 58



state 22

    (43) consts -> CONST . parameter_list
    (49) parameter_list -> . BO parameter_group BC parameter_list
    (50) parameter_list -> . BO parameter BC parameter_list
    (51) parameter_list -> . empty
    (122) empty -> .

    BO              shift and go to state 60
    BC              reduce using rule 122 (empty -> .)


    empty                          shift and go to state 61
    parameter_list                 shift and go to state 59

state 23

    (15) grammar_component -> chain .

    BC              reduce using rule 15 (grammar_component -> chain .)



state 24

    (10) grammar_component -> update_rates .

    BC              reduce using rule 10 (grammar_component -> update_rates .)



state 25

    (22) rule -> TRANSFORM . rule_components
    (23) rule_components -> . rule_components BO rule_component BC
    (24) rule_components -> . empty
    (122) empty -> .

    BO              reduce using rule 122 (empty -> .)
    BC              reduce using rule 122 (empty -> .)


    rule_components                shift and go to state 62
    empty                          shift and go to state 63

state 26

    (62) chain -> CHAIN . chain_components
    (63) chain_components -> . chain_components BO chain_component BC
    (64) chain_components -> . empty
    (122) empty -> .

    BO              reduce using rule 122 (empty -> .)
    BC              reduce using rule 122 (empty -> .)


    chain_components               shift and go to state 64
    empty                          shift and go to state 65

state 27

    (47) parameters -> RATE . parameter_list
    (49) parameter_list -> . BO parameter_group BC parameter_list
    (50) parameter_list -> . BO parameter BC parameter_list
    (51) parameter_list -> . empty
    (122) empty -> .

    BO              shift and go to state 60
    BC              reduce using rule 122 (empty -> .)


    empty                          shift and go to state 61
    parameter_list                 shift and go to state 66

state 28

    (45) parameters -> PGROUP . parameter_list
    (49) parameter_list -> . BO parameter_group BC parameter_list
    (50) parameter_list -> . BO parameter BC parameter_list
    (51) parameter_list -> . empty
    (122) empty -> .

    BO              shift and go to state 60
    BC              reduce using rule 122 (empty -> .)


    empty                          shift and go to state 61
    parameter_list                 shift and go to state 67

state 29

    (6) grammar_components -> grammar_components BO grammar_component . BC

    BC              shift and go to state 68



state 30

    (56) observedcounts -> OBSERVEDCOUNTS . counts_list
    (57) counts_list -> . counts_list BO counts_group BC
    (58) counts_list -> . empty
    (122) empty -> .

    BO              reduce using rule 122 (empty -> .)
    BC              reduce using rule 122 (empty -> .)


    counts_list                    shift and go to state 69
    empty                          shift and go to state 70

state 31

    (13) grammar_component -> parameters .

    BC              reduce using rule 13 (grammar_component -> parameters .)



state 32

    (19) update_rules -> UPDATERULES . FLOAT

    FLOAT           shift and go to state 71



state 33

    (80) hybridchain -> HYBRIDCHAIN . hybridchain_parts
    (81) hybridchain_parts -> . hybridchain_parts BO hybridchain_part BC
    (82) hybridchain_parts -> . empty
    (122) empty -> .

    BO              reduce using rule 122 (empty -> .)
    BC              reduce using rule 122 (empty -> .)


    hybridchain_parts              shift and go to state 72
    empty                          shift and go to state 73

state 34

    (48) parameters -> CONSTRGROUP . parameter_list
    (49) parameter_list -> . BO parameter_group BC parameter_list
    (50) parameter_list -> . BO parameter BC parameter_list
    (51) parameter_list -> . empty
    (122) empty -> .

    BO              shift and go to state 60
    BC              reduce using rule 122 (empty -> .)


    empty                          shift and go to state 61
    parameter_list                 shift and go to state 74

state 35

    (21) parametric -> PARAMETRIC .

    BC              reduce using rule 21 (parametric -> PARAMETRIC .)



state 36

    (46) parameters -> CONSTPGROUP . parameter_list
    (49) parameter_list -> . BO parameter_group BC parameter_list
    (50) parameter_list -> . BO parameter BC parameter_list
    (51) parameter_list -> . empty
    (122) empty -> .

    BO              shift and go to state 60
    BC              reduce using rule 122 (empty -> .)


    empty                          shift and go to state 61
    parameter_list                 shift and go to state 75

state 37

    (16) grammar_component -> hybridchain .

    BC              reduce using rule 16 (grammar_component -> hybridchain .)



state 38

    (9) grammar_component -> update_rules .

    BC              reduce using rule 9 (grammar_component -> update_rules .)



state 39

    (14) grammar_component -> consts .

    BC              reduce using rule 14 (grammar_component -> consts .)



state 40

    (18) grammar_component -> observedcounts .

    BC              reduce using rule 18 (grammar_component -> observedcounts .)



state 41

    (108) name -> NAME . ATOM

    ATOM            shift and go to state 76



state 42

    (17) grammar_component -> pseudocounts .

    BC              reduce using rule 17 (grammar_component -> pseudocounts .)



state 43

    (8) grammar_component -> name .

    BC              reduce using rule 8 (grammar_component -> name .)



state 44

    (12) grammar_component -> rule .

    BC              reduce using rule 12 (grammar_component -> rule .)



state 45

    (44) parameters -> PARAMS . parameter_list
    (49) parameter_list -> . BO parameter_group BC parameter_list
    (50) parameter_list -> . BO parameter BC parameter_list
    (51) parameter_list -> . empty
    (122) empty -> .

    BO              shift and go to state 60
    BC              reduce using rule 122 (empty -> .)


    empty                          shift and go to state 61
    parameter_list                 shift and go to state 77

state 46

    (55) pseudocounts -> PSEUDOCOUNTS . counts_list
    (57) counts_list -> . counts_list BO counts_group BC
    (58) counts_list -> . empty
    (122) empty -> .

    BO              reduce using rule 122 (empty -> .)
    BC              reduce using rule 122 (empty -> .)


    counts_list                    shift and go to state 78
    empty                          shift and go to state 70

state 47

    (11) grammar_component -> parametric .

    BC              reduce using rule 11 (grammar_component -> parametric .)



state 48

    (92) alphabet_components -> alphabet_components BO alphabet_component . BC

    BC              shift and go to state 79



state 49

    (94) alphabet_component -> name .

    BC              reduce using rule 94 (alphabet_component -> name .)



state 50

    (97) alphabet_component -> extension .

    BC              reduce using rule 97 (alphabet_component -> extension .)



state 51

    (100) complements -> COMPLEMENT . BO token_list BC

    BO              shift and go to state 80



state 52

    (95) alphabet_component -> tokens .

    BC              reduce using rule 95 (alphabet_component -> tokens .)



state 53

    (99) tokens -> TOKEN . BO token_list BC

    BO              shift and go to state 81



state 54

    (106) wildcard -> WILDCARD . ATOM
    (107) wildcard -> WILDCARD . TIMES

    ATOM            shift and go to state 83
    TIMES           shift and go to state 82



state 55

    (98) alphabet_component -> wildcard .

    BC              reduce using rule 98 (alphabet_component -> wildcard .)



state 56

    (96) alphabet_component -> complements .

    BC              reduce using rule 96 (alphabet_component -> complements .)



state 57

    (103) extension -> EXTEND . BO TO ATOM BC from_list

    BO              shift and go to state 84



state 58

    (20) update_rates -> UPDATERATES FLOAT .

    BC              reduce using rule 20 (update_rates -> UPDATERATES FLOAT .)



state 59

    (43) consts -> CONST parameter_list .

    BC              reduce using rule 43 (consts -> CONST parameter_list .)



state 60

    (49) parameter_list -> BO . parameter_group BC parameter_list
    (50) parameter_list -> BO . parameter BC parameter_list
    (52) parameter_group -> . BO parameter BC parameter_group
    (53) parameter_group -> . empty
    (54) parameter -> . ATOM FLOAT
    (122) empty -> .

    BO              shift and go to state 85
    ATOM            shift and go to state 87
    BC              reduce using rule 122 (empty -> .)


    empty                          shift and go to state 89
    parameter                      shift and go to state 88
    parameter_group                shift and go to state 86

state 61

    (51) parameter_list -> empty .

    BC              reduce using rule 51 (parameter_list -> empty .)



state 62

    (22) rule -> TRANSFORM rule_components .
    (23) rule_components -> rule_components . BO rule_component BC

    BC              reduce using rule 22 (rule -> TRANSFORM rule_components .)
    BO              shift and go to state 90



state 63

    (24) rule_components -> empty .

    BO              reduce using rule 24 (rule_components -> empty .)
    BC              reduce using rule 24 (rule_components -> empty .)



state 64

    (62) chain -> CHAIN chain_components .
    (63) chain_components -> chain_components . BO chain_component BC

    BC              reduce using rule 62 (chain -> CHAIN chain_components .)
    BO              shift and go to state 91



state 65

    (64) chain_components -> empty .

    BO              reduce using rule 64 (chain_components -> empty .)
    BC              reduce using rule 64 (chain_components -> empty .)



state 66

    (47) parameters -> RATE parameter_list .

    BC              reduce using rule 47 (parameters -> RATE parameter_list .)



state 67

    (45) parameters -> PGROUP parameter_list .

    BC              reduce using rule 45 (parameters -> PGROUP parameter_list .)



state 68

    (6) grammar_components -> grammar_components BO grammar_component BC .

    BC              reduce using rule 6 (grammar_components -> grammar_components BO grammar_component BC .)
    BO              reduce using rule 6 (grammar_components -> grammar_components BO grammar_component BC .)



state 69

    (56) observedcounts -> OBSERVEDCOUNTS counts_list .
    (57) counts_list -> counts_list . BO counts_group BC

    BC              reduce using rule 56 (observedcounts -> OBSERVEDCOUNTS counts_list .)
    BO              shift and go to state 92



state 70

    (58) counts_list -> empty .

    BO              reduce using rule 58 (counts_list -> empty .)
    BC              reduce using rule 58 (counts_list -> empty .)



state 71

    (19) update_rules -> UPDATERULES FLOAT .

    BC              reduce using rule 19 (update_rules -> UPDATERULES FLOAT .)



state 72

    (80) hybridchain -> HYBRIDCHAIN hybridchain_parts .
    (81) hybridchain_parts -> hybridchain_parts . BO hybridchain_part BC

    BC              reduce using rule 80 (hybridchain -> HYBRIDCHAIN hybridchain_parts .)
    BO              shift and go to state 93



state 73

    (82) hybridchain_parts -> empty .

    BO              reduce using rule 82 (hybridchain_parts -> empty .)
    BC              reduce using rule 82 (hybridchain_parts -> empty .)



state 74

    (48) parameters -> CONSTRGROUP parameter_list .

    BC              reduce using rule 48 (parameters -> CONSTRGROUP parameter_list .)



state 75

    (46) parameters -> CONSTPGROUP parameter_list .

    BC              reduce using rule 46 (parameters -> CONSTPGROUP parameter_list .)



state 76

    (108) name -> NAME ATOM .

    BC              reduce using rule 108 (name -> NAME ATOM .)



state 77

    (44) parameters -> PARAMS parameter_list .

    BC              reduce using rule 44 (parameters -> PARAMS parameter_list .)



state 78

    (55) pseudocounts -> PSEUDOCOUNTS counts_list .
    (57) counts_list -> counts_list . BO counts_group BC

    BC              reduce using rule 55 (pseudocounts -> PSEUDOCOUNTS counts_list .)
    BO              shift and go to state 92



state 79

    (92) alphabet_components -> alphabet_components BO alphabet_component BC .

    BC              reduce using rule 92 (alphabet_components -> alphabet_components BO alphabet_component BC .)
    BO              reduce using rule 92 (alphabet_components -> alphabet_components BO alphabet_component BC .)



state 80

    (100) complements -> COMPLEMENT BO . token_list BC
    (101) token_list -> . ATOM token_list
    (102) token_list -> . empty
    (122) empty -> .

    ATOM            shift and go to state 95
    BC              reduce using rule 122 (empty -> .)


    token_list                     shift and go to state 94
    empty                          shift and go to state 96

state 81

    (99) tokens -> TOKEN BO . token_list BC
    (101) token_list -> . ATOM token_list
    (102) token_list -> . empty
    (122) empty -> .

    ATOM            shift and go to state 95
    BC              reduce using rule 122 (empty -> .)


    token_list                     shift and go to state 97
    empty                          shift and go to state 96

state 82

    (107) wildcard -> WILDCARD TIMES .

    BC              reduce using rule 107 (wildcard -> WILDCARD TIMES .)



state 83

    (106) wildcard -> WILDCARD ATOM .

    BC              reduce using rule 106 (wildcard -> WILDCARD ATOM .)



state 84

    (103) extension -> EXTEND BO . TO ATOM BC from_list

    TO              shift and go to state 98



state 85

    (52) parameter_group -> BO . parameter BC parameter_group
    (54) parameter -> . ATOM FLOAT

    ATOM            shift and go to state 87


    parameter                      shift and go to state 99

state 86

    (49) parameter_list -> BO parameter_group . BC parameter_list

    BC              shift and go to state 100



state 87

    (54) parameter -> ATOM . FLOAT

    FLOAT           shift and go to state 101



state 88

    (50) parameter_list -> BO parameter . BC parameter_list

    BC              shift and go to state 102



state 89

    (53) parameter_group -> empty .

    BC              reduce using rule 53 (parameter_group -> empty .)



state 90

    (23) rule_components -> rule_components BO . rule_component BC
    (25) rule_component -> . rule_from
    (26) rule_component -> . rule_to
    (27) rule_component -> . rule_rate
    (28) rule_component -> . rule_annotation
    (29) rule_component -> . rule_gapsok
    (30) rule_component -> . rule_minlen
    (33) rule_from -> . FROM BO states BC
    (34) rule_to -> . TO BO states BC
    (31) rule_rate -> . probability
    (32) rule_rate -> . rate
    (37) rule_annotation -> . ANNOTATE annotation_components
    (36) rule_gapsok -> . GAPSOK
    (35) rule_minlen -> . MINLEN FLOAT
    (109) probability -> . PROB expression
    (110) rate -> . RATE expression

    FROM            shift and go to state 115
    TO              shift and go to state 111
    ANNOTATE        shift and go to state 105
    GAPSOK          shift and go to state 113
    MINLEN          shift and go to state 104
    PROB            shift and go to state 118
    RATE            shift and go to state 114


    probability                    shift and go to state 103
    rule_gapsok                    shift and go to state 116
    rule_annotation                shift and go to state 107
    rule_rate                      shift and go to state 108
    rule_from                      shift and go to state 109
    rule_to                        shift and go to state 117
    rule_minlen                    shift and go to state 110
    rule_component                 shift and go to state 112
    rate                           shift and go to state 106

state 91

    (63) chain_components -> chain_components BO . chain_component BC
    (65) chain_component -> . terminal
    (66) chain_component -> . update_policy
    (67) chain_component -> . initial_state
    (68) chain_component -> . transition
    (69) chain_component -> . hidden_class
    (70) terminal -> . TERMINAL BO states BC
    (71) update_policy -> . UPDATEPOLICY ATOM
    (72) update_policy -> . UPDATEPOLICY PARAMETRIC
    (73) initial_state -> . INITIAL BO ATOM BO states BC BC BO probability BC
    (74) transition -> . MUTATE BO FROM BO states BC BC BO TO BO states BC BC BO rate BC
    (75) hidden_class -> . HIDDENCLASS hidden_class_options_list

    TERMINAL        shift and go to state 129
    UPDATEPOLICY    shift and go to state 119
    INITIAL         shift and go to state 124
    MUTATE          shift and go to state 123
    HIDDENCLASS     shift and go to state 120


    chain_component                shift and go to state 126
    update_policy                  shift and go to state 127
    transition                     shift and go to state 128
    terminal                       shift and go to state 121
    hidden_class                   shift and go to state 125
    initial_state                  shift and go to state 122

state 92

    (57) counts_list -> counts_list BO . counts_group BC
    (59) counts_group -> . ATOM FLOAT
    (60) counts_group -> . ATOM FLOAT FLOAT
    (61) counts_group -> . empty
    (122) empty -> .

    ATOM            shift and go to state 131
    BC              reduce using rule 122 (empty -> .)


    counts_group                   shift and go to state 130
    empty                          shift and go to state 132

state 93

    (81) hybridchain_parts -> hybridchain_parts BO . hybridchain_part BC
    (83) hybridchain_part -> . terminal
    (84) hybridchain_part -> . row
    (85) hybridchain_part -> . components
    (70) terminal -> . TERMINAL BO states BC
    (86) row -> . ROW ATOM
    (87) components -> . COMPONENTS components_list

    TERMINAL        shift and go to state 129
    ROW             shift and go to state 137
    COMPONENTS      shift and go to state 133


    terminal                       shift and go to state 134
    hybridchain_part               shift and go to state 135
    components                     shift and go to state 136
    row                            shift and go to state 138

state 94

    (100) complements -> COMPLEMENT BO token_list . BC

    BC              shift and go to state 139



state 95

    (101) token_list -> ATOM . token_list
    (101) token_list -> . ATOM token_list
    (102) token_list -> . empty
    (122) empty -> .

    ATOM            shift and go to state 95
    BC              reduce using rule 122 (empty -> .)


    token_list                     shift and go to state 140
    empty                          shift and go to state 96

state 96

    (102) token_list -> empty .

    BC              reduce using rule 102 (token_list -> empty .)



state 97

    (99) tokens -> TOKEN BO token_list . BC

    BC              shift and go to state 141



state 98

    (103) extension -> EXTEND BO TO . ATOM BC from_list

    ATOM            shift and go to state 142



state 99

    (52) parameter_group -> BO parameter . BC parameter_group

    BC              shift and go to state 143



state 100

    (49) parameter_list -> BO parameter_group BC . parameter_list
    (49) parameter_list -> . BO parameter_group BC parameter_list
    (50) parameter_list -> . BO parameter BC parameter_list
    (51) parameter_list -> . empty
    (122) empty -> .

    BO              shift and go to state 60
    BC              reduce using rule 122 (empty -> .)


    empty                          shift and go to state 61
    parameter_list                 shift and go to state 144

state 101

    (54) parameter -> ATOM FLOAT .

    BC              reduce using rule 54 (parameter -> ATOM FLOAT .)



state 102

    (50) parameter_list -> BO parameter BC . parameter_list
    (49) parameter_list -> . BO parameter_group BC parameter_list
    (50) parameter_list -> . BO parameter BC parameter_list
    (51) parameter_list -> . empty
    (122) empty -> .

    BO              shift and go to state 60
    BC              reduce using rule 122 (empty -> .)


    empty                          shift and go to state 61
    parameter_list                 shift and go to state 145

state 103

    (31) rule_rate -> probability .

    BC              reduce using rule 31 (rule_rate -> probability .)



state 104

    (35) rule_minlen -> MINLEN . FLOAT

    FLOAT           shift and go to state 146



state 105

    (37) rule_annotation -> ANNOTATE . annotation_components
    (38) annotation_components -> . annotation_components BO annotation_component BC
    (39) annotation_components -> . empty
    (122) empty -> .

    BO              reduce using rule 122 (empty -> .)
    BC              reduce using rule 122 (empty -> .)


    annotation_components          shift and go to state 147
    empty                          shift and go to state 148

state 106

    (32) rule_rate -> rate .

    BC              reduce using rule 32 (rule_rate -> rate .)



state 107

    (28) rule_component -> rule_annotation .

    BC              reduce using rule 28 (rule_component -> rule_annotation .)



state 108

    (27) rule_component -> rule_rate .

    BC              reduce using rule 27 (rule_component -> rule_rate .)



state 109

    (25) rule_component -> rule_from .

    BC              reduce using rule 25 (rule_component -> rule_from .)



state 110

    (30) rule_component -> rule_minlen .

    BC              reduce using rule 30 (rule_component -> rule_minlen .)



state 111

    (34) rule_to -> TO . BO states BC

    BO              shift and go to state 149



state 112

    (23) rule_components -> rule_components BO rule_component . BC

    BC              shift and go to state 150



state 113

    (36) rule_gapsok -> GAPSOK .

    BC              reduce using rule 36 (rule_gapsok -> GAPSOK .)



state 114

    (110) rate -> RATE . expression
    (111) expression -> . expression PLUS expression
    (112) expression -> . expression MINUS expression
    (113) expression -> . expression TIMES expression
    (114) expression -> . expression DIVIDE expression
    (115) expression -> . BO expression BC
    (116) expression -> . FLOAT
    (117) expression -> . ATOM

    BO              shift and go to state 152
    FLOAT           shift and go to state 151
    ATOM            shift and go to state 153


    expression                     shift and go to state 154

state 115

    (33) rule_from -> FROM . BO states BC

    BO              shift and go to state 155



state 116

    (29) rule_component -> rule_gapsok .

    BC              reduce using rule 29 (rule_component -> rule_gapsok .)



state 117

    (26) rule_component -> rule_to .

    BC              reduce using rule 26 (rule_component -> rule_to .)



state 118

    (109) probability -> PROB . expression
    (111) expression -> . expression PLUS expression
    (112) expression -> . expression MINUS expression
    (113) expression -> . expression TIMES expression
    (114) expression -> . expression DIVIDE expression
    (115) expression -> . BO expression BC
    (116) expression -> . FLOAT
    (117) expression -> . ATOM

    BO              shift and go to state 152
    FLOAT           shift and go to state 151
    ATOM            shift and go to state 153


    expression                     shift and go to state 156

state 119

    (71) update_policy -> UPDATEPOLICY . ATOM
    (72) update_policy -> UPDATEPOLICY . PARAMETRIC

    ATOM            shift and go to state 158
    PARAMETRIC      shift and go to state 157



state 120

    (75) hidden_class -> HIDDENCLASS . hidden_class_options_list
    (76) hidden_class_options_list -> . hidden_class_options_list BO hidden_class_options BC
    (77) hidden_class_options_list -> . empty
    (122) empty -> .

    BO              reduce using rule 122 (empty -> .)
    BC              reduce using rule 122 (empty -> .)


    hidden_class_options_list      shift and go to state 159
    empty                          shift and go to state 160

state 121

    (65) chain_component -> terminal .

    BC              reduce using rule 65 (chain_component -> terminal .)



state 122

    (67) chain_component -> initial_state .

    BC              reduce using rule 67 (chain_component -> initial_state .)



state 123

    (74) transition -> MUTATE . BO FROM BO states BC BC BO TO BO states BC BC BO rate BC

    BO              shift and go to state 161



state 124

    (73) initial_state -> INITIAL . BO ATOM BO states BC BC BO probability BC

    BO              shift and go to state 162



state 125

    (69) chain_component -> hidden_class .

    BC              reduce using rule 69 (chain_component -> hidden_class .)



state 126

    (63) chain_components -> chain_components BO chain_component . BC

    BC              shift and go to state 163



state 127

    (66) chain_component -> update_policy .

    BC              reduce using rule 66 (chain_component -> update_policy .)



state 128

    (68) chain_component -> transition .

    BC              reduce using rule 68 (chain_component -> transition .)



state 129

    (70) terminal -> TERMINAL . BO states BC

    BO              shift and go to state 164



state 130

    (57) counts_list -> counts_list BO counts_group . BC

    BC              shift and go to state 165



state 131

    (59) counts_group -> ATOM . FLOAT
    (60) counts_group -> ATOM . FLOAT FLOAT

    FLOAT           shift and go to state 166



state 132

    (61) counts_group -> empty .

    BC              reduce using rule 61 (counts_group -> empty .)



state 133

    (87) components -> COMPONENTS . components_list
    (88) components_list -> . components_list BO component BC
    (89) components_list -> . empty
    (122) empty -> .

    BO              reduce using rule 122 (empty -> .)
    BC              reduce using rule 122 (empty -> .)


    components_list                shift and go to state 167
    empty                          shift and go to state 168

state 134

    (83) hybridchain_part -> terminal .

    BC              reduce using rule 83 (hybridchain_part -> terminal .)



state 135

    (81) hybridchain_parts -> hybridchain_parts BO hybridchain_part . BC

    BC              shift and go to state 169



state 136

    (85) hybridchain_part -> components .

    BC              reduce using rule 85 (hybridchain_part -> components .)



state 137

    (86) row -> ROW . ATOM

    ATOM            shift and go to state 170



state 138

    (84) hybridchain_part -> row .

    BC              reduce using rule 84 (hybridchain_part -> row .)



state 139

    (100) complements -> COMPLEMENT BO token_list BC .

    BC              reduce using rule 100 (complements -> COMPLEMENT BO token_list BC .)



state 140

    (101) token_list -> ATOM token_list .

    BC              reduce using rule 101 (token_list -> ATOM token_list .)



state 141

    (99) tokens -> TOKEN BO token_list BC .

    BC              reduce using rule 99 (tokens -> TOKEN BO token_list BC .)



state 142

    (103) extension -> EXTEND BO TO ATOM . BC from_list

    BC              shift and go to state 171



state 143

    (52) parameter_group -> BO parameter BC . parameter_group
    (52) parameter_group -> . BO parameter BC parameter_group
    (53) parameter_group -> . empty
    (122) empty -> .

    BO              shift and go to state 85
    BC              reduce using rule 122 (empty -> .)


    empty                          shift and go to state 89
    parameter_group                shift and go to state 172

state 144

    (49) parameter_list -> BO parameter_group BC parameter_list .

    BC              reduce using rule 49 (parameter_list -> BO parameter_group BC parameter_list .)



state 145

    (50) parameter_list -> BO parameter BC parameter_list .

    BC              reduce using rule 50 (parameter_list -> BO parameter BC parameter_list .)



state 146

    (35) rule_minlen -> MINLEN FLOAT .

    BC              reduce using rule 35 (rule_minlen -> MINLEN FLOAT .)



state 147

    (37) rule_annotation -> ANNOTATE annotation_components .
    (38) annotation_components -> annotation_components . BO annotation_component BC

    BC              reduce using rule 37 (rule_annotation -> ANNOTATE annotation_components .)
    BO              shift and go to state 173



state 148

    (39) annotation_components -> empty .

    BO              reduce using rule 39 (annotation_components -> empty .)
    BC              reduce using rule 39 (annotation_components -> empty .)



state 149

    (34) rule_to -> TO BO . states BC
    (118) states -> . STATE states
    (119) states -> . ATOM states
    (120) states -> . NULLNONTERMINAL states
    (121) states -> . empty
    (122) empty -> .

    STATE           shift and go to state 176
    ATOM            shift and go to state 177
    NULLNONTERMINAL shift and go to state 174
    BC              reduce using rule 122 (empty -> .)


    states                         shift and go to state 175
    empty                          shift and go to state 178

state 150

    (23) rule_components -> rule_components BO rule_component BC .

    BO              reduce using rule 23 (rule_components -> rule_components BO rule_component BC .)
    BC              reduce using rule 23 (rule_components -> rule_components BO rule_component BC .)



state 151

    (116) expression -> FLOAT .

    PLUS            reduce using rule 116 (expression -> FLOAT .)
    MINUS           reduce using rule 116 (expression -> FLOAT .)
    TIMES           reduce using rule 116 (expression -> FLOAT .)
    DIVIDE          reduce using rule 116 (expression -> FLOAT .)
    BC              reduce using rule 116 (expression -> FLOAT .)



state 152

    (115) expression -> BO . expression BC
    (111) expression -> . expression PLUS expression
    (112) expression -> . expression MINUS expression
    (113) expression -> . expression TIMES expression
    (114) expression -> . expression DIVIDE expression
    (115) expression -> . BO expression BC
    (116) expression -> . FLOAT
    (117) expression -> . ATOM

    BO              shift and go to state 152
    FLOAT           shift and go to state 151
    ATOM            shift and go to state 153


    expression                     shift and go to state 179

state 153

    (117) expression -> ATOM .

    PLUS            reduce using rule 117 (expression -> ATOM .)
    MINUS           reduce using rule 117 (expression -> ATOM .)
    TIMES           reduce using rule 117 (expression -> ATOM .)
    DIVIDE          reduce using rule 117 (expression -> ATOM .)
    BC              reduce using rule 117 (expression -> ATOM .)



state 154

    (110) rate -> RATE expression .
    (111) expression -> expression . PLUS expression
    (112) expression -> expression . MINUS expression
    (113) expression -> expression . TIMES expression
    (114) expression -> expression . DIVIDE expression

    BC              reduce using rule 110 (rate -> RATE expression .)
    PLUS            shift and go to state 182
    MINUS           shift and go to state 183
    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 180



state 155

    (33) rule_from -> FROM BO . states BC
    (118) states -> . STATE states
    (119) states -> . ATOM states
    (120) states -> . NULLNONTERMINAL states
    (121) states -> . empty
    (122) empty -> .

    STATE           shift and go to state 176
    ATOM            shift and go to state 177
    NULLNONTERMINAL shift and go to state 174
    BC              reduce using rule 122 (empty -> .)


    states                         shift and go to state 184
    empty                          shift and go to state 178

state 156

    (109) probability -> PROB expression .
    (111) expression -> expression . PLUS expression
    (112) expression -> expression . MINUS expression
    (113) expression -> expression . TIMES expression
    (114) expression -> expression . DIVIDE expression

    BC              reduce using rule 109 (probability -> PROB expression .)
    PLUS            shift and go to state 182
    MINUS           shift and go to state 183
    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 180



state 157

    (72) update_policy -> UPDATEPOLICY PARAMETRIC .

    BC              reduce using rule 72 (update_policy -> UPDATEPOLICY PARAMETRIC .)



state 158

    (71) update_policy -> UPDATEPOLICY ATOM .

    BC              reduce using rule 71 (update_policy -> UPDATEPOLICY ATOM .)



state 159

    (75) hidden_class -> HIDDENCLASS hidden_class_options_list .
    (76) hidden_class_options_list -> hidden_class_options_list . BO hidden_class_options BC

    BC              reduce using rule 75 (hidden_class -> HIDDENCLASS hidden_class_options_list .)
    BO              shift and go to state 185



state 160

    (77) hidden_class_options_list -> empty .

    BO              reduce using rule 77 (hidden_class_options_list -> empty .)
    BC              reduce using rule 77 (hidden_class_options_list -> empty .)



state 161

    (74) transition -> MUTATE BO . FROM BO states BC BC BO TO BO states BC BC BO rate BC

    FROM            shift and go to state 186



state 162

    (73) initial_state -> INITIAL BO . ATOM BO states BC BC BO probability BC

    ATOM            shift and go to state 187



state 163

    (63) chain_components -> chain_components BO chain_component BC .

    BO              reduce using rule 63 (chain_components -> chain_components BO chain_component BC .)
    BC              reduce using rule 63 (chain_components -> chain_components BO chain_component BC .)



state 164

    (70) terminal -> TERMINAL BO . states BC
    (118) states -> . STATE states
    (119) states -> . ATOM states
    (120) states -> . NULLNONTERMINAL states
    (121) states -> . empty
    (122) empty -> .

    STATE           shift and go to state 176
    ATOM            shift and go to state 177
    NULLNONTERMINAL shift and go to state 174
    BC              reduce using rule 122 (empty -> .)


    states                         shift and go to state 188
    empty                          shift and go to state 178

state 165

    (57) counts_list -> counts_list BO counts_group BC .

    BO              reduce using rule 57 (counts_list -> counts_list BO counts_group BC .)
    BC              reduce using rule 57 (counts_list -> counts_list BO counts_group BC .)



state 166

    (59) counts_group -> ATOM FLOAT .
    (60) counts_group -> ATOM FLOAT . FLOAT

    BC              reduce using rule 59 (counts_group -> ATOM FLOAT .)
    FLOAT           shift and go to state 189



state 167

    (87) components -> COMPONENTS components_list .
    (88) components_list -> components_list . BO component BC

    BC              reduce using rule 87 (components -> COMPONENTS components_list .)
    BO              shift and go to state 190



state 168

    (89) components_list -> empty .

    BO              reduce using rule 89 (components_list -> empty .)
    BC              reduce using rule 89 (components_list -> empty .)



state 169

    (81) hybridchain_parts -> hybridchain_parts BO hybridchain_part BC .

    BO              reduce using rule 81 (hybridchain_parts -> hybridchain_parts BO hybridchain_part BC .)
    BC              reduce using rule 81 (hybridchain_parts -> hybridchain_parts BO hybridchain_part BC .)



state 170

    (86) row -> ROW ATOM .

    BC              reduce using rule 86 (row -> ROW ATOM .)



state 171

    (103) extension -> EXTEND BO TO ATOM BC . from_list
    (104) from_list -> . BO FROM ATOM BC from_list
    (105) from_list -> . empty
    (122) empty -> .

    BO              shift and go to state 192
    BC              reduce using rule 122 (empty -> .)


    from_list                      shift and go to state 191
    empty                          shift and go to state 193

state 172

    (52) parameter_group -> BO parameter BC parameter_group .

    BC              reduce using rule 52 (parameter_group -> BO parameter BC parameter_group .)



state 173

    (38) annotation_components -> annotation_components BO . annotation_component BC
    (40) annotation_component -> . ATOM ATOM
    (41) annotation_component -> . ROW ATOM
    (42) annotation_component -> . LABEL ATOM

    ATOM            shift and go to state 196
    ROW             shift and go to state 197
    LABEL           shift and go to state 195


    annotation_component           shift and go to state 194

state 174

    (120) states -> NULLNONTERMINAL . states
    (118) states -> . STATE states
    (119) states -> . ATOM states
    (120) states -> . NULLNONTERMINAL states
    (121) states -> . empty
    (122) empty -> .

    STATE           shift and go to state 176
    ATOM            shift and go to state 177
    NULLNONTERMINAL shift and go to state 174
    BC              reduce using rule 122 (empty -> .)


    states                         shift and go to state 198
    empty                          shift and go to state 178

state 175

    (34) rule_to -> TO BO states . BC

    BC              shift and go to state 199



state 176

    (118) states -> STATE . states
    (118) states -> . STATE states
    (119) states -> . ATOM states
    (120) states -> . NULLNONTERMINAL states
    (121) states -> . empty
    (122) empty -> .

    STATE           shift and go to state 176
    ATOM            shift and go to state 177
    NULLNONTERMINAL shift and go to state 174
    BC              reduce using rule 122 (empty -> .)


    states                         shift and go to state 200
    empty                          shift and go to state 178

state 177

    (119) states -> ATOM . states
    (118) states -> . STATE states
    (119) states -> . ATOM states
    (120) states -> . NULLNONTERMINAL states
    (121) states -> . empty
    (122) empty -> .

    STATE           shift and go to state 176
    ATOM            shift and go to state 177
    NULLNONTERMINAL shift and go to state 174
    BC              reduce using rule 122 (empty -> .)


    states                         shift and go to state 201
    empty                          shift and go to state 178

state 178

    (121) states -> empty .

    BC              reduce using rule 121 (states -> empty .)



state 179

    (115) expression -> BO expression . BC
    (111) expression -> expression . PLUS expression
    (112) expression -> expression . MINUS expression
    (113) expression -> expression . TIMES expression
    (114) expression -> expression . DIVIDE expression

    BC              shift and go to state 202
    PLUS            shift and go to state 182
    MINUS           shift and go to state 183
    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 180



state 180

    (114) expression -> expression DIVIDE . expression
    (111) expression -> . expression PLUS expression
    (112) expression -> . expression MINUS expression
    (113) expression -> . expression TIMES expression
    (114) expression -> . expression DIVIDE expression
    (115) expression -> . BO expression BC
    (116) expression -> . FLOAT
    (117) expression -> . ATOM

    BO              shift and go to state 152
    FLOAT           shift and go to state 151
    ATOM            shift and go to state 153


    expression                     shift and go to state 203

state 181

    (113) expression -> expression TIMES . expression
    (111) expression -> . expression PLUS expression
    (112) expression -> . expression MINUS expression
    (113) expression -> . expression TIMES expression
    (114) expression -> . expression DIVIDE expression
    (115) expression -> . BO expression BC
    (116) expression -> . FLOAT
    (117) expression -> . ATOM

    BO              shift and go to state 152
    FLOAT           shift and go to state 151
    ATOM            shift and go to state 153


    expression                     shift and go to state 204

state 182

    (111) expression -> expression PLUS . expression
    (111) expression -> . expression PLUS expression
    (112) expression -> . expression MINUS expression
    (113) expression -> . expression TIMES expression
    (114) expression -> . expression DIVIDE expression
    (115) expression -> . BO expression BC
    (116) expression -> . FLOAT
    (117) expression -> . ATOM

    BO              shift and go to state 152
    FLOAT           shift and go to state 151
    ATOM            shift and go to state 153


    expression                     shift and go to state 205

state 183

    (112) expression -> expression MINUS . expression
    (111) expression -> . expression PLUS expression
    (112) expression -> . expression MINUS expression
    (113) expression -> . expression TIMES expression
    (114) expression -> . expression DIVIDE expression
    (115) expression -> . BO expression BC
    (116) expression -> . FLOAT
    (117) expression -> . ATOM

    BO              shift and go to state 152
    FLOAT           shift and go to state 151
    ATOM            shift and go to state 153


    expression                     shift and go to state 206

state 184

    (33) rule_from -> FROM BO states . BC

    BC              shift and go to state 207



state 185

    (76) hidden_class_options_list -> hidden_class_options_list BO . hidden_class_options BC
    (78) hidden_class_options -> . ROW ATOM
    (79) hidden_class_options -> . LABEL BO states BC

    ROW             shift and go to state 210
    LABEL           shift and go to state 208


    hidden_class_options           shift and go to state 209

state 186

    (74) transition -> MUTATE BO FROM . BO states BC BC BO TO BO states BC BC BO rate BC

    BO              shift and go to state 211



state 187

    (73) initial_state -> INITIAL BO ATOM . BO states BC BC BO probability BC

    BO              shift and go to state 212



state 188

    (70) terminal -> TERMINAL BO states . BC

    BC              shift and go to state 213



state 189

    (60) counts_group -> ATOM FLOAT FLOAT .

    BC              reduce using rule 60 (counts_group -> ATOM FLOAT FLOAT .)



state 190

    (88) components_list -> components_list BO . component BC
    (90) component -> . BO LABEL ATOM BC BO TERMINAL BO ATOM BC BC

    BO              shift and go to state 214


    component                      shift and go to state 215

state 191

    (103) extension -> EXTEND BO TO ATOM BC from_list .

    BC              reduce using rule 103 (extension -> EXTEND BO TO ATOM BC from_list .)



state 192

    (104) from_list -> BO . FROM ATOM BC from_list

    FROM            shift and go to state 216



state 193

    (105) from_list -> empty .

    BC              reduce using rule 105 (from_list -> empty .)



state 194

    (38) annotation_components -> annotation_components BO annotation_component . BC

    BC              shift and go to state 217



state 195

    (42) annotation_component -> LABEL . ATOM

    ATOM            shift and go to state 218



state 196

    (40) annotation_component -> ATOM . ATOM

    ATOM            shift and go to state 219



state 197

    (41) annotation_component -> ROW . ATOM

    ATOM            shift and go to state 220



state 198

    (120) states -> NULLNONTERMINAL states .

    BC              reduce using rule 120 (states -> NULLNONTERMINAL states .)



state 199

    (34) rule_to -> TO BO states BC .

    BC              reduce using rule 34 (rule_to -> TO BO states BC .)



state 200

    (118) states -> STATE states .

    BC              reduce using rule 118 (states -> STATE states .)



state 201

    (119) states -> ATOM states .

    BC              reduce using rule 119 (states -> ATOM states .)



state 202

    (115) expression -> BO expression BC .

    PLUS            reduce using rule 115 (expression -> BO expression BC .)
    MINUS           reduce using rule 115 (expression -> BO expression BC .)
    TIMES           reduce using rule 115 (expression -> BO expression BC .)
    DIVIDE          reduce using rule 115 (expression -> BO expression BC .)
    BC              reduce using rule 115 (expression -> BO expression BC .)



state 203

    (114) expression -> expression DIVIDE expression .
    (111) expression -> expression . PLUS expression
    (112) expression -> expression . MINUS expression
    (113) expression -> expression . TIMES expression
    (114) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift.
  ! shift/reduce conflict for MINUS resolved as shift.
  ! shift/reduce conflict for TIMES resolved as shift.
  ! shift/reduce conflict for DIVIDE resolved as shift.
    BC              reduce using rule 114 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 182
    MINUS           shift and go to state 183
    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 180

  ! PLUS            [ reduce using rule 114 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 114 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 114 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 114 (expression -> expression DIVIDE expression .) ]


state 204

    (113) expression -> expression TIMES expression .
    (111) expression -> expression . PLUS expression
    (112) expression -> expression . MINUS expression
    (113) expression -> expression . TIMES expression
    (114) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift.
  ! shift/reduce conflict for MINUS resolved as shift.
  ! shift/reduce conflict for TIMES resolved as shift.
  ! shift/reduce conflict for DIVIDE resolved as shift.
    BC              reduce using rule 113 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 182
    MINUS           shift and go to state 183
    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 180

  ! PLUS            [ reduce using rule 113 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 113 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 113 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 113 (expression -> expression TIMES expression .) ]


state 205

    (111) expression -> expression PLUS expression .
    (111) expression -> expression . PLUS expression
    (112) expression -> expression . MINUS expression
    (113) expression -> expression . TIMES expression
    (114) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift.
  ! shift/reduce conflict for MINUS resolved as shift.
  ! shift/reduce conflict for TIMES resolved as shift.
  ! shift/reduce conflict for DIVIDE resolved as shift.
    BC              reduce using rule 111 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 182
    MINUS           shift and go to state 183
    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 180

  ! PLUS            [ reduce using rule 111 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 111 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 111 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 111 (expression -> expression PLUS expression .) ]


state 206

    (112) expression -> expression MINUS expression .
    (111) expression -> expression . PLUS expression
    (112) expression -> expression . MINUS expression
    (113) expression -> expression . TIMES expression
    (114) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift.
  ! shift/reduce conflict for MINUS resolved as shift.
  ! shift/reduce conflict for TIMES resolved as shift.
  ! shift/reduce conflict for DIVIDE resolved as shift.
    BC              reduce using rule 112 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 182
    MINUS           shift and go to state 183
    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 180

  ! PLUS            [ reduce using rule 112 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 112 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 112 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 112 (expression -> expression MINUS expression .) ]


state 207

    (33) rule_from -> FROM BO states BC .

    BC              reduce using rule 33 (rule_from -> FROM BO states BC .)



state 208

    (79) hidden_class_options -> LABEL . BO states BC

    BO              shift and go to state 221



state 209

    (76) hidden_class_options_list -> hidden_class_options_list BO hidden_class_options . BC

    BC              shift and go to state 222



state 210

    (78) hidden_class_options -> ROW . ATOM

    ATOM            shift and go to state 223



state 211

    (74) transition -> MUTATE BO FROM BO . states BC BC BO TO BO states BC BC BO rate BC
    (118) states -> . STATE states
    (119) states -> . ATOM states
    (120) states -> . NULLNONTERMINAL states
    (121) states -> . empty
    (122) empty -> .

    STATE           shift and go to state 176
    ATOM            shift and go to state 177
    NULLNONTERMINAL shift and go to state 174
    BC              reduce using rule 122 (empty -> .)


    states                         shift and go to state 224
    empty                          shift and go to state 178

state 212

    (73) initial_state -> INITIAL BO ATOM BO . states BC BC BO probability BC
    (118) states -> . STATE states
    (119) states -> . ATOM states
    (120) states -> . NULLNONTERMINAL states
    (121) states -> . empty
    (122) empty -> .

    STATE           shift and go to state 176
    ATOM            shift and go to state 177
    NULLNONTERMINAL shift and go to state 174
    BC              reduce using rule 122 (empty -> .)


    states                         shift and go to state 225
    empty                          shift and go to state 178

state 213

    (70) terminal -> TERMINAL BO states BC .

    BC              reduce using rule 70 (terminal -> TERMINAL BO states BC .)



state 214

    (90) component -> BO . LABEL ATOM BC BO TERMINAL BO ATOM BC BC

    LABEL           shift and go to state 226



state 215

    (88) components_list -> components_list BO component . BC

    BC              shift and go to state 227



state 216

    (104) from_list -> BO FROM . ATOM BC from_list

    ATOM            shift and go to state 228



state 217

    (38) annotation_components -> annotation_components BO annotation_component BC .

    BO              reduce using rule 38 (annotation_components -> annotation_components BO annotation_component BC .)
    BC              reduce using rule 38 (annotation_components -> annotation_components BO annotation_component BC .)



state 218

    (42) annotation_component -> LABEL ATOM .

    BC              reduce using rule 42 (annotation_component -> LABEL ATOM .)



state 219

    (40) annotation_component -> ATOM ATOM .

    BC              reduce using rule 40 (annotation_component -> ATOM ATOM .)



state 220

    (41) annotation_component -> ROW ATOM .

    BC              reduce using rule 41 (annotation_component -> ROW ATOM .)



state 221

    (79) hidden_class_options -> LABEL BO . states BC
    (118) states -> . STATE states
    (119) states -> . ATOM states
    (120) states -> . NULLNONTERMINAL states
    (121) states -> . empty
    (122) empty -> .

    STATE           shift and go to state 176
    ATOM            shift and go to state 177
    NULLNONTERMINAL shift and go to state 174
    BC              reduce using rule 122 (empty -> .)


    states                         shift and go to state 229
    empty                          shift and go to state 178

state 222

    (76) hidden_class_options_list -> hidden_class_options_list BO hidden_class_options BC .

    BO              reduce using rule 76 (hidden_class_options_list -> hidden_class_options_list BO hidden_class_options BC .)
    BC              reduce using rule 76 (hidden_class_options_list -> hidden_class_options_list BO hidden_class_options BC .)



state 223

    (78) hidden_class_options -> ROW ATOM .

    BC              reduce using rule 78 (hidden_class_options -> ROW ATOM .)



state 224

    (74) transition -> MUTATE BO FROM BO states . BC BC BO TO BO states BC BC BO rate BC

    BC              shift and go to state 230



state 225

    (73) initial_state -> INITIAL BO ATOM BO states . BC BC BO probability BC

    BC              shift and go to state 231



state 226

    (90) component -> BO LABEL . ATOM BC BO TERMINAL BO ATOM BC BC

    ATOM            shift and go to state 232



state 227

    (88) components_list -> components_list BO component BC .

    BO              reduce using rule 88 (components_list -> components_list BO component BC .)
    BC              reduce using rule 88 (components_list -> components_list BO component BC .)



state 228

    (104) from_list -> BO FROM ATOM . BC from_list

    BC              shift and go to state 233



state 229

    (79) hidden_class_options -> LABEL BO states . BC

    BC              shift and go to state 234



state 230

    (74) transition -> MUTATE BO FROM BO states BC . BC BO TO BO states BC BC BO rate BC

    BC              shift and go to state 235



state 231

    (73) initial_state -> INITIAL BO ATOM BO states BC . BC BO probability BC

    BC              shift and go to state 236



state 232

    (90) component -> BO LABEL ATOM . BC BO TERMINAL BO ATOM BC BC

    BC              shift and go to state 237



state 233

    (104) from_list -> BO FROM ATOM BC . from_list
    (104) from_list -> . BO FROM ATOM BC from_list
    (105) from_list -> . empty
    (122) empty -> .

    BO              shift and go to state 192
    BC              reduce using rule 122 (empty -> .)


    from_list                      shift and go to state 238
    empty                          shift and go to state 193

state 234

    (79) hidden_class_options -> LABEL BO states BC .

    BC              reduce using rule 79 (hidden_class_options -> LABEL BO states BC .)



state 235

    (74) transition -> MUTATE BO FROM BO states BC BC . BO TO BO states BC BC BO rate BC

    BO              shift and go to state 239



state 236

    (73) initial_state -> INITIAL BO ATOM BO states BC BC . BO probability BC

    BO              shift and go to state 240



state 237

    (90) component -> BO LABEL ATOM BC . BO TERMINAL BO ATOM BC BC

    BO              shift and go to state 241



state 238

    (104) from_list -> BO FROM ATOM BC from_list .

    BC              reduce using rule 104 (from_list -> BO FROM ATOM BC from_list .)



state 239

    (74) transition -> MUTATE BO FROM BO states BC BC BO . TO BO states BC BC BO rate BC

    TO              shift and go to state 242



state 240

    (73) initial_state -> INITIAL BO ATOM BO states BC BC BO . probability BC
    (109) probability -> . PROB expression

    PROB            shift and go to state 118


    probability                    shift and go to state 243

state 241

    (90) component -> BO LABEL ATOM BC BO . TERMINAL BO ATOM BC BC

    TERMINAL        shift and go to state 244



state 242

    (74) transition -> MUTATE BO FROM BO states BC BC BO TO . BO states BC BC BO rate BC

    BO              shift and go to state 245



state 243

    (73) initial_state -> INITIAL BO ATOM BO states BC BC BO probability . BC

    BC              shift and go to state 246



state 244

    (90) component -> BO LABEL ATOM BC BO TERMINAL . BO ATOM BC BC

    BO              shift and go to state 247



state 245

    (74) transition -> MUTATE BO FROM BO states BC BC BO TO BO . states BC BC BO rate BC
    (118) states -> . STATE states
    (119) states -> . ATOM states
    (120) states -> . NULLNONTERMINAL states
    (121) states -> . empty
    (122) empty -> .

    STATE           shift and go to state 176
    ATOM            shift and go to state 177
    NULLNONTERMINAL shift and go to state 174
    BC              reduce using rule 122 (empty -> .)


    states                         shift and go to state 248
    empty                          shift and go to state 178

state 246

    (73) initial_state -> INITIAL BO ATOM BO states BC BC BO probability BC .

    BC              reduce using rule 73 (initial_state -> INITIAL BO ATOM BO states BC BC BO probability BC .)



state 247

    (90) component -> BO LABEL ATOM BC BO TERMINAL BO . ATOM BC BC

    ATOM            shift and go to state 249



state 248

    (74) transition -> MUTATE BO FROM BO states BC BC BO TO BO states . BC BC BO rate BC

    BC              shift and go to state 250



state 249

    (90) component -> BO LABEL ATOM BC BO TERMINAL BO ATOM . BC BC

    BC              shift and go to state 251



state 250

    (74) transition -> MUTATE BO FROM BO states BC BC BO TO BO states BC . BC BO rate BC

    BC              shift and go to state 252



state 251

    (90) component -> BO LABEL ATOM BC BO TERMINAL BO ATOM BC . BC

    BC              shift and go to state 253



state 252

    (74) transition -> MUTATE BO FROM BO states BC BC BO TO BO states BC BC . BO rate BC

    BO              shift and go to state 254



state 253

    (90) component -> BO LABEL ATOM BC BO TERMINAL BO ATOM BC BC .

    BC              reduce using rule 90 (component -> BO LABEL ATOM BC BO TERMINAL BO ATOM BC BC .)



state 254

    (74) transition -> MUTATE BO FROM BO states BC BC BO TO BO states BC BC BO . rate BC
    (110) rate -> . RATE expression

    RATE            shift and go to state 114


    rate                           shift and go to state 255

state 255

    (74) transition -> MUTATE BO FROM BO states BC BC BO TO BO states BC BC BO rate . BC

    BC              shift and go to state 256



state 256

    (74) transition -> MUTATE BO FROM BO states BC BC BO TO BO states BC BC BO rate BC .

    BC              reduce using rule 74 (transition -> MUTATE BO FROM BO states BC BC BO TO BO states BC BC BO rate BC .)


