;; Grammar CodeML_sn_f4x3
;;
(grammar
 (name CodeML_sn_f4x3)
 (parametric)
 (update-rates 1)
 (update-rules 1)

 ;; Nonterminal declarations and modifiers

 (nonterminal (name START))
 (nonterminal (name EMIT))

 ;; Transformation rules for grammar symbols

 ;; Nonterminal START
 ;;
 (transform (from (START)) (to ()) (prob ~ext))
 (transform (from (START)) (to (EMIT)) (prob ext))

 ;; Nonterminal EMIT
 ;;
 (transform (from (EMIT)) (to (COD0 COD1 COD2 EMIT*)) (gaps-ok))
 (transform (from (EMIT*)) (to ()) (prob ~ext))
 (transform (from (EMIT*)) (to (EMIT)) (prob ext))

 ;; Probability and rate parameters

 (pgroup
  ((ext 0.5)
   (~ext 0.5))
  ((pa0 0.25)
   (pc0 0.25)
   (pg0 0.25)
   (pt0 0.25))
  ((pa1 0.25)
   (pc1 0.25)
   (pg1 0.25)
   (pt1 0.25))
  ((pa2 0.25)
   (pc2 0.25)
   (pg2 0.25)
   (pt2 0.25))
  ((k 0.5)
   (~k 0.5))
  )  ;; end pgroup

 (rate
  (s 1)
  (n 1)
  )  ;; end rate

 ;; Markov chain substitution models

 (chain
  (update-policy parametric)
  (terminal (COD0 COD1 COD2))

  ;; initial probability distribution
  (initial (state (a a a)) (prob pa0 * pa1 * pa2))
  (initial (state (c a a)) (prob pc0 * pa1 * pa2))
  (initial (state (g a a)) (prob pg0 * pa1 * pa2))
  (initial (state (a c a)) (prob pa0 * pc1 * pa2))
  (initial (state (c c a)) (prob pc0 * pc1 * pa2))
  (initial (state (g c a)) (prob pg0 * pc1 * pa2))
  (initial (state (t c a)) (prob pt0 * pc1 * pa2))
  (initial (state (a g a)) (prob pa0 * pg1 * pa2))
  (initial (state (c g a)) (prob pc0 * pg1 * pa2))
  (initial (state (g g a)) (prob pg0 * pg1 * pa2))
  (initial (state (a t a)) (prob pa0 * pt1 * pa2))
  (initial (state (c t a)) (prob pc0 * pt1 * pa2))
  (initial (state (g t a)) (prob pg0 * pt1 * pa2))
  (initial (state (t t a)) (prob pt0 * pt1 * pa2))
  (initial (state (a a c)) (prob pa0 * pa1 * pc2))
  (initial (state (c a c)) (prob pc0 * pa1 * pc2))
  (initial (state (g a c)) (prob pg0 * pa1 * pc2))
  (initial (state (t a c)) (prob pt0 * pa1 * pc2))
  (initial (state (a c c)) (prob pa0 * pc1 * pc2))
  (initial (state (c c c)) (prob pc0 * pc1 * pc2))
  (initial (state (g c c)) (prob pg0 * pc1 * pc2))
  (initial (state (t c c)) (prob pt0 * pc1 * pc2))
  (initial (state (a g c)) (prob pa0 * pg1 * pc2))
  (initial (state (c g c)) (prob pc0 * pg1 * pc2))
  (initial (state (g g c)) (prob pg0 * pg1 * pc2))
  (initial (state (t g c)) (prob pt0 * pg1 * pc2))
  (initial (state (a t c)) (prob pa0 * pt1 * pc2))
  (initial (state (c t c)) (prob pc0 * pt1 * pc2))
  (initial (state (g t c)) (prob pg0 * pt1 * pc2))
  (initial (state (t t c)) (prob pt0 * pt1 * pc2))
  (initial (state (a a g)) (prob pa0 * pa1 * pg2))
  (initial (state (c a g)) (prob pc0 * pa1 * pg2))
  (initial (state (g a g)) (prob pg0 * pa1 * pg2))
  (initial (state (a c g)) (prob pa0 * pc1 * pg2))
  (initial (state (c c g)) (prob pc0 * pc1 * pg2))
  (initial (state (g c g)) (prob pg0 * pc1 * pg2))
  (initial (state (t c g)) (prob pt0 * pc1 * pg2))
  (initial (state (a g g)) (prob pa0 * pg1 * pg2))
  (initial (state (c g g)) (prob pc0 * pg1 * pg2))
  (initial (state (g g g)) (prob pg0 * pg1 * pg2))
  (initial (state (t g g)) (prob pt0 * pg1 * pg2))
  (initial (state (a t g)) (prob pa0 * pt1 * pg2))
  (initial (state (c t g)) (prob pc0 * pt1 * pg2))
  (initial (state (g t g)) (prob pg0 * pt1 * pg2))
  (initial (state (t t g)) (prob pt0 * pt1 * pg2))
  (initial (state (a a t)) (prob pa0 * pa1 * pt2))
  (initial (state (c a t)) (prob pc0 * pa1 * pt2))
  (initial (state (g a t)) (prob pg0 * pa1 * pt2))
  (initial (state (t a t)) (prob pt0 * pa1 * pt2))
  (initial (state (a c t)) (prob pa0 * pc1 * pt2))
  (initial (state (c c t)) (prob pc0 * pc1 * pt2))
  (initial (state (g c t)) (prob pg0 * pc1 * pt2))
  (initial (state (t c t)) (prob pt0 * pc1 * pt2))
  (initial (state (a g t)) (prob pa0 * pg1 * pt2))
  (initial (state (c g t)) (prob pc0 * pg1 * pt2))
  (initial (state (g g t)) (prob pg0 * pg1 * pt2))
  (initial (state (t g t)) (prob pt0 * pg1 * pt2))
  (initial (state (a t t)) (prob pa0 * pt1 * pt2))
  (initial (state (c t t)) (prob pc0 * pt1 * pt2))
  (initial (state (g t t)) (prob pg0 * pt1 * pt2))
  (initial (state (t t t)) (prob pt0 * pt1 * pt2))

  ;; mutation rates
  (mutate (from (a a a)) (to (a a a)) (rate ~k * (# n) * ((# pc0) * (# pa1) * (# pa2) + (# pa0) * (# pc1) * (# pa2) + (# pa0) * (# pt1) * (# pa2) + (# pa0) * (# pa1) * (# pc2) + (# pa0) * (# pa1) * (# pt2))))
  (mutate (from (a a a)) (to (c a a)) (rate n * pc0 * pa1 * pa2 * k))
  (mutate (from (a a a)) (to (g a a)) (rate n * pg0 * pa1 * pa2))
  (mutate (from (a a a)) (to (a c a)) (rate n * pa0 * pc1 * pa2 * k))
  (mutate (from (a a a)) (to (a g a)) (rate n * pa0 * pg1 * pa2))
  (mutate (from (a a a)) (to (a t a)) (rate n * pa0 * pt1 * pa2 * k))
  (mutate (from (a a a)) (to (a a c)) (rate n * pa0 * pa1 * pc2 * k))
  (mutate (from (a a a)) (to (a a g)) (rate s * pa0 * pa1 * pg2))
  (mutate (from (a a a)) (to (a a t)) (rate n * pa0 * pa1 * pt2 * k))
  (mutate (from (c a a)) (to (a a a)) (rate n * pa0 * pa1 * pa2 * k))
  (mutate (from (c a a)) (to (c a a)) (rate ~k * (# n) * ((# pa0) * (# pa1) * (# pa2) + (# pg0) * (# pa1) * (# pa2) + (# pc0) * (# pc1) * (# pa2) + (# pc0) * (# pt1) * (# pa2) + (# pc0) * (# pa1) * (# pc2) + (# pc0) * (# pa1) * (# pt2))))
  (mutate (from (c a a)) (to (g a a)) (rate n * pg0 * pa1 * pa2 * k))
  (mutate (from (c a a)) (to (c c a)) (rate n * pc0 * pc1 * pa2 * k))
  (mutate (from (c a a)) (to (c g a)) (rate n * pc0 * pg1 * pa2))
  (mutate (from (c a a)) (to (c t a)) (rate n * pc0 * pt1 * pa2 * k))
  (mutate (from (c a a)) (to (c a c)) (rate n * pc0 * pa1 * pc2 * k))
  (mutate (from (c a a)) (to (c a g)) (rate s * pc0 * pa1 * pg2))
  (mutate (from (c a a)) (to (c a t)) (rate n * pc0 * pa1 * pt2 * k))
  (mutate (from (g a a)) (to (a a a)) (rate n * pa0 * pa1 * pa2))
  (mutate (from (g a a)) (to (c a a)) (rate n * pc0 * pa1 * pa2 * k))
  (mutate (from (g a a)) (to (g a a)) (rate ~k * (# n) * ((# pc0) * (# pa1) * (# pa2) + (# pg0) * (# pc1) * (# pa2) + (# pg0) * (# pt1) * (# pa2) + (# pg0) * (# pa1) * (# pc2) + (# pg0) * (# pa1) * (# pt2))))
  (mutate (from (g a a)) (to (g c a)) (rate n * pg0 * pc1 * pa2 * k))
  (mutate (from (g a a)) (to (g g a)) (rate n * pg0 * pg1 * pa2))
  (mutate (from (g a a)) (to (g t a)) (rate n * pg0 * pt1 * pa2 * k))
  (mutate (from (g a a)) (to (g a c)) (rate n * pg0 * pa1 * pc2 * k))
  (mutate (from (g a a)) (to (g a g)) (rate s * pg0 * pa1 * pg2))
  (mutate (from (g a a)) (to (g a t)) (rate n * pg0 * pa1 * pt2 * k))
  (mutate (from (a c a)) (to (a a a)) (rate n * pa0 * pa1 * pa2 * k))
  (mutate (from (a c a)) (to (a c a)) (rate ~k * ((# s) * ((# pa0) * (# pc1) * (# pc2) + (# pa0) * (# pc1) * (# pt2)) + (# n) * ((# pc0) * (# pc1) * (# pa2) + (# pt0) * (# pc1) * (# pa2) + (# pa0) * (# pa1) * (# pa2) + (# pa0) * (# pg1) * (# pa2)))))
  (mutate (from (a c a)) (to (c c a)) (rate n * pc0 * pc1 * pa2 * k))
  (mutate (from (a c a)) (to (g c a)) (rate n * pg0 * pc1 * pa2))
  (mutate (from (a c a)) (to (t c a)) (rate n * pt0 * pc1 * pa2 * k))
  (mutate (from (a c a)) (to (a g a)) (rate n * pa0 * pg1 * pa2 * k))
  (mutate (from (a c a)) (to (a t a)) (rate n * pa0 * pt1 * pa2))
  (mutate (from (a c a)) (to (a c c)) (rate s * pa0 * pc1 * pc2 * k))
  (mutate (from (a c a)) (to (a c g)) (rate s * pa0 * pc1 * pg2))
  (mutate (from (a c a)) (to (a c t)) (rate s * pa0 * pc1 * pt2 * k))
  (mutate (from (c c a)) (to (c a a)) (rate n * pc0 * pa1 * pa2 * k))
  (mutate (from (c c a)) (to (a c a)) (rate n * pa0 * pc1 * pa2 * k))
  (mutate (from (c c a)) (to (c c a)) (rate ~k * ((# s) * ((# pc0) * (# pc1) * (# pc2) + (# pc0) * (# pc1) * (# pt2)) + (# n) * ((# pa0) * (# pc1) * (# pa2) + (# pg0) * (# pc1) * (# pa2) + (# pc0) * (# pa1) * (# pa2) + (# pc0) * (# pg1) * (# pa2)))))
  (mutate (from (c c a)) (to (g c a)) (rate n * pg0 * pc1 * pa2 * k))
  (mutate (from (c c a)) (to (t c a)) (rate n * pt0 * pc1 * pa2))
  (mutate (from (c c a)) (to (c g a)) (rate n * pc0 * pg1 * pa2 * k))
  (mutate (from (c c a)) (to (c t a)) (rate n * pc0 * pt1 * pa2))
  (mutate (from (c c a)) (to (c c c)) (rate s * pc0 * pc1 * pc2 * k))
  (mutate (from (c c a)) (to (c c g)) (rate s * pc0 * pc1 * pg2))
  (mutate (from (c c a)) (to (c c t)) (rate s * pc0 * pc1 * pt2 * k))
  (mutate (from (g c a)) (to (g a a)) (rate n * pg0 * pa1 * pa2 * k))
  (mutate (from (g c a)) (to (a c a)) (rate n * pa0 * pc1 * pa2))
  (mutate (from (g c a)) (to (c c a)) (rate n * pc0 * pc1 * pa2 * k))
  (mutate (from (g c a)) (to (g c a)) (rate ~k * ((# s) * ((# pg0) * (# pc1) * (# pc2) + (# pg0) * (# pc1) * (# pt2)) + (# n) * ((# pc0) * (# pc1) * (# pa2) + (# pt0) * (# pc1) * (# pa2) + (# pg0) * (# pa1) * (# pa2) + (# pg0) * (# pg1) * (# pa2)))))
  (mutate (from (g c a)) (to (t c a)) (rate n * pt0 * pc1 * pa2 * k))
  (mutate (from (g c a)) (to (g g a)) (rate n * pg0 * pg1 * pa2 * k))
  (mutate (from (g c a)) (to (g t a)) (rate n * pg0 * pt1 * pa2))
  (mutate (from (g c a)) (to (g c c)) (rate s * pg0 * pc1 * pc2 * k))
  (mutate (from (g c a)) (to (g c g)) (rate s * pg0 * pc1 * pg2))
  (mutate (from (g c a)) (to (g c t)) (rate s * pg0 * pc1 * pt2 * k))
  (mutate (from (t c a)) (to (a c a)) (rate n * pa0 * pc1 * pa2 * k))
  (mutate (from (t c a)) (to (c c a)) (rate n * pc0 * pc1 * pa2))
  (mutate (from (t c a)) (to (g c a)) (rate n * pg0 * pc1 * pa2 * k))
  (mutate (from (t c a)) (to (t c a)) (rate ~k * ((# s) * ((# pt0) * (# pc1) * (# pc2) + (# pt0) * (# pc1) * (# pt2)) + (# n) * ((# pa0) * (# pc1) * (# pa2) + (# pg0) * (# pc1) * (# pa2)))))
  (mutate (from (t c a)) (to (t t a)) (rate n * pt0 * pt1 * pa2))
  (mutate (from (t c a)) (to (t c c)) (rate s * pt0 * pc1 * pc2 * k))
  (mutate (from (t c a)) (to (t c g)) (rate s * pt0 * pc1 * pg2))
  (mutate (from (t c a)) (to (t c t)) (rate s * pt0 * pc1 * pt2 * k))
  (mutate (from (a g a)) (to (a a a)) (rate n * pa0 * pa1 * pa2))
  (mutate (from (a g a)) (to (a c a)) (rate n * pa0 * pc1 * pa2 * k))
  (mutate (from (a g a)) (to (a g a)) (rate ~k * ((# s) * (# pc0) * (# pg1) * (# pa2) + (# n) * ((# pa0) * (# pc1) * (# pa2) + (# pa0) * (# pt1) * (# pa2) + (# pa0) * (# pg1) * (# pc2) + (# pa0) * (# pg1) * (# pt2)))))
  (mutate (from (a g a)) (to (c g a)) (rate s * pc0 * pg1 * pa2 * k))
  (mutate (from (a g a)) (to (g g a)) (rate n * pg0 * pg1 * pa2))
  (mutate (from (a g a)) (to (a t a)) (rate n * pa0 * pt1 * pa2 * k))
  (mutate (from (a g a)) (to (a g c)) (rate n * pa0 * pg1 * pc2 * k))
  (mutate (from (a g a)) (to (a g g)) (rate s * pa0 * pg1 * pg2))
  (mutate (from (a g a)) (to (a g t)) (rate n * pa0 * pg1 * pt2 * k))
  (mutate (from (c g a)) (to (c a a)) (rate n * pc0 * pa1 * pa2))
  (mutate (from (c g a)) (to (c c a)) (rate n * pc0 * pc1 * pa2 * k))
  (mutate (from (c g a)) (to (a g a)) (rate s * pa0 * pg1 * pa2 * k))
  (mutate (from (c g a)) (to (c g a)) (rate ~k * ((# s) * ((# pa0) * (# pg1) * (# pa2) + (# pc0) * (# pg1) * (# pc2) + (# pc0) * (# pg1) * (# pt2)) + (# n) * ((# pg0) * (# pg1) * (# pa2) + (# pc0) * (# pc1) * (# pa2) + (# pc0) * (# pt1) * (# pa2)))))
  (mutate (from (c g a)) (to (g g a)) (rate n * pg0 * pg1 * pa2 * k))
  (mutate (from (c g a)) (to (c t a)) (rate n * pc0 * pt1 * pa2 * k))
  (mutate (from (c g a)) (to (c g c)) (rate s * pc0 * pg1 * pc2 * k))
  (mutate (from (c g a)) (to (c g g)) (rate s * pc0 * pg1 * pg2))
  (mutate (from (c g a)) (to (c g t)) (rate s * pc0 * pg1 * pt2 * k))
  (mutate (from (g g a)) (to (g a a)) (rate n * pg0 * pa1 * pa2))
  (mutate (from (g g a)) (to (g c a)) (rate n * pg0 * pc1 * pa2 * k))
  (mutate (from (g g a)) (to (a g a)) (rate n * pa0 * pg1 * pa2))
  (mutate (from (g g a)) (to (c g a)) (rate n * pc0 * pg1 * pa2 * k))
  (mutate (from (g g a)) (to (g g a)) (rate ~k * ((# s) * ((# pg0) * (# pg1) * (# pc2) + (# pg0) * (# pg1) * (# pt2)) + (# n) * ((# pc0) * (# pg1) * (# pa2) + (# pg0) * (# pc1) * (# pa2) + (# pg0) * (# pt1) * (# pa2)))))
  (mutate (from (g g a)) (to (g t a)) (rate n * pg0 * pt1 * pa2 * k))
  (mutate (from (g g a)) (to (g g c)) (rate s * pg0 * pg1 * pc2 * k))
  (mutate (from (g g a)) (to (g g g)) (rate s * pg0 * pg1 * pg2))
  (mutate (from (g g a)) (to (g g t)) (rate s * pg0 * pg1 * pt2 * k))
  (mutate (from (a t a)) (to (a a a)) (rate n * pa0 * pa1 * pa2 * k))
  (mutate (from (a t a)) (to (a c a)) (rate n * pa0 * pc1 * pa2))
  (mutate (from (a t a)) (to (a g a)) (rate n * pa0 * pg1 * pa2 * k))
  (mutate (from (a t a)) (to (a t a)) (rate ~k * ((# s) * ((# pa0) * (# pt1) * (# pc2) + (# pa0) * (# pt1) * (# pt2)) + (# n) * ((# pc0) * (# pt1) * (# pa2) + (# pt0) * (# pt1) * (# pa2) + (# pa0) * (# pa1) * (# pa2) + (# pa0) * (# pg1) * (# pa2)))))
  (mutate (from (a t a)) (to (c t a)) (rate n * pc0 * pt1 * pa2 * k))
  (mutate (from (a t a)) (to (g t a)) (rate n * pg0 * pt1 * pa2))
  (mutate (from (a t a)) (to (t t a)) (rate n * pt0 * pt1 * pa2 * k))
  (mutate (from (a t a)) (to (a t c)) (rate s * pa0 * pt1 * pc2 * k))
  (mutate (from (a t a)) (to (a t g)) (rate n * pa0 * pt1 * pg2))
  (mutate (from (a t a)) (to (a t t)) (rate s * pa0 * pt1 * pt2 * k))
  (mutate (from (c t a)) (to (c a a)) (rate n * pc0 * pa1 * pa2 * k))
  (mutate (from (c t a)) (to (c c a)) (rate n * pc0 * pc1 * pa2))
  (mutate (from (c t a)) (to (c g a)) (rate n * pc0 * pg1 * pa2 * k))
  (mutate (from (c t a)) (to (a t a)) (rate n * pa0 * pt1 * pa2 * k))
  (mutate (from (c t a)) (to (c t a)) (rate ~k * ((# s) * ((# pc0) * (# pt1) * (# pc2) + (# pc0) * (# pt1) * (# pt2)) + (# n) * ((# pa0) * (# pt1) * (# pa2) + (# pg0) * (# pt1) * (# pa2) + (# pc0) * (# pa1) * (# pa2) + (# pc0) * (# pg1) * (# pa2)))))
  (mutate (from (c t a)) (to (g t a)) (rate n * pg0 * pt1 * pa2 * k))
  (mutate (from (c t a)) (to (t t a)) (rate s * pt0 * pt1 * pa2))
  (mutate (from (c t a)) (to (c t c)) (rate s * pc0 * pt1 * pc2 * k))
  (mutate (from (c t a)) (to (c t g)) (rate s * pc0 * pt1 * pg2))
  (mutate (from (c t a)) (to (c t t)) (rate s * pc0 * pt1 * pt2 * k))
  (mutate (from (g t a)) (to (g a a)) (rate n * pg0 * pa1 * pa2 * k))
  (mutate (from (g t a)) (to (g c a)) (rate n * pg0 * pc1 * pa2))
  (mutate (from (g t a)) (to (g g a)) (rate n * pg0 * pg1 * pa2 * k))
  (mutate (from (g t a)) (to (a t a)) (rate n * pa0 * pt1 * pa2))
  (mutate (from (g t a)) (to (c t a)) (rate n * pc0 * pt1 * pa2 * k))
  (mutate (from (g t a)) (to (g t a)) (rate ~k * ((# s) * ((# pg0) * (# pt1) * (# pc2) + (# pg0) * (# pt1) * (# pt2)) + (# n) * ((# pc0) * (# pt1) * (# pa2) + (# pt0) * (# pt1) * (# pa2) + (# pg0) * (# pa1) * (# pa2) + (# pg0) * (# pg1) * (# pa2)))))
  (mutate (from (g t a)) (to (t t a)) (rate n * pt0 * pt1 * pa2 * k))
  (mutate (from (g t a)) (to (g t c)) (rate s * pg0 * pt1 * pc2 * k))
  (mutate (from (g t a)) (to (g t g)) (rate s * pg0 * pt1 * pg2))
  (mutate (from (g t a)) (to (g t t)) (rate s * pg0 * pt1 * pt2 * k))
  (mutate (from (t t a)) (to (t c a)) (rate n * pt0 * pc1 * pa2))
  (mutate (from (t t a)) (to (a t a)) (rate n * pa0 * pt1 * pa2 * k))
  (mutate (from (t t a)) (to (c t a)) (rate s * pc0 * pt1 * pa2))
  (mutate (from (t t a)) (to (g t a)) (rate n * pg0 * pt1 * pa2 * k))
  (mutate (from (t t a)) (to (t t a)) (rate ~k * (# n) * ((# pa0) * (# pt1) * (# pa2) + (# pg0) * (# pt1) * (# pa2) + (# pt0) * (# pt1) * (# pc2) + (# pt0) * (# pt1) * (# pt2))))
  (mutate (from (t t a)) (to (t t c)) (rate n * pt0 * pt1 * pc2 * k))
  (mutate (from (t t a)) (to (t t g)) (rate s * pt0 * pt1 * pg2))
  (mutate (from (t t a)) (to (t t t)) (rate n * pt0 * pt1 * pt2 * k))
  (mutate (from (a a c)) (to (a a a)) (rate n * pa0 * pa1 * pa2 * k))
  (mutate (from (a a c)) (to (a a c)) (rate ~k * (# n) * ((# pc0) * (# pa1) * (# pc2) + (# pt0) * (# pa1) * (# pc2) + (# pa0) * (# pc1) * (# pc2) + (# pa0) * (# pt1) * (# pc2) + (# pa0) * (# pa1) * (# pa2) + (# pa0) * (# pa1) * (# pg2))))
  (mutate (from (a a c)) (to (c a c)) (rate n * pc0 * pa1 * pc2 * k))
  (mutate (from (a a c)) (to (g a c)) (rate n * pg0 * pa1 * pc2))
  (mutate (from (a a c)) (to (t a c)) (rate n * pt0 * pa1 * pc2 * k))
  (mutate (from (a a c)) (to (a c c)) (rate n * pa0 * pc1 * pc2 * k))
  (mutate (from (a a c)) (to (a g c)) (rate n * pa0 * pg1 * pc2))
  (mutate (from (a a c)) (to (a t c)) (rate n * pa0 * pt1 * pc2 * k))
  (mutate (from (a a c)) (to (a a g)) (rate n * pa0 * pa1 * pg2 * k))
  (mutate (from (a a c)) (to (a a t)) (rate s * pa0 * pa1 * pt2))
  (mutate (from (c a c)) (to (c a a)) (rate n * pc0 * pa1 * pa2 * k))
  (mutate (from (c a c)) (to (a a c)) (rate n * pa0 * pa1 * pc2 * k))
  (mutate (from (c a c)) (to (c a c)) (rate ~k * (# n) * ((# pa0) * (# pa1) * (# pc2) + (# pg0) * (# pa1) * (# pc2) + (# pc0) * (# pc1) * (# pc2) + (# pc0) * (# pt1) * (# pc2) + (# pc0) * (# pa1) * (# pa2) + (# pc0) * (# pa1) * (# pg2))))
  (mutate (from (c a c)) (to (g a c)) (rate n * pg0 * pa1 * pc2 * k))
  (mutate (from (c a c)) (to (t a c)) (rate n * pt0 * pa1 * pc2))
  (mutate (from (c a c)) (to (c c c)) (rate n * pc0 * pc1 * pc2 * k))
  (mutate (from (c a c)) (to (c g c)) (rate n * pc0 * pg1 * pc2))
  (mutate (from (c a c)) (to (c t c)) (rate n * pc0 * pt1 * pc2 * k))
  (mutate (from (c a c)) (to (c a g)) (rate n * pc0 * pa1 * pg2 * k))
  (mutate (from (c a c)) (to (c a t)) (rate s * pc0 * pa1 * pt2))
  (mutate (from (g a c)) (to (g a a)) (rate n * pg0 * pa1 * pa2 * k))
  (mutate (from (g a c)) (to (a a c)) (rate n * pa0 * pa1 * pc2))
  (mutate (from (g a c)) (to (c a c)) (rate n * pc0 * pa1 * pc2 * k))
  (mutate (from (g a c)) (to (g a c)) (rate ~k * (# n) * ((# pc0) * (# pa1) * (# pc2) + (# pt0) * (# pa1) * (# pc2) + (# pg0) * (# pc1) * (# pc2) + (# pg0) * (# pt1) * (# pc2) + (# pg0) * (# pa1) * (# pa2) + (# pg0) * (# pa1) * (# pg2))))
  (mutate (from (g a c)) (to (t a c)) (rate n * pt0 * pa1 * pc2 * k))
  (mutate (from (g a c)) (to (g c c)) (rate n * pg0 * pc1 * pc2 * k))
  (mutate (from (g a c)) (to (g g c)) (rate n * pg0 * pg1 * pc2))
  (mutate (from (g a c)) (to (g t c)) (rate n * pg0 * pt1 * pc2 * k))
  (mutate (from (g a c)) (to (g a g)) (rate n * pg0 * pa1 * pg2 * k))
  (mutate (from (g a c)) (to (g a t)) (rate s * pg0 * pa1 * pt2))
  (mutate (from (t a c)) (to (a a c)) (rate n * pa0 * pa1 * pc2 * k))
  (mutate (from (t a c)) (to (c a c)) (rate n * pc0 * pa1 * pc2))
  (mutate (from (t a c)) (to (g a c)) (rate n * pg0 * pa1 * pc2 * k))
  (mutate (from (t a c)) (to (t a c)) (rate ~k * (# n) * ((# pa0) * (# pa1) * (# pc2) + (# pg0) * (# pa1) * (# pc2) + (# pt0) * (# pc1) * (# pc2) + (# pt0) * (# pt1) * (# pc2))))
  (mutate (from (t a c)) (to (t c c)) (rate n * pt0 * pc1 * pc2 * k))
  (mutate (from (t a c)) (to (t g c)) (rate n * pt0 * pg1 * pc2))
  (mutate (from (t a c)) (to (t t c)) (rate n * pt0 * pt1 * pc2 * k))
  (mutate (from (t a c)) (to (t a t)) (rate s * pt0 * pa1 * pt2))
  (mutate (from (a c c)) (to (a c a)) (rate s * pa0 * pc1 * pa2 * k))
  (mutate (from (a c c)) (to (a a c)) (rate n * pa0 * pa1 * pc2 * k))
  (mutate (from (a c c)) (to (a c c)) (rate ~k * ((# s) * ((# pa0) * (# pc1) * (# pa2) + (# pa0) * (# pc1) * (# pg2)) + (# n) * ((# pc0) * (# pc1) * (# pc2) + (# pt0) * (# pc1) * (# pc2) + (# pa0) * (# pa1) * (# pc2) + (# pa0) * (# pg1) * (# pc2)))))
  (mutate (from (a c c)) (to (c c c)) (rate n * pc0 * pc1 * pc2 * k))
  (mutate (from (a c c)) (to (g c c)) (rate n * pg0 * pc1 * pc2))
  (mutate (from (a c c)) (to (t c c)) (rate n * pt0 * pc1 * pc2 * k))
  (mutate (from (a c c)) (to (a g c)) (rate n * pa0 * pg1 * pc2 * k))
  (mutate (from (a c c)) (to (a t c)) (rate n * pa0 * pt1 * pc2))
  (mutate (from (a c c)) (to (a c g)) (rate s * pa0 * pc1 * pg2 * k))
  (mutate (from (a c c)) (to (a c t)) (rate s * pa0 * pc1 * pt2))
  (mutate (from (c c c)) (to (c c a)) (rate s * pc0 * pc1 * pa2 * k))
  (mutate (from (c c c)) (to (c a c)) (rate n * pc0 * pa1 * pc2 * k))
  (mutate (from (c c c)) (to (a c c)) (rate n * pa0 * pc1 * pc2 * k))
  (mutate (from (c c c)) (to (c c c)) (rate ~k * ((# s) * ((# pc0) * (# pc1) * (# pa2) + (# pc0) * (# pc1) * (# pg2)) + (# n) * ((# pa0) * (# pc1) * (# pc2) + (# pg0) * (# pc1) * (# pc2) + (# pc0) * (# pa1) * (# pc2) + (# pc0) * (# pg1) * (# pc2)))))
  (mutate (from (c c c)) (to (g c c)) (rate n * pg0 * pc1 * pc2 * k))
  (mutate (from (c c c)) (to (t c c)) (rate n * pt0 * pc1 * pc2))
  (mutate (from (c c c)) (to (c g c)) (rate n * pc0 * pg1 * pc2 * k))
  (mutate (from (c c c)) (to (c t c)) (rate n * pc0 * pt1 * pc2))
  (mutate (from (c c c)) (to (c c g)) (rate s * pc0 * pc1 * pg2 * k))
  (mutate (from (c c c)) (to (c c t)) (rate s * pc0 * pc1 * pt2))
  (mutate (from (g c c)) (to (g c a)) (rate s * pg0 * pc1 * pa2 * k))
  (mutate (from (g c c)) (to (g a c)) (rate n * pg0 * pa1 * pc2 * k))
  (mutate (from (g c c)) (to (a c c)) (rate n * pa0 * pc1 * pc2))
  (mutate (from (g c c)) (to (c c c)) (rate n * pc0 * pc1 * pc2 * k))
  (mutate (from (g c c)) (to (g c c)) (rate ~k * ((# s) * ((# pg0) * (# pc1) * (# pa2) + (# pg0) * (# pc1) * (# pg2)) + (# n) * ((# pc0) * (# pc1) * (# pc2) + (# pt0) * (# pc1) * (# pc2) + (# pg0) * (# pa1) * (# pc2) + (# pg0) * (# pg1) * (# pc2)))))
  (mutate (from (g c c)) (to (t c c)) (rate n * pt0 * pc1 * pc2 * k))
  (mutate (from (g c c)) (to (g g c)) (rate n * pg0 * pg1 * pc2 * k))
  (mutate (from (g c c)) (to (g t c)) (rate n * pg0 * pt1 * pc2))
  (mutate (from (g c c)) (to (g c g)) (rate s * pg0 * pc1 * pg2 * k))
  (mutate (from (g c c)) (to (g c t)) (rate s * pg0 * pc1 * pt2))
  (mutate (from (t c c)) (to (t c a)) (rate s * pt0 * pc1 * pa2 * k))
  (mutate (from (t c c)) (to (t a c)) (rate n * pt0 * pa1 * pc2 * k))
  (mutate (from (t c c)) (to (a c c)) (rate n * pa0 * pc1 * pc2 * k))
  (mutate (from (t c c)) (to (c c c)) (rate n * pc0 * pc1 * pc2))
  (mutate (from (t c c)) (to (g c c)) (rate n * pg0 * pc1 * pc2 * k))
  (mutate (from (t c c)) (to (t c c)) (rate ~k * ((# s) * ((# pt0) * (# pc1) * (# pa2) + (# pt0) * (# pc1) * (# pg2)) + (# n) * ((# pa0) * (# pc1) * (# pc2) + (# pg0) * (# pc1) * (# pc2) + (# pt0) * (# pa1) * (# pc2) + (# pt0) * (# pg1) * (# pc2)))))
  (mutate (from (t c c)) (to (t g c)) (rate n * pt0 * pg1 * pc2 * k))
  (mutate (from (t c c)) (to (t t c)) (rate n * pt0 * pt1 * pc2))
  (mutate (from (t c c)) (to (t c g)) (rate s * pt0 * pc1 * pg2 * k))
  (mutate (from (t c c)) (to (t c t)) (rate s * pt0 * pc1 * pt2))
  (mutate (from (a g c)) (to (a g a)) (rate n * pa0 * pg1 * pa2 * k))
  (mutate (from (a g c)) (to (a a c)) (rate n * pa0 * pa1 * pc2))
  (mutate (from (a g c)) (to (a c c)) (rate n * pa0 * pc1 * pc2 * k))
  (mutate (from (a g c)) (to (a g c)) (rate ~k * (# n) * ((# pc0) * (# pg1) * (# pc2) + (# pt0) * (# pg1) * (# pc2) + (# pa0) * (# pc1) * (# pc2) + (# pa0) * (# pt1) * (# pc2) + (# pa0) * (# pg1) * (# pa2) + (# pa0) * (# pg1) * (# pg2))))
  (mutate (from (a g c)) (to (c g c)) (rate n * pc0 * pg1 * pc2 * k))
  (mutate (from (a g c)) (to (g g c)) (rate n * pg0 * pg1 * pc2))
  (mutate (from (a g c)) (to (t g c)) (rate n * pt0 * pg1 * pc2 * k))
  (mutate (from (a g c)) (to (a t c)) (rate n * pa0 * pt1 * pc2 * k))
  (mutate (from (a g c)) (to (a g g)) (rate n * pa0 * pg1 * pg2 * k))
  (mutate (from (a g c)) (to (a g t)) (rate s * pa0 * pg1 * pt2))
  (mutate (from (c g c)) (to (c g a)) (rate s * pc0 * pg1 * pa2 * k))
  (mutate (from (c g c)) (to (c a c)) (rate n * pc0 * pa1 * pc2))
  (mutate (from (c g c)) (to (c c c)) (rate n * pc0 * pc1 * pc2 * k))
  (mutate (from (c g c)) (to (a g c)) (rate n * pa0 * pg1 * pc2 * k))
  (mutate (from (c g c)) (to (c g c)) (rate ~k * ((# s) * ((# pc0) * (# pg1) * (# pa2) + (# pc0) * (# pg1) * (# pg2)) + (# n) * ((# pa0) * (# pg1) * (# pc2) + (# pg0) * (# pg1) * (# pc2) + (# pc0) * (# pc1) * (# pc2) + (# pc0) * (# pt1) * (# pc2)))))
  (mutate (from (c g c)) (to (g g c)) (rate n * pg0 * pg1 * pc2 * k))
  (mutate (from (c g c)) (to (t g c)) (rate n * pt0 * pg1 * pc2))
  (mutate (from (c g c)) (to (c t c)) (rate n * pc0 * pt1 * pc2 * k))
  (mutate (from (c g c)) (to (c g g)) (rate s * pc0 * pg1 * pg2 * k))
  (mutate (from (c g c)) (to (c g t)) (rate s * pc0 * pg1 * pt2))
  (mutate (from (g g c)) (to (g g a)) (rate s * pg0 * pg1 * pa2 * k))
  (mutate (from (g g c)) (to (g a c)) (rate n * pg0 * pa1 * pc2))
  (mutate (from (g g c)) (to (g c c)) (rate n * pg0 * pc1 * pc2 * k))
  (mutate (from (g g c)) (to (a g c)) (rate n * pa0 * pg1 * pc2))
  (mutate (from (g g c)) (to (c g c)) (rate n * pc0 * pg1 * pc2 * k))
  (mutate (from (g g c)) (to (g g c)) (rate ~k * ((# s) * ((# pg0) * (# pg1) * (# pa2) + (# pg0) * (# pg1) * (# pg2)) + (# n) * ((# pc0) * (# pg1) * (# pc2) + (# pt0) * (# pg1) * (# pc2) + (# pg0) * (# pc1) * (# pc2) + (# pg0) * (# pt1) * (# pc2)))))
  (mutate (from (g g c)) (to (t g c)) (rate n * pt0 * pg1 * pc2 * k))
  (mutate (from (g g c)) (to (g t c)) (rate n * pg0 * pt1 * pc2 * k))
  (mutate (from (g g c)) (to (g g g)) (rate s * pg0 * pg1 * pg2 * k))
  (mutate (from (g g c)) (to (g g t)) (rate s * pg0 * pg1 * pt2))
  (mutate (from (t g c)) (to (t a c)) (rate n * pt0 * pa1 * pc2))
  (mutate (from (t g c)) (to (t c c)) (rate n * pt0 * pc1 * pc2 * k))
  (mutate (from (t g c)) (to (a g c)) (rate n * pa0 * pg1 * pc2 * k))
  (mutate (from (t g c)) (to (c g c)) (rate n * pc0 * pg1 * pc2))
  (mutate (from (t g c)) (to (g g c)) (rate n * pg0 * pg1 * pc2 * k))
  (mutate (from (t g c)) (to (t g c)) (rate ~k * (# n) * ((# pa0) * (# pg1) * (# pc2) + (# pg0) * (# pg1) * (# pc2) + (# pt0) * (# pc1) * (# pc2) + (# pt0) * (# pt1) * (# pc2) + (# pt0) * (# pg1) * (# pg2))))
  (mutate (from (t g c)) (to (t t c)) (rate n * pt0 * pt1 * pc2 * k))
  (mutate (from (t g c)) (to (t g g)) (rate n * pt0 * pg1 * pg2 * k))
  (mutate (from (t g c)) (to (t g t)) (rate s * pt0 * pg1 * pt2))
  (mutate (from (a t c)) (to (a t a)) (rate s * pa0 * pt1 * pa2 * k))
  (mutate (from (a t c)) (to (a a c)) (rate n * pa0 * pa1 * pc2 * k))
  (mutate (from (a t c)) (to (a c c)) (rate n * pa0 * pc1 * pc2))
  (mutate (from (a t c)) (to (a g c)) (rate n * pa0 * pg1 * pc2 * k))
  (mutate (from (a t c)) (to (a t c)) (rate ~k * ((# s) * (# pa0) * (# pt1) * (# pa2) + (# n) * ((# pc0) * (# pt1) * (# pc2) + (# pt0) * (# pt1) * (# pc2) + (# pa0) * (# pa1) * (# pc2) + (# pa0) * (# pg1) * (# pc2) + (# pa0) * (# pt1) * (# pg2)))))
  (mutate (from (a t c)) (to (c t c)) (rate n * pc0 * pt1 * pc2 * k))
  (mutate (from (a t c)) (to (g t c)) (rate n * pg0 * pt1 * pc2))
  (mutate (from (a t c)) (to (t t c)) (rate n * pt0 * pt1 * pc2 * k))
  (mutate (from (a t c)) (to (a t g)) (rate n * pa0 * pt1 * pg2 * k))
  (mutate (from (a t c)) (to (a t t)) (rate s * pa0 * pt1 * pt2))
  (mutate (from (c t c)) (to (c t a)) (rate s * pc0 * pt1 * pa2 * k))
  (mutate (from (c t c)) (to (c a c)) (rate n * pc0 * pa1 * pc2 * k))
  (mutate (from (c t c)) (to (c c c)) (rate n * pc0 * pc1 * pc2))
  (mutate (from (c t c)) (to (c g c)) (rate n * pc0 * pg1 * pc2 * k))
  (mutate (from (c t c)) (to (a t c)) (rate n * pa0 * pt1 * pc2 * k))
  (mutate (from (c t c)) (to (c t c)) (rate ~k * ((# s) * ((# pc0) * (# pt1) * (# pa2) + (# pc0) * (# pt1) * (# pg2)) + (# n) * ((# pa0) * (# pt1) * (# pc2) + (# pg0) * (# pt1) * (# pc2) + (# pc0) * (# pa1) * (# pc2) + (# pc0) * (# pg1) * (# pc2)))))
  (mutate (from (c t c)) (to (g t c)) (rate n * pg0 * pt1 * pc2 * k))
  (mutate (from (c t c)) (to (t t c)) (rate n * pt0 * pt1 * pc2))
  (mutate (from (c t c)) (to (c t g)) (rate s * pc0 * pt1 * pg2 * k))
  (mutate (from (c t c)) (to (c t t)) (rate s * pc0 * pt1 * pt2))
  (mutate (from (g t c)) (to (g t a)) (rate s * pg0 * pt1 * pa2 * k))
  (mutate (from (g t c)) (to (g a c)) (rate n * pg0 * pa1 * pc2 * k))
  (mutate (from (g t c)) (to (g c c)) (rate n * pg0 * pc1 * pc2))
  (mutate (from (g t c)) (to (g g c)) (rate n * pg0 * pg1 * pc2 * k))
  (mutate (from (g t c)) (to (a t c)) (rate n * pa0 * pt1 * pc2))
  (mutate (from (g t c)) (to (c t c)) (rate n * pc0 * pt1 * pc2 * k))
  (mutate (from (g t c)) (to (g t c)) (rate ~k * ((# s) * ((# pg0) * (# pt1) * (# pa2) + (# pg0) * (# pt1) * (# pg2)) + (# n) * ((# pc0) * (# pt1) * (# pc2) + (# pt0) * (# pt1) * (# pc2) + (# pg0) * (# pa1) * (# pc2) + (# pg0) * (# pg1) * (# pc2)))))
  (mutate (from (g t c)) (to (t t c)) (rate n * pt0 * pt1 * pc2 * k))
  (mutate (from (g t c)) (to (g t g)) (rate s * pg0 * pt1 * pg2 * k))
  (mutate (from (g t c)) (to (g t t)) (rate s * pg0 * pt1 * pt2))
  (mutate (from (t t c)) (to (t t a)) (rate n * pt0 * pt1 * pa2 * k))
  (mutate (from (t t c)) (to (t a c)) (rate n * pt0 * pa1 * pc2 * k))
  (mutate (from (t t c)) (to (t c c)) (rate n * pt0 * pc1 * pc2))
  (mutate (from (t t c)) (to (t g c)) (rate n * pt0 * pg1 * pc2 * k))
  (mutate (from (t t c)) (to (a t c)) (rate n * pa0 * pt1 * pc2 * k))
  (mutate (from (t t c)) (to (c t c)) (rate n * pc0 * pt1 * pc2))
  (mutate (from (t t c)) (to (g t c)) (rate n * pg0 * pt1 * pc2 * k))
  (mutate (from (t t c)) (to (t t c)) (rate ~k * (# n) * ((# pa0) * (# pt1) * (# pc2) + (# pg0) * (# pt1) * (# pc2) + (# pt0) * (# pa1) * (# pc2) + (# pt0) * (# pg1) * (# pc2) + (# pt0) * (# pt1) * (# pa2) + (# pt0) * (# pt1) * (# pg2))))
  (mutate (from (t t c)) (to (t t g)) (rate n * pt0 * pt1 * pg2 * k))
  (mutate (from (t t c)) (to (t t t)) (rate s * pt0 * pt1 * pt2))
  (mutate (from (a a g)) (to (a a a)) (rate s * pa0 * pa1 * pa2))
  (mutate (from (a a g)) (to (a a c)) (rate n * pa0 * pa1 * pc2 * k))
  (mutate (from (a a g)) (to (a a g)) (rate ~k * (# n) * ((# pc0) * (# pa1) * (# pg2) + (# pa0) * (# pc1) * (# pg2) + (# pa0) * (# pt1) * (# pg2) + (# pa0) * (# pa1) * (# pc2) + (# pa0) * (# pa1) * (# pt2))))
  (mutate (from (a a g)) (to (c a g)) (rate n * pc0 * pa1 * pg2 * k))
  (mutate (from (a a g)) (to (g a g)) (rate n * pg0 * pa1 * pg2))
  (mutate (from (a a g)) (to (a c g)) (rate n * pa0 * pc1 * pg2 * k))
  (mutate (from (a a g)) (to (a g g)) (rate n * pa0 * pg1 * pg2))
  (mutate (from (a a g)) (to (a t g)) (rate n * pa0 * pt1 * pg2 * k))
  (mutate (from (a a g)) (to (a a t)) (rate n * pa0 * pa1 * pt2 * k))
  (mutate (from (c a g)) (to (c a a)) (rate s * pc0 * pa1 * pa2))
  (mutate (from (c a g)) (to (c a c)) (rate n * pc0 * pa1 * pc2 * k))
  (mutate (from (c a g)) (to (a a g)) (rate n * pa0 * pa1 * pg2 * k))
  (mutate (from (c a g)) (to (c a g)) (rate ~k * (# n) * ((# pa0) * (# pa1) * (# pg2) + (# pg0) * (# pa1) * (# pg2) + (# pc0) * (# pc1) * (# pg2) + (# pc0) * (# pt1) * (# pg2) + (# pc0) * (# pa1) * (# pc2) + (# pc0) * (# pa1) * (# pt2))))
  (mutate (from (c a g)) (to (g a g)) (rate n * pg0 * pa1 * pg2 * k))
  (mutate (from (c a g)) (to (c c g)) (rate n * pc0 * pc1 * pg2 * k))
  (mutate (from (c a g)) (to (c g g)) (rate n * pc0 * pg1 * pg2))
  (mutate (from (c a g)) (to (c t g)) (rate n * pc0 * pt1 * pg2 * k))
  (mutate (from (c a g)) (to (c a t)) (rate n * pc0 * pa1 * pt2 * k))
  (mutate (from (g a g)) (to (g a a)) (rate s * pg0 * pa1 * pa2))
  (mutate (from (g a g)) (to (g a c)) (rate n * pg0 * pa1 * pc2 * k))
  (mutate (from (g a g)) (to (a a g)) (rate n * pa0 * pa1 * pg2))
  (mutate (from (g a g)) (to (c a g)) (rate n * pc0 * pa1 * pg2 * k))
  (mutate (from (g a g)) (to (g a g)) (rate ~k * (# n) * ((# pc0) * (# pa1) * (# pg2) + (# pg0) * (# pc1) * (# pg2) + (# pg0) * (# pt1) * (# pg2) + (# pg0) * (# pa1) * (# pc2) + (# pg0) * (# pa1) * (# pt2))))
  (mutate (from (g a g)) (to (g c g)) (rate n * pg0 * pc1 * pg2 * k))
  (mutate (from (g a g)) (to (g g g)) (rate n * pg0 * pg1 * pg2))
  (mutate (from (g a g)) (to (g t g)) (rate n * pg0 * pt1 * pg2 * k))
  (mutate (from (g a g)) (to (g a t)) (rate n * pg0 * pa1 * pt2 * k))
  (mutate (from (a c g)) (to (a c a)) (rate s * pa0 * pc1 * pa2))
  (mutate (from (a c g)) (to (a c c)) (rate s * pa0 * pc1 * pc2 * k))
  (mutate (from (a c g)) (to (a a g)) (rate n * pa0 * pa1 * pg2 * k))
  (mutate (from (a c g)) (to (a c g)) (rate ~k * ((# s) * ((# pa0) * (# pc1) * (# pc2) + (# pa0) * (# pc1) * (# pt2)) + (# n) * ((# pc0) * (# pc1) * (# pg2) + (# pt0) * (# pc1) * (# pg2) + (# pa0) * (# pa1) * (# pg2) + (# pa0) * (# pg1) * (# pg2)))))
  (mutate (from (a c g)) (to (c c g)) (rate n * pc0 * pc1 * pg2 * k))
  (mutate (from (a c g)) (to (g c g)) (rate n * pg0 * pc1 * pg2))
  (mutate (from (a c g)) (to (t c g)) (rate n * pt0 * pc1 * pg2 * k))
  (mutate (from (a c g)) (to (a g g)) (rate n * pa0 * pg1 * pg2 * k))
  (mutate (from (a c g)) (to (a t g)) (rate n * pa0 * pt1 * pg2))
  (mutate (from (a c g)) (to (a c t)) (rate s * pa0 * pc1 * pt2 * k))
  (mutate (from (c c g)) (to (c c a)) (rate s * pc0 * pc1 * pa2))
  (mutate (from (c c g)) (to (c c c)) (rate s * pc0 * pc1 * pc2 * k))
  (mutate (from (c c g)) (to (c a g)) (rate n * pc0 * pa1 * pg2 * k))
  (mutate (from (c c g)) (to (a c g)) (rate n * pa0 * pc1 * pg2 * k))
  (mutate (from (c c g)) (to (c c g)) (rate ~k * ((# s) * ((# pc0) * (# pc1) * (# pc2) + (# pc0) * (# pc1) * (# pt2)) + (# n) * ((# pa0) * (# pc1) * (# pg2) + (# pg0) * (# pc1) * (# pg2) + (# pc0) * (# pa1) * (# pg2) + (# pc0) * (# pg1) * (# pg2)))))
  (mutate (from (c c g)) (to (g c g)) (rate n * pg0 * pc1 * pg2 * k))
  (mutate (from (c c g)) (to (t c g)) (rate n * pt0 * pc1 * pg2))
  (mutate (from (c c g)) (to (c g g)) (rate n * pc0 * pg1 * pg2 * k))
  (mutate (from (c c g)) (to (c t g)) (rate n * pc0 * pt1 * pg2))
  (mutate (from (c c g)) (to (c c t)) (rate s * pc0 * pc1 * pt2 * k))
  (mutate (from (g c g)) (to (g c a)) (rate s * pg0 * pc1 * pa2))
  (mutate (from (g c g)) (to (g c c)) (rate s * pg0 * pc1 * pc2 * k))
  (mutate (from (g c g)) (to (g a g)) (rate n * pg0 * pa1 * pg2 * k))
  (mutate (from (g c g)) (to (a c g)) (rate n * pa0 * pc1 * pg2))
  (mutate (from (g c g)) (to (c c g)) (rate n * pc0 * pc1 * pg2 * k))
  (mutate (from (g c g)) (to (g c g)) (rate ~k * ((# s) * ((# pg0) * (# pc1) * (# pc2) + (# pg0) * (# pc1) * (# pt2)) + (# n) * ((# pc0) * (# pc1) * (# pg2) + (# pt0) * (# pc1) * (# pg2) + (# pg0) * (# pa1) * (# pg2) + (# pg0) * (# pg1) * (# pg2)))))
  (mutate (from (g c g)) (to (t c g)) (rate n * pt0 * pc1 * pg2 * k))
  (mutate (from (g c g)) (to (g g g)) (rate n * pg0 * pg1 * pg2 * k))
  (mutate (from (g c g)) (to (g t g)) (rate n * pg0 * pt1 * pg2))
  (mutate (from (g c g)) (to (g c t)) (rate s * pg0 * pc1 * pt2 * k))
  (mutate (from (t c g)) (to (t c a)) (rate s * pt0 * pc1 * pa2))
  (mutate (from (t c g)) (to (t c c)) (rate s * pt0 * pc1 * pc2 * k))
  (mutate (from (t c g)) (to (a c g)) (rate n * pa0 * pc1 * pg2 * k))
  (mutate (from (t c g)) (to (c c g)) (rate n * pc0 * pc1 * pg2))
  (mutate (from (t c g)) (to (g c g)) (rate n * pg0 * pc1 * pg2 * k))
  (mutate (from (t c g)) (to (t c g)) (rate ~k * ((# s) * ((# pt0) * (# pc1) * (# pc2) + (# pt0) * (# pc1) * (# pt2)) + (# n) * ((# pa0) * (# pc1) * (# pg2) + (# pg0) * (# pc1) * (# pg2) + (# pt0) * (# pg1) * (# pg2)))))
  (mutate (from (t c g)) (to (t g g)) (rate n * pt0 * pg1 * pg2 * k))
  (mutate (from (t c g)) (to (t t g)) (rate n * pt0 * pt1 * pg2))
  (mutate (from (t c g)) (to (t c t)) (rate s * pt0 * pc1 * pt2 * k))
  (mutate (from (a g g)) (to (a g a)) (rate s * pa0 * pg1 * pa2))
  (mutate (from (a g g)) (to (a g c)) (rate n * pa0 * pg1 * pc2 * k))
  (mutate (from (a g g)) (to (a a g)) (rate n * pa0 * pa1 * pg2))
  (mutate (from (a g g)) (to (a c g)) (rate n * pa0 * pc1 * pg2 * k))
  (mutate (from (a g g)) (to (a g g)) (rate ~k * ((# s) * (# pc0) * (# pg1) * (# pg2) + (# n) * ((# pt0) * (# pg1) * (# pg2) + (# pa0) * (# pc1) * (# pg2) + (# pa0) * (# pt1) * (# pg2) + (# pa0) * (# pg1) * (# pc2) + (# pa0) * (# pg1) * (# pt2)))))
  (mutate (from (a g g)) (to (c g g)) (rate s * pc0 * pg1 * pg2 * k))
  (mutate (from (a g g)) (to (g g g)) (rate n * pg0 * pg1 * pg2))
  (mutate (from (a g g)) (to (t g g)) (rate n * pt0 * pg1 * pg2 * k))
  (mutate (from (a g g)) (to (a t g)) (rate n * pa0 * pt1 * pg2 * k))
  (mutate (from (a g g)) (to (a g t)) (rate n * pa0 * pg1 * pt2 * k))
  (mutate (from (c g g)) (to (c g a)) (rate s * pc0 * pg1 * pa2))
  (mutate (from (c g g)) (to (c g c)) (rate s * pc0 * pg1 * pc2 * k))
  (mutate (from (c g g)) (to (c a g)) (rate n * pc0 * pa1 * pg2))
  (mutate (from (c g g)) (to (c c g)) (rate n * pc0 * pc1 * pg2 * k))
  (mutate (from (c g g)) (to (a g g)) (rate s * pa0 * pg1 * pg2 * k))
  (mutate (from (c g g)) (to (c g g)) (rate ~k * ((# s) * ((# pa0) * (# pg1) * (# pg2) + (# pc0) * (# pg1) * (# pc2) + (# pc0) * (# pg1) * (# pt2)) + (# n) * ((# pg0) * (# pg1) * (# pg2) + (# pc0) * (# pc1) * (# pg2) + (# pc0) * (# pt1) * (# pg2)))))
  (mutate (from (c g g)) (to (g g g)) (rate n * pg0 * pg1 * pg2 * k))
  (mutate (from (c g g)) (to (t g g)) (rate n * pt0 * pg1 * pg2))
  (mutate (from (c g g)) (to (c t g)) (rate n * pc0 * pt1 * pg2 * k))
  (mutate (from (c g g)) (to (c g t)) (rate s * pc0 * pg1 * pt2 * k))
  (mutate (from (g g g)) (to (g g a)) (rate s * pg0 * pg1 * pa2))
  (mutate (from (g g g)) (to (g g c)) (rate s * pg0 * pg1 * pc2 * k))
  (mutate (from (g g g)) (to (g a g)) (rate n * pg0 * pa1 * pg2))
  (mutate (from (g g g)) (to (g c g)) (rate n * pg0 * pc1 * pg2 * k))
  (mutate (from (g g g)) (to (a g g)) (rate n * pa0 * pg1 * pg2))
  (mutate (from (g g g)) (to (c g g)) (rate n * pc0 * pg1 * pg2 * k))
  (mutate (from (g g g)) (to (g g g)) (rate ~k * ((# s) * ((# pg0) * (# pg1) * (# pc2) + (# pg0) * (# pg1) * (# pt2)) + (# n) * ((# pc0) * (# pg1) * (# pg2) + (# pt0) * (# pg1) * (# pg2) + (# pg0) * (# pc1) * (# pg2) + (# pg0) * (# pt1) * (# pg2)))))
  (mutate (from (g g g)) (to (t g g)) (rate n * pt0 * pg1 * pg2 * k))
  (mutate (from (g g g)) (to (g t g)) (rate n * pg0 * pt1 * pg2 * k))
  (mutate (from (g g g)) (to (g g t)) (rate s * pg0 * pg1 * pt2 * k))
  (mutate (from (t g g)) (to (t g c)) (rate n * pt0 * pg1 * pc2 * k))
  (mutate (from (t g g)) (to (t c g)) (rate n * pt0 * pc1 * pg2 * k))
  (mutate (from (t g g)) (to (a g g)) (rate n * pa0 * pg1 * pg2 * k))
  (mutate (from (t g g)) (to (c g g)) (rate n * pc0 * pg1 * pg2))
  (mutate (from (t g g)) (to (g g g)) (rate n * pg0 * pg1 * pg2 * k))
  (mutate (from (t g g)) (to (t g g)) (rate ~k * (# n) * ((# pa0) * (# pg1) * (# pg2) + (# pg0) * (# pg1) * (# pg2) + (# pt0) * (# pc1) * (# pg2) + (# pt0) * (# pt1) * (# pg2) + (# pt0) * (# pg1) * (# pc2) + (# pt0) * (# pg1) * (# pt2))))
  (mutate (from (t g g)) (to (t t g)) (rate n * pt0 * pt1 * pg2 * k))
  (mutate (from (t g g)) (to (t g t)) (rate n * pt0 * pg1 * pt2 * k))
  (mutate (from (a t g)) (to (a t a)) (rate n * pa0 * pt1 * pa2))
  (mutate (from (a t g)) (to (a t c)) (rate n * pa0 * pt1 * pc2 * k))
  (mutate (from (a t g)) (to (a a g)) (rate n * pa0 * pa1 * pg2 * k))
  (mutate (from (a t g)) (to (a c g)) (rate n * pa0 * pc1 * pg2))
  (mutate (from (a t g)) (to (a g g)) (rate n * pa0 * pg1 * pg2 * k))
  (mutate (from (a t g)) (to (a t g)) (rate ~k * (# n) * ((# pc0) * (# pt1) * (# pg2) + (# pt0) * (# pt1) * (# pg2) + (# pa0) * (# pa1) * (# pg2) + (# pa0) * (# pg1) * (# pg2) + (# pa0) * (# pt1) * (# pc2) + (# pa0) * (# pt1) * (# pt2))))
  (mutate (from (a t g)) (to (c t g)) (rate n * pc0 * pt1 * pg2 * k))
  (mutate (from (a t g)) (to (g t g)) (rate n * pg0 * pt1 * pg2))
  (mutate (from (a t g)) (to (t t g)) (rate n * pt0 * pt1 * pg2 * k))
  (mutate (from (a t g)) (to (a t t)) (rate n * pa0 * pt1 * pt2 * k))
  (mutate (from (c t g)) (to (c t a)) (rate s * pc0 * pt1 * pa2))
  (mutate (from (c t g)) (to (c t c)) (rate s * pc0 * pt1 * pc2 * k))
  (mutate (from (c t g)) (to (c a g)) (rate n * pc0 * pa1 * pg2 * k))
  (mutate (from (c t g)) (to (c c g)) (rate n * pc0 * pc1 * pg2))
  (mutate (from (c t g)) (to (c g g)) (rate n * pc0 * pg1 * pg2 * k))
  (mutate (from (c t g)) (to (a t g)) (rate n * pa0 * pt1 * pg2 * k))
  (mutate (from (c t g)) (to (c t g)) (rate ~k * ((# s) * ((# pc0) * (# pt1) * (# pc2) + (# pc0) * (# pt1) * (# pt2)) + (# n) * ((# pa0) * (# pt1) * (# pg2) + (# pg0) * (# pt1) * (# pg2) + (# pc0) * (# pa1) * (# pg2) + (# pc0) * (# pg1) * (# pg2)))))
  (mutate (from (c t g)) (to (g t g)) (rate n * pg0 * pt1 * pg2 * k))
  (mutate (from (c t g)) (to (t t g)) (rate s * pt0 * pt1 * pg2))
  (mutate (from (c t g)) (to (c t t)) (rate s * pc0 * pt1 * pt2 * k))
  (mutate (from (g t g)) (to (g t a)) (rate s * pg0 * pt1 * pa2))
  (mutate (from (g t g)) (to (g t c)) (rate s * pg0 * pt1 * pc2 * k))
  (mutate (from (g t g)) (to (g a g)) (rate n * pg0 * pa1 * pg2 * k))
  (mutate (from (g t g)) (to (g c g)) (rate n * pg0 * pc1 * pg2))
  (mutate (from (g t g)) (to (g g g)) (rate n * pg0 * pg1 * pg2 * k))
  (mutate (from (g t g)) (to (a t g)) (rate n * pa0 * pt1 * pg2))
  (mutate (from (g t g)) (to (c t g)) (rate n * pc0 * pt1 * pg2 * k))
  (mutate (from (g t g)) (to (g t g)) (rate ~k * ((# s) * ((# pg0) * (# pt1) * (# pc2) + (# pg0) * (# pt1) * (# pt2)) + (# n) * ((# pc0) * (# pt1) * (# pg2) + (# pt0) * (# pt1) * (# pg2) + (# pg0) * (# pa1) * (# pg2) + (# pg0) * (# pg1) * (# pg2)))))
  (mutate (from (g t g)) (to (t t g)) (rate n * pt0 * pt1 * pg2 * k))
  (mutate (from (g t g)) (to (g t t)) (rate s * pg0 * pt1 * pt2 * k))
  (mutate (from (t t g)) (to (t t a)) (rate s * pt0 * pt1 * pa2))
  (mutate (from (t t g)) (to (t t c)) (rate n * pt0 * pt1 * pc2 * k))
  (mutate (from (t t g)) (to (t c g)) (rate n * pt0 * pc1 * pg2))
  (mutate (from (t t g)) (to (t g g)) (rate n * pt0 * pg1 * pg2 * k))
  (mutate (from (t t g)) (to (a t g)) (rate n * pa0 * pt1 * pg2 * k))
  (mutate (from (t t g)) (to (c t g)) (rate s * pc0 * pt1 * pg2))
  (mutate (from (t t g)) (to (g t g)) (rate n * pg0 * pt1 * pg2 * k))
  (mutate (from (t t g)) (to (t t g)) (rate ~k * (# n) * ((# pa0) * (# pt1) * (# pg2) + (# pg0) * (# pt1) * (# pg2) + (# pt0) * (# pg1) * (# pg2) + (# pt0) * (# pt1) * (# pc2) + (# pt0) * (# pt1) * (# pt2))))
  (mutate (from (t t g)) (to (t t t)) (rate n * pt0 * pt1 * pt2 * k))
  (mutate (from (a a t)) (to (a a a)) (rate n * pa0 * pa1 * pa2 * k))
  (mutate (from (a a t)) (to (a a c)) (rate s * pa0 * pa1 * pc2))
  (mutate (from (a a t)) (to (a a g)) (rate n * pa0 * pa1 * pg2 * k))
  (mutate (from (a a t)) (to (a a t)) (rate ~k * (# n) * ((# pc0) * (# pa1) * (# pt2) + (# pt0) * (# pa1) * (# pt2) + (# pa0) * (# pc1) * (# pt2) + (# pa0) * (# pt1) * (# pt2) + (# pa0) * (# pa1) * (# pa2) + (# pa0) * (# pa1) * (# pg2))))
  (mutate (from (a a t)) (to (c a t)) (rate n * pc0 * pa1 * pt2 * k))
  (mutate (from (a a t)) (to (g a t)) (rate n * pg0 * pa1 * pt2))
  (mutate (from (a a t)) (to (t a t)) (rate n * pt0 * pa1 * pt2 * k))
  (mutate (from (a a t)) (to (a c t)) (rate n * pa0 * pc1 * pt2 * k))
  (mutate (from (a a t)) (to (a g t)) (rate n * pa0 * pg1 * pt2))
  (mutate (from (a a t)) (to (a t t)) (rate n * pa0 * pt1 * pt2 * k))
  (mutate (from (c a t)) (to (c a a)) (rate n * pc0 * pa1 * pa2 * k))
  (mutate (from (c a t)) (to (c a c)) (rate s * pc0 * pa1 * pc2))
  (mutate (from (c a t)) (to (c a g)) (rate n * pc0 * pa1 * pg2 * k))
  (mutate (from (c a t)) (to (a a t)) (rate n * pa0 * pa1 * pt2 * k))
  (mutate (from (c a t)) (to (c a t)) (rate ~k * (# n) * ((# pa0) * (# pa1) * (# pt2) + (# pg0) * (# pa1) * (# pt2) + (# pc0) * (# pc1) * (# pt2) + (# pc0) * (# pt1) * (# pt2) + (# pc0) * (# pa1) * (# pa2) + (# pc0) * (# pa1) * (# pg2))))
  (mutate (from (c a t)) (to (g a t)) (rate n * pg0 * pa1 * pt2 * k))
  (mutate (from (c a t)) (to (t a t)) (rate n * pt0 * pa1 * pt2))
  (mutate (from (c a t)) (to (c c t)) (rate n * pc0 * pc1 * pt2 * k))
  (mutate (from (c a t)) (to (c g t)) (rate n * pc0 * pg1 * pt2))
  (mutate (from (c a t)) (to (c t t)) (rate n * pc0 * pt1 * pt2 * k))
  (mutate (from (g a t)) (to (g a a)) (rate n * pg0 * pa1 * pa2 * k))
  (mutate (from (g a t)) (to (g a c)) (rate s * pg0 * pa1 * pc2))
  (mutate (from (g a t)) (to (g a g)) (rate n * pg0 * pa1 * pg2 * k))
  (mutate (from (g a t)) (to (a a t)) (rate n * pa0 * pa1 * pt2))
  (mutate (from (g a t)) (to (c a t)) (rate n * pc0 * pa1 * pt2 * k))
  (mutate (from (g a t)) (to (g a t)) (rate ~k * (# n) * ((# pc0) * (# pa1) * (# pt2) + (# pt0) * (# pa1) * (# pt2) + (# pg0) * (# pc1) * (# pt2) + (# pg0) * (# pt1) * (# pt2) + (# pg0) * (# pa1) * (# pa2) + (# pg0) * (# pa1) * (# pg2))))
  (mutate (from (g a t)) (to (t a t)) (rate n * pt0 * pa1 * pt2 * k))
  (mutate (from (g a t)) (to (g c t)) (rate n * pg0 * pc1 * pt2 * k))
  (mutate (from (g a t)) (to (g g t)) (rate n * pg0 * pg1 * pt2))
  (mutate (from (g a t)) (to (g t t)) (rate n * pg0 * pt1 * pt2 * k))
  (mutate (from (t a t)) (to (t a c)) (rate s * pt0 * pa1 * pc2))
  (mutate (from (t a t)) (to (a a t)) (rate n * pa0 * pa1 * pt2 * k))
  (mutate (from (t a t)) (to (c a t)) (rate n * pc0 * pa1 * pt2))
  (mutate (from (t a t)) (to (g a t)) (rate n * pg0 * pa1 * pt2 * k))
  (mutate (from (t a t)) (to (t a t)) (rate ~k * (# n) * ((# pa0) * (# pa1) * (# pt2) + (# pg0) * (# pa1) * (# pt2) + (# pt0) * (# pc1) * (# pt2) + (# pt0) * (# pt1) * (# pt2))))
  (mutate (from (t a t)) (to (t c t)) (rate n * pt0 * pc1 * pt2 * k))
  (mutate (from (t a t)) (to (t g t)) (rate n * pt0 * pg1 * pt2))
  (mutate (from (t a t)) (to (t t t)) (rate n * pt0 * pt1 * pt2 * k))
  (mutate (from (a c t)) (to (a c a)) (rate s * pa0 * pc1 * pa2 * k))
  (mutate (from (a c t)) (to (a c c)) (rate s * pa0 * pc1 * pc2))
  (mutate (from (a c t)) (to (a c g)) (rate s * pa0 * pc1 * pg2 * k))
  (mutate (from (a c t)) (to (a a t)) (rate n * pa0 * pa1 * pt2 * k))
  (mutate (from (a c t)) (to (a c t)) (rate ~k * ((# s) * ((# pa0) * (# pc1) * (# pa2) + (# pa0) * (# pc1) * (# pg2)) + (# n) * ((# pc0) * (# pc1) * (# pt2) + (# pt0) * (# pc1) * (# pt2) + (# pa0) * (# pa1) * (# pt2) + (# pa0) * (# pg1) * (# pt2)))))
  (mutate (from (a c t)) (to (c c t)) (rate n * pc0 * pc1 * pt2 * k))
  (mutate (from (a c t)) (to (g c t)) (rate n * pg0 * pc1 * pt2))
  (mutate (from (a c t)) (to (t c t)) (rate n * pt0 * pc1 * pt2 * k))
  (mutate (from (a c t)) (to (a g t)) (rate n * pa0 * pg1 * pt2 * k))
  (mutate (from (a c t)) (to (a t t)) (rate n * pa0 * pt1 * pt2))
  (mutate (from (c c t)) (to (c c a)) (rate s * pc0 * pc1 * pa2 * k))
  (mutate (from (c c t)) (to (c c c)) (rate s * pc0 * pc1 * pc2))
  (mutate (from (c c t)) (to (c c g)) (rate s * pc0 * pc1 * pg2 * k))
  (mutate (from (c c t)) (to (c a t)) (rate n * pc0 * pa1 * pt2 * k))
  (mutate (from (c c t)) (to (a c t)) (rate n * pa0 * pc1 * pt2 * k))
  (mutate (from (c c t)) (to (c c t)) (rate ~k * ((# s) * ((# pc0) * (# pc1) * (# pa2) + (# pc0) * (# pc1) * (# pg2)) + (# n) * ((# pa0) * (# pc1) * (# pt2) + (# pg0) * (# pc1) * (# pt2) + (# pc0) * (# pa1) * (# pt2) + (# pc0) * (# pg1) * (# pt2)))))
  (mutate (from (c c t)) (to (g c t)) (rate n * pg0 * pc1 * pt2 * k))
  (mutate (from (c c t)) (to (t c t)) (rate n * pt0 * pc1 * pt2))
  (mutate (from (c c t)) (to (c g t)) (rate n * pc0 * pg1 * pt2 * k))
  (mutate (from (c c t)) (to (c t t)) (rate n * pc0 * pt1 * pt2))
  (mutate (from (g c t)) (to (g c a)) (rate s * pg0 * pc1 * pa2 * k))
  (mutate (from (g c t)) (to (g c c)) (rate s * pg0 * pc1 * pc2))
  (mutate (from (g c t)) (to (g c g)) (rate s * pg0 * pc1 * pg2 * k))
  (mutate (from (g c t)) (to (g a t)) (rate n * pg0 * pa1 * pt2 * k))
  (mutate (from (g c t)) (to (a c t)) (rate n * pa0 * pc1 * pt2))
  (mutate (from (g c t)) (to (c c t)) (rate n * pc0 * pc1 * pt2 * k))
  (mutate (from (g c t)) (to (g c t)) (rate ~k * ((# s) * ((# pg0) * (# pc1) * (# pa2) + (# pg0) * (# pc1) * (# pg2)) + (# n) * ((# pc0) * (# pc1) * (# pt2) + (# pt0) * (# pc1) * (# pt2) + (# pg0) * (# pa1) * (# pt2) + (# pg0) * (# pg1) * (# pt2)))))
  (mutate (from (g c t)) (to (t c t)) (rate n * pt0 * pc1 * pt2 * k))
  (mutate (from (g c t)) (to (g g t)) (rate n * pg0 * pg1 * pt2 * k))
  (mutate (from (g c t)) (to (g t t)) (rate n * pg0 * pt1 * pt2))
  (mutate (from (t c t)) (to (t c a)) (rate s * pt0 * pc1 * pa2 * k))
  (mutate (from (t c t)) (to (t c c)) (rate s * pt0 * pc1 * pc2))
  (mutate (from (t c t)) (to (t c g)) (rate s * pt0 * pc1 * pg2 * k))
  (mutate (from (t c t)) (to (t a t)) (rate n * pt0 * pa1 * pt2 * k))
  (mutate (from (t c t)) (to (a c t)) (rate n * pa0 * pc1 * pt2 * k))
  (mutate (from (t c t)) (to (c c t)) (rate n * pc0 * pc1 * pt2))
  (mutate (from (t c t)) (to (g c t)) (rate n * pg0 * pc1 * pt2 * k))
  (mutate (from (t c t)) (to (t c t)) (rate ~k * ((# s) * ((# pt0) * (# pc1) * (# pa2) + (# pt0) * (# pc1) * (# pg2)) + (# n) * ((# pa0) * (# pc1) * (# pt2) + (# pg0) * (# pc1) * (# pt2) + (# pt0) * (# pa1) * (# pt2) + (# pt0) * (# pg1) * (# pt2)))))
  (mutate (from (t c t)) (to (t g t)) (rate n * pt0 * pg1 * pt2 * k))
  (mutate (from (t c t)) (to (t t t)) (rate n * pt0 * pt1 * pt2))
  (mutate (from (a g t)) (to (a g a)) (rate n * pa0 * pg1 * pa2 * k))
  (mutate (from (a g t)) (to (a g c)) (rate s * pa0 * pg1 * pc2))
  (mutate (from (a g t)) (to (a g g)) (rate n * pa0 * pg1 * pg2 * k))
  (mutate (from (a g t)) (to (a a t)) (rate n * pa0 * pa1 * pt2))
  (mutate (from (a g t)) (to (a c t)) (rate n * pa0 * pc1 * pt2 * k))
  (mutate (from (a g t)) (to (a g t)) (rate ~k * (# n) * ((# pc0) * (# pg1) * (# pt2) + (# pt0) * (# pg1) * (# pt2) + (# pa0) * (# pc1) * (# pt2) + (# pa0) * (# pt1) * (# pt2) + (# pa0) * (# pg1) * (# pa2) + (# pa0) * (# pg1) * (# pg2))))
  (mutate (from (a g t)) (to (c g t)) (rate n * pc0 * pg1 * pt2 * k))
  (mutate (from (a g t)) (to (g g t)) (rate n * pg0 * pg1 * pt2))
  (mutate (from (a g t)) (to (t g t)) (rate n * pt0 * pg1 * pt2 * k))
  (mutate (from (a g t)) (to (a t t)) (rate n * pa0 * pt1 * pt2 * k))
  (mutate (from (c g t)) (to (c g a)) (rate s * pc0 * pg1 * pa2 * k))
  (mutate (from (c g t)) (to (c g c)) (rate s * pc0 * pg1 * pc2))
  (mutate (from (c g t)) (to (c g g)) (rate s * pc0 * pg1 * pg2 * k))
  (mutate (from (c g t)) (to (c a t)) (rate n * pc0 * pa1 * pt2))
  (mutate (from (c g t)) (to (c c t)) (rate n * pc0 * pc1 * pt2 * k))
  (mutate (from (c g t)) (to (a g t)) (rate n * pa0 * pg1 * pt2 * k))
  (mutate (from (c g t)) (to (c g t)) (rate ~k * ((# s) * ((# pc0) * (# pg1) * (# pa2) + (# pc0) * (# pg1) * (# pg2)) + (# n) * ((# pa0) * (# pg1) * (# pt2) + (# pg0) * (# pg1) * (# pt2) + (# pc0) * (# pc1) * (# pt2) + (# pc0) * (# pt1) * (# pt2)))))
  (mutate (from (c g t)) (to (g g t)) (rate n * pg0 * pg1 * pt2 * k))
  (mutate (from (c g t)) (to (t g t)) (rate n * pt0 * pg1 * pt2))
  (mutate (from (c g t)) (to (c t t)) (rate n * pc0 * pt1 * pt2 * k))
  (mutate (from (g g t)) (to (g g a)) (rate s * pg0 * pg1 * pa2 * k))
  (mutate (from (g g t)) (to (g g c)) (rate s * pg0 * pg1 * pc2))
  (mutate (from (g g t)) (to (g g g)) (rate s * pg0 * pg1 * pg2 * k))
  (mutate (from (g g t)) (to (g a t)) (rate n * pg0 * pa1 * pt2))
  (mutate (from (g g t)) (to (g c t)) (rate n * pg0 * pc1 * pt2 * k))
  (mutate (from (g g t)) (to (a g t)) (rate n * pa0 * pg1 * pt2))
  (mutate (from (g g t)) (to (c g t)) (rate n * pc0 * pg1 * pt2 * k))
  (mutate (from (g g t)) (to (g g t)) (rate ~k * ((# s) * ((# pg0) * (# pg1) * (# pa2) + (# pg0) * (# pg1) * (# pg2)) + (# n) * ((# pc0) * (# pg1) * (# pt2) + (# pt0) * (# pg1) * (# pt2) + (# pg0) * (# pc1) * (# pt2) + (# pg0) * (# pt1) * (# pt2)))))
  (mutate (from (g g t)) (to (t g t)) (rate n * pt0 * pg1 * pt2 * k))
  (mutate (from (g g t)) (to (g t t)) (rate n * pg0 * pt1 * pt2 * k))
  (mutate (from (t g t)) (to (t g c)) (rate s * pt0 * pg1 * pc2))
  (mutate (from (t g t)) (to (t g g)) (rate n * pt0 * pg1 * pg2 * k))
  (mutate (from (t g t)) (to (t a t)) (rate n * pt0 * pa1 * pt2))
  (mutate (from (t g t)) (to (t c t)) (rate n * pt0 * pc1 * pt2 * k))
  (mutate (from (t g t)) (to (a g t)) (rate n * pa0 * pg1 * pt2 * k))
  (mutate (from (t g t)) (to (c g t)) (rate n * pc0 * pg1 * pt2))
  (mutate (from (t g t)) (to (g g t)) (rate n * pg0 * pg1 * pt2 * k))
  (mutate (from (t g t)) (to (t g t)) (rate ~k * (# n) * ((# pa0) * (# pg1) * (# pt2) + (# pg0) * (# pg1) * (# pt2) + (# pt0) * (# pc1) * (# pt2) + (# pt0) * (# pt1) * (# pt2) + (# pt0) * (# pg1) * (# pg2))))
  (mutate (from (t g t)) (to (t t t)) (rate n * pt0 * pt1 * pt2 * k))
  (mutate (from (a t t)) (to (a t a)) (rate s * pa0 * pt1 * pa2 * k))
  (mutate (from (a t t)) (to (a t c)) (rate s * pa0 * pt1 * pc2))
  (mutate (from (a t t)) (to (a t g)) (rate n * pa0 * pt1 * pg2 * k))
  (mutate (from (a t t)) (to (a a t)) (rate n * pa0 * pa1 * pt2 * k))
  (mutate (from (a t t)) (to (a c t)) (rate n * pa0 * pc1 * pt2))
  (mutate (from (a t t)) (to (a g t)) (rate n * pa0 * pg1 * pt2 * k))
  (mutate (from (a t t)) (to (a t t)) (rate ~k * ((# s) * (# pa0) * (# pt1) * (# pa2) + (# n) * ((# pc0) * (# pt1) * (# pt2) + (# pt0) * (# pt1) * (# pt2) + (# pa0) * (# pa1) * (# pt2) + (# pa0) * (# pg1) * (# pt2) + (# pa0) * (# pt1) * (# pg2)))))
  (mutate (from (a t t)) (to (c t t)) (rate n * pc0 * pt1 * pt2 * k))
  (mutate (from (a t t)) (to (g t t)) (rate n * pg0 * pt1 * pt2))
  (mutate (from (a t t)) (to (t t t)) (rate n * pt0 * pt1 * pt2 * k))
  (mutate (from (c t t)) (to (c t a)) (rate s * pc0 * pt1 * pa2 * k))
  (mutate (from (c t t)) (to (c t c)) (rate s * pc0 * pt1 * pc2))
  (mutate (from (c t t)) (to (c t g)) (rate s * pc0 * pt1 * pg2 * k))
  (mutate (from (c t t)) (to (c a t)) (rate n * pc0 * pa1 * pt2 * k))
  (mutate (from (c t t)) (to (c c t)) (rate n * pc0 * pc1 * pt2))
  (mutate (from (c t t)) (to (c g t)) (rate n * pc0 * pg1 * pt2 * k))
  (mutate (from (c t t)) (to (a t t)) (rate n * pa0 * pt1 * pt2 * k))
  (mutate (from (c t t)) (to (c t t)) (rate ~k * ((# s) * ((# pc0) * (# pt1) * (# pa2) + (# pc0) * (# pt1) * (# pg2)) + (# n) * ((# pa0) * (# pt1) * (# pt2) + (# pg0) * (# pt1) * (# pt2) + (# pc0) * (# pa1) * (# pt2) + (# pc0) * (# pg1) * (# pt2)))))
  (mutate (from (c t t)) (to (g t t)) (rate n * pg0 * pt1 * pt2 * k))
  (mutate (from (c t t)) (to (t t t)) (rate n * pt0 * pt1 * pt2))
  (mutate (from (g t t)) (to (g t a)) (rate s * pg0 * pt1 * pa2 * k))
  (mutate (from (g t t)) (to (g t c)) (rate s * pg0 * pt1 * pc2))
  (mutate (from (g t t)) (to (g t g)) (rate s * pg0 * pt1 * pg2 * k))
  (mutate (from (g t t)) (to (g a t)) (rate n * pg0 * pa1 * pt2 * k))
  (mutate (from (g t t)) (to (g c t)) (rate n * pg0 * pc1 * pt2))
  (mutate (from (g t t)) (to (g g t)) (rate n * pg0 * pg1 * pt2 * k))
  (mutate (from (g t t)) (to (a t t)) (rate n * pa0 * pt1 * pt2))
  (mutate (from (g t t)) (to (c t t)) (rate n * pc0 * pt1 * pt2 * k))
  (mutate (from (g t t)) (to (g t t)) (rate ~k * ((# s) * ((# pg0) * (# pt1) * (# pa2) + (# pg0) * (# pt1) * (# pg2)) + (# n) * ((# pc0) * (# pt1) * (# pt2) + (# pt0) * (# pt1) * (# pt2) + (# pg0) * (# pa1) * (# pt2) + (# pg0) * (# pg1) * (# pt2)))))
  (mutate (from (g t t)) (to (t t t)) (rate n * pt0 * pt1 * pt2 * k))
  (mutate (from (t t t)) (to (t t a)) (rate n * pt0 * pt1 * pa2 * k))
  (mutate (from (t t t)) (to (t t c)) (rate s * pt0 * pt1 * pc2))
  (mutate (from (t t t)) (to (t t g)) (rate n * pt0 * pt1 * pg2 * k))
  (mutate (from (t t t)) (to (t a t)) (rate n * pt0 * pa1 * pt2 * k))
  (mutate (from (t t t)) (to (t c t)) (rate n * pt0 * pc1 * pt2))
  (mutate (from (t t t)) (to (t g t)) (rate n * pt0 * pg1 * pt2 * k))
  (mutate (from (t t t)) (to (a t t)) (rate n * pa0 * pt1 * pt2 * k))
  (mutate (from (t t t)) (to (c t t)) (rate n * pc0 * pt1 * pt2))
  (mutate (from (t t t)) (to (g t t)) (rate n * pg0 * pt1 * pt2 * k))
  (mutate (from (t t t)) (to (t t t)) (rate ~k * (# n) * ((# pa0) * (# pt1) * (# pt2) + (# pg0) * (# pt1) * (# pt2) + (# pt0) * (# pa1) * (# pt2) + (# pt0) * (# pg1) * (# pt2) + (# pt0) * (# pt1) * (# pa2) + (# pt0) * (# pt1) * (# pg2))))
 )  ;; end hybrid chain COD0 COD1 COD2

)  ;; end grammar CodeML_sn_f4x3

;; Alphabet DNA
;;
(alphabet
 (name DNA)
 (token (a c g t))
 (complement (t g c a))
 (extend (to n) (from a) (from c) (from g) (from t))
 (extend (to x) (from a) (from c) (from g) (from t))
 (extend (to u) (from t))
 (extend (to r) (from a) (from g))
 (extend (to y) (from c) (from t))
 (extend (to m) (from a) (from c))
 (extend (to k) (from g) (from t))
 (extend (to s) (from c) (from g))
 (extend (to w) (from a) (from t))
 (extend (to h) (from a) (from c) (from t))
 (extend (to b) (from c) (from g) (from t))
 (extend (to v) (from a) (from c) (from g))
 (extend (to d) (from a) (from g) (from t))
 (wildcard *)
)  ;; end alphabet DNA

