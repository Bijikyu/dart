;; Grammar Ancestral_GC_content
;;
(grammar
 (name Ancestral_GC_content)
 (parametric)
 (update-rates 1)
 (update-rules 1)

 ;; Nonterminal declarations and modifiers

 (nonterminal (name START))
 (nonterminal (name EMIT))

 ;; Transformation rules for grammar symbols

 ;; Nonterminal START
 ;;
 (transform (from (START)) (to ()) (prob ~ext))
 (transform (from (START)) (to (EMIT)) (prob ext))

 ;; Nonterminal EMIT
 ;;
 (transform (from (EMIT)) (to (COD0 COD1 COD2 EMIT*)) (gaps-ok))
 (transform (from (EMIT*)) (to ()) (prob ~ext))
 (transform (from (EMIT*)) (to (EMIT)) (prob ext))

 ;; Probability and rate parameters

 (pgroup
  ((ext 0.5)
   (~ext 0.5))
  ((pa0 0.25)
   (pc0 0.25)
   (pg0 0.25)
   (pt0 0.25))
  ((pa1 0.25)
   (pc1 0.25)
   (pg1 0.25)
   (pt1 0.25))
  ((pa2 0.25)
   (pc2 0.25)
   (pg2 0.25)
   (pt2 0.25))
  )  ;; end pgroup

 (rate
  (Rsi 1)
  (Rsv 1)
  (Rni 1)
  (Rnv 1)
  )  ;; end rate

 ;; Markov chain substitution models

 (chain
  (update-policy parametric)
  (terminal (COD0 COD1 COD2))

  ;; initial probability distribution
  (initial (state (a a a)) (prob pa0 * pa1 * pa2))
  (initial (state (c a a)) (prob pc0 * pa1 * pa2))
  (initial (state (g a a)) (prob pg0 * pa1 * pa2))
  (initial (state (a c a)) (prob pa0 * pc1 * pa2))
  (initial (state (c c a)) (prob pc0 * pc1 * pa2))
  (initial (state (g c a)) (prob pg0 * pc1 * pa2))
  (initial (state (t c a)) (prob pt0 * pc1 * pa2))
  (initial (state (a g a)) (prob pa0 * pg1 * pa2))
  (initial (state (c g a)) (prob pc0 * pg1 * pa2))
  (initial (state (g g a)) (prob pg0 * pg1 * pa2))
  (initial (state (a t a)) (prob pa0 * pt1 * pa2))
  (initial (state (c t a)) (prob pc0 * pt1 * pa2))
  (initial (state (g t a)) (prob pg0 * pt1 * pa2))
  (initial (state (t t a)) (prob pt0 * pt1 * pa2))
  (initial (state (a a c)) (prob pa0 * pa1 * pc2))
  (initial (state (c a c)) (prob pc0 * pa1 * pc2))
  (initial (state (g a c)) (prob pg0 * pa1 * pc2))
  (initial (state (t a c)) (prob pt0 * pa1 * pc2))
  (initial (state (a c c)) (prob pa0 * pc1 * pc2))
  (initial (state (c c c)) (prob pc0 * pc1 * pc2))
  (initial (state (g c c)) (prob pg0 * pc1 * pc2))
  (initial (state (t c c)) (prob pt0 * pc1 * pc2))
  (initial (state (a g c)) (prob pa0 * pg1 * pc2))
  (initial (state (c g c)) (prob pc0 * pg1 * pc2))
  (initial (state (g g c)) (prob pg0 * pg1 * pc2))
  (initial (state (t g c)) (prob pt0 * pg1 * pc2))
  (initial (state (a t c)) (prob pa0 * pt1 * pc2))
  (initial (state (c t c)) (prob pc0 * pt1 * pc2))
  (initial (state (g t c)) (prob pg0 * pt1 * pc2))
  (initial (state (t t c)) (prob pt0 * pt1 * pc2))
  (initial (state (a a g)) (prob pa0 * pa1 * pg2))
  (initial (state (c a g)) (prob pc0 * pa1 * pg2))
  (initial (state (g a g)) (prob pg0 * pa1 * pg2))
  (initial (state (a c g)) (prob pa0 * pc1 * pg2))
  (initial (state (c c g)) (prob pc0 * pc1 * pg2))
  (initial (state (g c g)) (prob pg0 * pc1 * pg2))
  (initial (state (t c g)) (prob pt0 * pc1 * pg2))
  (initial (state (a g g)) (prob pa0 * pg1 * pg2))
  (initial (state (c g g)) (prob pc0 * pg1 * pg2))
  (initial (state (g g g)) (prob pg0 * pg1 * pg2))
  (initial (state (t g g)) (prob pt0 * pg1 * pg2))
  (initial (state (a t g)) (prob pa0 * pt1 * pg2))
  (initial (state (c t g)) (prob pc0 * pt1 * pg2))
  (initial (state (g t g)) (prob pg0 * pt1 * pg2))
  (initial (state (t t g)) (prob pt0 * pt1 * pg2))
  (initial (state (a a t)) (prob pa0 * pa1 * pt2))
  (initial (state (c a t)) (prob pc0 * pa1 * pt2))
  (initial (state (g a t)) (prob pg0 * pa1 * pt2))
  (initial (state (t a t)) (prob pt0 * pa1 * pt2))
  (initial (state (a c t)) (prob pa0 * pc1 * pt2))
  (initial (state (c c t)) (prob pc0 * pc1 * pt2))
  (initial (state (g c t)) (prob pg0 * pc1 * pt2))
  (initial (state (t c t)) (prob pt0 * pc1 * pt2))
  (initial (state (a g t)) (prob pa0 * pg1 * pt2))
  (initial (state (c g t)) (prob pc0 * pg1 * pt2))
  (initial (state (g g t)) (prob pg0 * pg1 * pt2))
  (initial (state (t g t)) (prob pt0 * pg1 * pt2))
  (initial (state (a t t)) (prob pa0 * pt1 * pt2))
  (initial (state (c t t)) (prob pc0 * pt1 * pt2))
  (initial (state (g t t)) (prob pg0 * pt1 * pt2))
  (initial (state (t t t)) (prob pt0 * pt1 * pt2))

  ;; mutation rates
  (mutate (from (a a a)) (to (c a a)) (rate Rnv * pc0 * pa1 * pa2))
  (mutate (from (a a a)) (to (g a a)) (rate Rni * pg0 * pa1 * pa2))
  (mutate (from (a a a)) (to (a c a)) (rate Rnv * pa0 * pc1 * pa2))
  (mutate (from (a a a)) (to (a g a)) (rate Rni * pa0 * pg1 * pa2))
  (mutate (from (a a a)) (to (a t a)) (rate Rnv * pa0 * pt1 * pa2))
  (mutate (from (a a a)) (to (a a c)) (rate Rnv * pa0 * pa1 * pc2))
  (mutate (from (a a a)) (to (a a g)) (rate Rsi * pa0 * pa1 * pg2))
  (mutate (from (a a a)) (to (a a t)) (rate Rnv * pa0 * pa1 * pt2))
  (mutate (from (c a a)) (to (a a a)) (rate Rnv * pa0 * pa1 * pa2))
  (mutate (from (c a a)) (to (g a a)) (rate Rnv * pg0 * pa1 * pa2))
  (mutate (from (c a a)) (to (c c a)) (rate Rnv * pc0 * pc1 * pa2))
  (mutate (from (c a a)) (to (c g a)) (rate Rni * pc0 * pg1 * pa2))
  (mutate (from (c a a)) (to (c t a)) (rate Rnv * pc0 * pt1 * pa2))
  (mutate (from (c a a)) (to (c a c)) (rate Rnv * pc0 * pa1 * pc2))
  (mutate (from (c a a)) (to (c a g)) (rate Rsi * pc0 * pa1 * pg2))
  (mutate (from (c a a)) (to (c a t)) (rate Rnv * pc0 * pa1 * pt2))
  (mutate (from (g a a)) (to (a a a)) (rate Rni * pa0 * pa1 * pa2))
  (mutate (from (g a a)) (to (c a a)) (rate Rnv * pc0 * pa1 * pa2))
  (mutate (from (g a a)) (to (g c a)) (rate Rnv * pg0 * pc1 * pa2))
  (mutate (from (g a a)) (to (g g a)) (rate Rni * pg0 * pg1 * pa2))
  (mutate (from (g a a)) (to (g t a)) (rate Rnv * pg0 * pt1 * pa2))
  (mutate (from (g a a)) (to (g a c)) (rate Rnv * pg0 * pa1 * pc2))
  (mutate (from (g a a)) (to (g a g)) (rate Rsi * pg0 * pa1 * pg2))
  (mutate (from (g a a)) (to (g a t)) (rate Rnv * pg0 * pa1 * pt2))
  (mutate (from (a c a)) (to (a a a)) (rate Rnv * pa0 * pa1 * pa2))
  (mutate (from (a c a)) (to (c c a)) (rate Rnv * pc0 * pc1 * pa2))
  (mutate (from (a c a)) (to (g c a)) (rate Rni * pg0 * pc1 * pa2))
  (mutate (from (a c a)) (to (t c a)) (rate Rnv * pt0 * pc1 * pa2))
  (mutate (from (a c a)) (to (a g a)) (rate Rnv * pa0 * pg1 * pa2))
  (mutate (from (a c a)) (to (a t a)) (rate Rni * pa0 * pt1 * pa2))
  (mutate (from (a c a)) (to (a c c)) (rate Rsv * pa0 * pc1 * pc2))
  (mutate (from (a c a)) (to (a c g)) (rate Rsi * pa0 * pc1 * pg2))
  (mutate (from (a c a)) (to (a c t)) (rate Rsv * pa0 * pc1 * pt2))
  (mutate (from (c c a)) (to (c a a)) (rate Rnv * pc0 * pa1 * pa2))
  (mutate (from (c c a)) (to (a c a)) (rate Rnv * pa0 * pc1 * pa2))
  (mutate (from (c c a)) (to (g c a)) (rate Rnv * pg0 * pc1 * pa2))
  (mutate (from (c c a)) (to (t c a)) (rate Rni * pt0 * pc1 * pa2))
  (mutate (from (c c a)) (to (c g a)) (rate Rnv * pc0 * pg1 * pa2))
  (mutate (from (c c a)) (to (c t a)) (rate Rni * pc0 * pt1 * pa2))
  (mutate (from (c c a)) (to (c c c)) (rate Rsv * pc0 * pc1 * pc2))
  (mutate (from (c c a)) (to (c c g)) (rate Rsi * pc0 * pc1 * pg2))
  (mutate (from (c c a)) (to (c c t)) (rate Rsv * pc0 * pc1 * pt2))
  (mutate (from (g c a)) (to (g a a)) (rate Rnv * pg0 * pa1 * pa2))
  (mutate (from (g c a)) (to (a c a)) (rate Rni * pa0 * pc1 * pa2))
  (mutate (from (g c a)) (to (c c a)) (rate Rnv * pc0 * pc1 * pa2))
  (mutate (from (g c a)) (to (t c a)) (rate Rnv * pt0 * pc1 * pa2))
  (mutate (from (g c a)) (to (g g a)) (rate Rnv * pg0 * pg1 * pa2))
  (mutate (from (g c a)) (to (g t a)) (rate Rni * pg0 * pt1 * pa2))
  (mutate (from (g c a)) (to (g c c)) (rate Rsv * pg0 * pc1 * pc2))
  (mutate (from (g c a)) (to (g c g)) (rate Rsi * pg0 * pc1 * pg2))
  (mutate (from (g c a)) (to (g c t)) (rate Rsv * pg0 * pc1 * pt2))
  (mutate (from (t c a)) (to (a c a)) (rate Rnv * pa0 * pc1 * pa2))
  (mutate (from (t c a)) (to (c c a)) (rate Rni * pc0 * pc1 * pa2))
  (mutate (from (t c a)) (to (g c a)) (rate Rnv * pg0 * pc1 * pa2))
  (mutate (from (t c a)) (to (t t a)) (rate Rni * pt0 * pt1 * pa2))
  (mutate (from (t c a)) (to (t c c)) (rate Rsv * pt0 * pc1 * pc2))
  (mutate (from (t c a)) (to (t c g)) (rate Rsi * pt0 * pc1 * pg2))
  (mutate (from (t c a)) (to (t c t)) (rate Rsv * pt0 * pc1 * pt2))
  (mutate (from (a g a)) (to (a a a)) (rate Rni * pa0 * pa1 * pa2))
  (mutate (from (a g a)) (to (a c a)) (rate Rnv * pa0 * pc1 * pa2))
  (mutate (from (a g a)) (to (c g a)) (rate Rsv * pc0 * pg1 * pa2))
  (mutate (from (a g a)) (to (g g a)) (rate Rni * pg0 * pg1 * pa2))
  (mutate (from (a g a)) (to (a t a)) (rate Rnv * pa0 * pt1 * pa2))
  (mutate (from (a g a)) (to (a g c)) (rate Rnv * pa0 * pg1 * pc2))
  (mutate (from (a g a)) (to (a g g)) (rate Rsi * pa0 * pg1 * pg2))
  (mutate (from (a g a)) (to (a g t)) (rate Rnv * pa0 * pg1 * pt2))
  (mutate (from (c g a)) (to (c a a)) (rate Rni * pc0 * pa1 * pa2))
  (mutate (from (c g a)) (to (c c a)) (rate Rnv * pc0 * pc1 * pa2))
  (mutate (from (c g a)) (to (a g a)) (rate Rsv * pa0 * pg1 * pa2))
  (mutate (from (c g a)) (to (g g a)) (rate Rnv * pg0 * pg1 * pa2))
  (mutate (from (c g a)) (to (c t a)) (rate Rnv * pc0 * pt1 * pa2))
  (mutate (from (c g a)) (to (c g c)) (rate Rsv * pc0 * pg1 * pc2))
  (mutate (from (c g a)) (to (c g g)) (rate Rsi * pc0 * pg1 * pg2))
  (mutate (from (c g a)) (to (c g t)) (rate Rsv * pc0 * pg1 * pt2))
  (mutate (from (g g a)) (to (g a a)) (rate Rni * pg0 * pa1 * pa2))
  (mutate (from (g g a)) (to (g c a)) (rate Rnv * pg0 * pc1 * pa2))
  (mutate (from (g g a)) (to (a g a)) (rate Rni * pa0 * pg1 * pa2))
  (mutate (from (g g a)) (to (c g a)) (rate Rnv * pc0 * pg1 * pa2))
  (mutate (from (g g a)) (to (g t a)) (rate Rnv * pg0 * pt1 * pa2))
  (mutate (from (g g a)) (to (g g c)) (rate Rsv * pg0 * pg1 * pc2))
  (mutate (from (g g a)) (to (g g g)) (rate Rsi * pg0 * pg1 * pg2))
  (mutate (from (g g a)) (to (g g t)) (rate Rsv * pg0 * pg1 * pt2))
  (mutate (from (a t a)) (to (a a a)) (rate Rnv * pa0 * pa1 * pa2))
  (mutate (from (a t a)) (to (a c a)) (rate Rni * pa0 * pc1 * pa2))
  (mutate (from (a t a)) (to (a g a)) (rate Rnv * pa0 * pg1 * pa2))
  (mutate (from (a t a)) (to (c t a)) (rate Rnv * pc0 * pt1 * pa2))
  (mutate (from (a t a)) (to (g t a)) (rate Rni * pg0 * pt1 * pa2))
  (mutate (from (a t a)) (to (t t a)) (rate Rnv * pt0 * pt1 * pa2))
  (mutate (from (a t a)) (to (a t c)) (rate Rsv * pa0 * pt1 * pc2))
  (mutate (from (a t a)) (to (a t g)) (rate Rni * pa0 * pt1 * pg2))
  (mutate (from (a t a)) (to (a t t)) (rate Rsv * pa0 * pt1 * pt2))
  (mutate (from (c t a)) (to (c a a)) (rate Rnv * pc0 * pa1 * pa2))
  (mutate (from (c t a)) (to (c c a)) (rate Rni * pc0 * pc1 * pa2))
  (mutate (from (c t a)) (to (c g a)) (rate Rnv * pc0 * pg1 * pa2))
  (mutate (from (c t a)) (to (a t a)) (rate Rnv * pa0 * pt1 * pa2))
  (mutate (from (c t a)) (to (g t a)) (rate Rnv * pg0 * pt1 * pa2))
  (mutate (from (c t a)) (to (t t a)) (rate Rsi * pt0 * pt1 * pa2))
  (mutate (from (c t a)) (to (c t c)) (rate Rsv * pc0 * pt1 * pc2))
  (mutate (from (c t a)) (to (c t g)) (rate Rsi * pc0 * pt1 * pg2))
  (mutate (from (c t a)) (to (c t t)) (rate Rsv * pc0 * pt1 * pt2))
  (mutate (from (g t a)) (to (g a a)) (rate Rnv * pg0 * pa1 * pa2))
  (mutate (from (g t a)) (to (g c a)) (rate Rni * pg0 * pc1 * pa2))
  (mutate (from (g t a)) (to (g g a)) (rate Rnv * pg0 * pg1 * pa2))
  (mutate (from (g t a)) (to (a t a)) (rate Rni * pa0 * pt1 * pa2))
  (mutate (from (g t a)) (to (c t a)) (rate Rnv * pc0 * pt1 * pa2))
  (mutate (from (g t a)) (to (t t a)) (rate Rnv * pt0 * pt1 * pa2))
  (mutate (from (g t a)) (to (g t c)) (rate Rsv * pg0 * pt1 * pc2))
  (mutate (from (g t a)) (to (g t g)) (rate Rsi * pg0 * pt1 * pg2))
  (mutate (from (g t a)) (to (g t t)) (rate Rsv * pg0 * pt1 * pt2))
  (mutate (from (t t a)) (to (t c a)) (rate Rni * pt0 * pc1 * pa2))
  (mutate (from (t t a)) (to (a t a)) (rate Rnv * pa0 * pt1 * pa2))
  (mutate (from (t t a)) (to (c t a)) (rate Rsi * pc0 * pt1 * pa2))
  (mutate (from (t t a)) (to (g t a)) (rate Rnv * pg0 * pt1 * pa2))
  (mutate (from (t t a)) (to (t t c)) (rate Rnv * pt0 * pt1 * pc2))
  (mutate (from (t t a)) (to (t t g)) (rate Rsi * pt0 * pt1 * pg2))
  (mutate (from (t t a)) (to (t t t)) (rate Rnv * pt0 * pt1 * pt2))
  (mutate (from (a a c)) (to (a a a)) (rate Rnv * pa0 * pa1 * pa2))
  (mutate (from (a a c)) (to (c a c)) (rate Rnv * pc0 * pa1 * pc2))
  (mutate (from (a a c)) (to (g a c)) (rate Rni * pg0 * pa1 * pc2))
  (mutate (from (a a c)) (to (t a c)) (rate Rnv * pt0 * pa1 * pc2))
  (mutate (from (a a c)) (to (a c c)) (rate Rnv * pa0 * pc1 * pc2))
  (mutate (from (a a c)) (to (a g c)) (rate Rni * pa0 * pg1 * pc2))
  (mutate (from (a a c)) (to (a t c)) (rate Rnv * pa0 * pt1 * pc2))
  (mutate (from (a a c)) (to (a a g)) (rate Rnv * pa0 * pa1 * pg2))
  (mutate (from (a a c)) (to (a a t)) (rate Rsi * pa0 * pa1 * pt2))
  (mutate (from (c a c)) (to (c a a)) (rate Rnv * pc0 * pa1 * pa2))
  (mutate (from (c a c)) (to (a a c)) (rate Rnv * pa0 * pa1 * pc2))
  (mutate (from (c a c)) (to (g a c)) (rate Rnv * pg0 * pa1 * pc2))
  (mutate (from (c a c)) (to (t a c)) (rate Rni * pt0 * pa1 * pc2))
  (mutate (from (c a c)) (to (c c c)) (rate Rnv * pc0 * pc1 * pc2))
  (mutate (from (c a c)) (to (c g c)) (rate Rni * pc0 * pg1 * pc2))
  (mutate (from (c a c)) (to (c t c)) (rate Rnv * pc0 * pt1 * pc2))
  (mutate (from (c a c)) (to (c a g)) (rate Rnv * pc0 * pa1 * pg2))
  (mutate (from (c a c)) (to (c a t)) (rate Rsi * pc0 * pa1 * pt2))
  (mutate (from (g a c)) (to (g a a)) (rate Rnv * pg0 * pa1 * pa2))
  (mutate (from (g a c)) (to (a a c)) (rate Rni * pa0 * pa1 * pc2))
  (mutate (from (g a c)) (to (c a c)) (rate Rnv * pc0 * pa1 * pc2))
  (mutate (from (g a c)) (to (t a c)) (rate Rnv * pt0 * pa1 * pc2))
  (mutate (from (g a c)) (to (g c c)) (rate Rnv * pg0 * pc1 * pc2))
  (mutate (from (g a c)) (to (g g c)) (rate Rni * pg0 * pg1 * pc2))
  (mutate (from (g a c)) (to (g t c)) (rate Rnv * pg0 * pt1 * pc2))
  (mutate (from (g a c)) (to (g a g)) (rate Rnv * pg0 * pa1 * pg2))
  (mutate (from (g a c)) (to (g a t)) (rate Rsi * pg0 * pa1 * pt2))
  (mutate (from (t a c)) (to (a a c)) (rate Rnv * pa0 * pa1 * pc2))
  (mutate (from (t a c)) (to (c a c)) (rate Rni * pc0 * pa1 * pc2))
  (mutate (from (t a c)) (to (g a c)) (rate Rnv * pg0 * pa1 * pc2))
  (mutate (from (t a c)) (to (t c c)) (rate Rnv * pt0 * pc1 * pc2))
  (mutate (from (t a c)) (to (t g c)) (rate Rni * pt0 * pg1 * pc2))
  (mutate (from (t a c)) (to (t t c)) (rate Rnv * pt0 * pt1 * pc2))
  (mutate (from (t a c)) (to (t a t)) (rate Rsi * pt0 * pa1 * pt2))
  (mutate (from (a c c)) (to (a c a)) (rate Rsv * pa0 * pc1 * pa2))
  (mutate (from (a c c)) (to (a a c)) (rate Rnv * pa0 * pa1 * pc2))
  (mutate (from (a c c)) (to (c c c)) (rate Rnv * pc0 * pc1 * pc2))
  (mutate (from (a c c)) (to (g c c)) (rate Rni * pg0 * pc1 * pc2))
  (mutate (from (a c c)) (to (t c c)) (rate Rnv * pt0 * pc1 * pc2))
  (mutate (from (a c c)) (to (a g c)) (rate Rnv * pa0 * pg1 * pc2))
  (mutate (from (a c c)) (to (a t c)) (rate Rni * pa0 * pt1 * pc2))
  (mutate (from (a c c)) (to (a c g)) (rate Rsv * pa0 * pc1 * pg2))
  (mutate (from (a c c)) (to (a c t)) (rate Rsi * pa0 * pc1 * pt2))
  (mutate (from (c c c)) (to (c c a)) (rate Rsv * pc0 * pc1 * pa2))
  (mutate (from (c c c)) (to (c a c)) (rate Rnv * pc0 * pa1 * pc2))
  (mutate (from (c c c)) (to (a c c)) (rate Rnv * pa0 * pc1 * pc2))
  (mutate (from (c c c)) (to (g c c)) (rate Rnv * pg0 * pc1 * pc2))
  (mutate (from (c c c)) (to (t c c)) (rate Rni * pt0 * pc1 * pc2))
  (mutate (from (c c c)) (to (c g c)) (rate Rnv * pc0 * pg1 * pc2))
  (mutate (from (c c c)) (to (c t c)) (rate Rni * pc0 * pt1 * pc2))
  (mutate (from (c c c)) (to (c c g)) (rate Rsv * pc0 * pc1 * pg2))
  (mutate (from (c c c)) (to (c c t)) (rate Rsi * pc0 * pc1 * pt2))
  (mutate (from (g c c)) (to (g c a)) (rate Rsv * pg0 * pc1 * pa2))
  (mutate (from (g c c)) (to (g a c)) (rate Rnv * pg0 * pa1 * pc2))
  (mutate (from (g c c)) (to (a c c)) (rate Rni * pa0 * pc1 * pc2))
  (mutate (from (g c c)) (to (c c c)) (rate Rnv * pc0 * pc1 * pc2))
  (mutate (from (g c c)) (to (t c c)) (rate Rnv * pt0 * pc1 * pc2))
  (mutate (from (g c c)) (to (g g c)) (rate Rnv * pg0 * pg1 * pc2))
  (mutate (from (g c c)) (to (g t c)) (rate Rni * pg0 * pt1 * pc2))
  (mutate (from (g c c)) (to (g c g)) (rate Rsv * pg0 * pc1 * pg2))
  (mutate (from (g c c)) (to (g c t)) (rate Rsi * pg0 * pc1 * pt2))
  (mutate (from (t c c)) (to (t c a)) (rate Rsv * pt0 * pc1 * pa2))
  (mutate (from (t c c)) (to (t a c)) (rate Rnv * pt0 * pa1 * pc2))
  (mutate (from (t c c)) (to (a c c)) (rate Rnv * pa0 * pc1 * pc2))
  (mutate (from (t c c)) (to (c c c)) (rate Rni * pc0 * pc1 * pc2))
  (mutate (from (t c c)) (to (g c c)) (rate Rnv * pg0 * pc1 * pc2))
  (mutate (from (t c c)) (to (t g c)) (rate Rnv * pt0 * pg1 * pc2))
  (mutate (from (t c c)) (to (t t c)) (rate Rni * pt0 * pt1 * pc2))
  (mutate (from (t c c)) (to (t c g)) (rate Rsv * pt0 * pc1 * pg2))
  (mutate (from (t c c)) (to (t c t)) (rate Rsi * pt0 * pc1 * pt2))
  (mutate (from (a g c)) (to (a g a)) (rate Rnv * pa0 * pg1 * pa2))
  (mutate (from (a g c)) (to (a a c)) (rate Rni * pa0 * pa1 * pc2))
  (mutate (from (a g c)) (to (a c c)) (rate Rnv * pa0 * pc1 * pc2))
  (mutate (from (a g c)) (to (c g c)) (rate Rnv * pc0 * pg1 * pc2))
  (mutate (from (a g c)) (to (g g c)) (rate Rni * pg0 * pg1 * pc2))
  (mutate (from (a g c)) (to (t g c)) (rate Rnv * pt0 * pg1 * pc2))
  (mutate (from (a g c)) (to (a t c)) (rate Rnv * pa0 * pt1 * pc2))
  (mutate (from (a g c)) (to (a g g)) (rate Rnv * pa0 * pg1 * pg2))
  (mutate (from (a g c)) (to (a g t)) (rate Rsi * pa0 * pg1 * pt2))
  (mutate (from (c g c)) (to (c g a)) (rate Rsv * pc0 * pg1 * pa2))
  (mutate (from (c g c)) (to (c a c)) (rate Rni * pc0 * pa1 * pc2))
  (mutate (from (c g c)) (to (c c c)) (rate Rnv * pc0 * pc1 * pc2))
  (mutate (from (c g c)) (to (a g c)) (rate Rnv * pa0 * pg1 * pc2))
  (mutate (from (c g c)) (to (g g c)) (rate Rnv * pg0 * pg1 * pc2))
  (mutate (from (c g c)) (to (t g c)) (rate Rni * pt0 * pg1 * pc2))
  (mutate (from (c g c)) (to (c t c)) (rate Rnv * pc0 * pt1 * pc2))
  (mutate (from (c g c)) (to (c g g)) (rate Rsv * pc0 * pg1 * pg2))
  (mutate (from (c g c)) (to (c g t)) (rate Rsi * pc0 * pg1 * pt2))
  (mutate (from (g g c)) (to (g g a)) (rate Rsv * pg0 * pg1 * pa2))
  (mutate (from (g g c)) (to (g a c)) (rate Rni * pg0 * pa1 * pc2))
  (mutate (from (g g c)) (to (g c c)) (rate Rnv * pg0 * pc1 * pc2))
  (mutate (from (g g c)) (to (a g c)) (rate Rni * pa0 * pg1 * pc2))
  (mutate (from (g g c)) (to (c g c)) (rate Rnv * pc0 * pg1 * pc2))
  (mutate (from (g g c)) (to (t g c)) (rate Rnv * pt0 * pg1 * pc2))
  (mutate (from (g g c)) (to (g t c)) (rate Rnv * pg0 * pt1 * pc2))
  (mutate (from (g g c)) (to (g g g)) (rate Rsv * pg0 * pg1 * pg2))
  (mutate (from (g g c)) (to (g g t)) (rate Rsi * pg0 * pg1 * pt2))
  (mutate (from (t g c)) (to (t a c)) (rate Rni * pt0 * pa1 * pc2))
  (mutate (from (t g c)) (to (t c c)) (rate Rnv * pt0 * pc1 * pc2))
  (mutate (from (t g c)) (to (a g c)) (rate Rnv * pa0 * pg1 * pc2))
  (mutate (from (t g c)) (to (c g c)) (rate Rni * pc0 * pg1 * pc2))
  (mutate (from (t g c)) (to (g g c)) (rate Rnv * pg0 * pg1 * pc2))
  (mutate (from (t g c)) (to (t t c)) (rate Rnv * pt0 * pt1 * pc2))
  (mutate (from (t g c)) (to (t g g)) (rate Rnv * pt0 * pg1 * pg2))
  (mutate (from (t g c)) (to (t g t)) (rate Rsi * pt0 * pg1 * pt2))
  (mutate (from (a t c)) (to (a t a)) (rate Rsv * pa0 * pt1 * pa2))
  (mutate (from (a t c)) (to (a a c)) (rate Rnv * pa0 * pa1 * pc2))
  (mutate (from (a t c)) (to (a c c)) (rate Rni * pa0 * pc1 * pc2))
  (mutate (from (a t c)) (to (a g c)) (rate Rnv * pa0 * pg1 * pc2))
  (mutate (from (a t c)) (to (c t c)) (rate Rnv * pc0 * pt1 * pc2))
  (mutate (from (a t c)) (to (g t c)) (rate Rni * pg0 * pt1 * pc2))
  (mutate (from (a t c)) (to (t t c)) (rate Rnv * pt0 * pt1 * pc2))
  (mutate (from (a t c)) (to (a t g)) (rate Rnv * pa0 * pt1 * pg2))
  (mutate (from (a t c)) (to (a t t)) (rate Rsi * pa0 * pt1 * pt2))
  (mutate (from (c t c)) (to (c t a)) (rate Rsv * pc0 * pt1 * pa2))
  (mutate (from (c t c)) (to (c a c)) (rate Rnv * pc0 * pa1 * pc2))
  (mutate (from (c t c)) (to (c c c)) (rate Rni * pc0 * pc1 * pc2))
  (mutate (from (c t c)) (to (c g c)) (rate Rnv * pc0 * pg1 * pc2))
  (mutate (from (c t c)) (to (a t c)) (rate Rnv * pa0 * pt1 * pc2))
  (mutate (from (c t c)) (to (g t c)) (rate Rnv * pg0 * pt1 * pc2))
  (mutate (from (c t c)) (to (t t c)) (rate Rni * pt0 * pt1 * pc2))
  (mutate (from (c t c)) (to (c t g)) (rate Rsv * pc0 * pt1 * pg2))
  (mutate (from (c t c)) (to (c t t)) (rate Rsi * pc0 * pt1 * pt2))
  (mutate (from (g t c)) (to (g t a)) (rate Rsv * pg0 * pt1 * pa2))
  (mutate (from (g t c)) (to (g a c)) (rate Rnv * pg0 * pa1 * pc2))
  (mutate (from (g t c)) (to (g c c)) (rate Rni * pg0 * pc1 * pc2))
  (mutate (from (g t c)) (to (g g c)) (rate Rnv * pg0 * pg1 * pc2))
  (mutate (from (g t c)) (to (a t c)) (rate Rni * pa0 * pt1 * pc2))
  (mutate (from (g t c)) (to (c t c)) (rate Rnv * pc0 * pt1 * pc2))
  (mutate (from (g t c)) (to (t t c)) (rate Rnv * pt0 * pt1 * pc2))
  (mutate (from (g t c)) (to (g t g)) (rate Rsv * pg0 * pt1 * pg2))
  (mutate (from (g t c)) (to (g t t)) (rate Rsi * pg0 * pt1 * pt2))
  (mutate (from (t t c)) (to (t t a)) (rate Rnv * pt0 * pt1 * pa2))
  (mutate (from (t t c)) (to (t a c)) (rate Rnv * pt0 * pa1 * pc2))
  (mutate (from (t t c)) (to (t c c)) (rate Rni * pt0 * pc1 * pc2))
  (mutate (from (t t c)) (to (t g c)) (rate Rnv * pt0 * pg1 * pc2))
  (mutate (from (t t c)) (to (a t c)) (rate Rnv * pa0 * pt1 * pc2))
  (mutate (from (t t c)) (to (c t c)) (rate Rni * pc0 * pt1 * pc2))
  (mutate (from (t t c)) (to (g t c)) (rate Rnv * pg0 * pt1 * pc2))
  (mutate (from (t t c)) (to (t t g)) (rate Rnv * pt0 * pt1 * pg2))
  (mutate (from (t t c)) (to (t t t)) (rate Rsi * pt0 * pt1 * pt2))
  (mutate (from (a a g)) (to (a a a)) (rate Rsi * pa0 * pa1 * pa2))
  (mutate (from (a a g)) (to (a a c)) (rate Rnv * pa0 * pa1 * pc2))
  (mutate (from (a a g)) (to (c a g)) (rate Rnv * pc0 * pa1 * pg2))
  (mutate (from (a a g)) (to (g a g)) (rate Rni * pg0 * pa1 * pg2))
  (mutate (from (a a g)) (to (a c g)) (rate Rnv * pa0 * pc1 * pg2))
  (mutate (from (a a g)) (to (a g g)) (rate Rni * pa0 * pg1 * pg2))
  (mutate (from (a a g)) (to (a t g)) (rate Rnv * pa0 * pt1 * pg2))
  (mutate (from (a a g)) (to (a a t)) (rate Rnv * pa0 * pa1 * pt2))
  (mutate (from (c a g)) (to (c a a)) (rate Rsi * pc0 * pa1 * pa2))
  (mutate (from (c a g)) (to (c a c)) (rate Rnv * pc0 * pa1 * pc2))
  (mutate (from (c a g)) (to (a a g)) (rate Rnv * pa0 * pa1 * pg2))
  (mutate (from (c a g)) (to (g a g)) (rate Rnv * pg0 * pa1 * pg2))
  (mutate (from (c a g)) (to (c c g)) (rate Rnv * pc0 * pc1 * pg2))
  (mutate (from (c a g)) (to (c g g)) (rate Rni * pc0 * pg1 * pg2))
  (mutate (from (c a g)) (to (c t g)) (rate Rnv * pc0 * pt1 * pg2))
  (mutate (from (c a g)) (to (c a t)) (rate Rnv * pc0 * pa1 * pt2))
  (mutate (from (g a g)) (to (g a a)) (rate Rsi * pg0 * pa1 * pa2))
  (mutate (from (g a g)) (to (g a c)) (rate Rnv * pg0 * pa1 * pc2))
  (mutate (from (g a g)) (to (a a g)) (rate Rni * pa0 * pa1 * pg2))
  (mutate (from (g a g)) (to (c a g)) (rate Rnv * pc0 * pa1 * pg2))
  (mutate (from (g a g)) (to (g c g)) (rate Rnv * pg0 * pc1 * pg2))
  (mutate (from (g a g)) (to (g g g)) (rate Rni * pg0 * pg1 * pg2))
  (mutate (from (g a g)) (to (g t g)) (rate Rnv * pg0 * pt1 * pg2))
  (mutate (from (g a g)) (to (g a t)) (rate Rnv * pg0 * pa1 * pt2))
  (mutate (from (a c g)) (to (a c a)) (rate Rsi * pa0 * pc1 * pa2))
  (mutate (from (a c g)) (to (a c c)) (rate Rsv * pa0 * pc1 * pc2))
  (mutate (from (a c g)) (to (a a g)) (rate Rnv * pa0 * pa1 * pg2))
  (mutate (from (a c g)) (to (c c g)) (rate Rnv * pc0 * pc1 * pg2))
  (mutate (from (a c g)) (to (g c g)) (rate Rni * pg0 * pc1 * pg2))
  (mutate (from (a c g)) (to (t c g)) (rate Rnv * pt0 * pc1 * pg2))
  (mutate (from (a c g)) (to (a g g)) (rate Rnv * pa0 * pg1 * pg2))
  (mutate (from (a c g)) (to (a t g)) (rate Rni * pa0 * pt1 * pg2))
  (mutate (from (a c g)) (to (a c t)) (rate Rsv * pa0 * pc1 * pt2))
  (mutate (from (c c g)) (to (c c a)) (rate Rsi * pc0 * pc1 * pa2))
  (mutate (from (c c g)) (to (c c c)) (rate Rsv * pc0 * pc1 * pc2))
  (mutate (from (c c g)) (to (c a g)) (rate Rnv * pc0 * pa1 * pg2))
  (mutate (from (c c g)) (to (a c g)) (rate Rnv * pa0 * pc1 * pg2))
  (mutate (from (c c g)) (to (g c g)) (rate Rnv * pg0 * pc1 * pg2))
  (mutate (from (c c g)) (to (t c g)) (rate Rni * pt0 * pc1 * pg2))
  (mutate (from (c c g)) (to (c g g)) (rate Rnv * pc0 * pg1 * pg2))
  (mutate (from (c c g)) (to (c t g)) (rate Rni * pc0 * pt1 * pg2))
  (mutate (from (c c g)) (to (c c t)) (rate Rsv * pc0 * pc1 * pt2))
  (mutate (from (g c g)) (to (g c a)) (rate Rsi * pg0 * pc1 * pa2))
  (mutate (from (g c g)) (to (g c c)) (rate Rsv * pg0 * pc1 * pc2))
  (mutate (from (g c g)) (to (g a g)) (rate Rnv * pg0 * pa1 * pg2))
  (mutate (from (g c g)) (to (a c g)) (rate Rni * pa0 * pc1 * pg2))
  (mutate (from (g c g)) (to (c c g)) (rate Rnv * pc0 * pc1 * pg2))
  (mutate (from (g c g)) (to (t c g)) (rate Rnv * pt0 * pc1 * pg2))
  (mutate (from (g c g)) (to (g g g)) (rate Rnv * pg0 * pg1 * pg2))
  (mutate (from (g c g)) (to (g t g)) (rate Rni * pg0 * pt1 * pg2))
  (mutate (from (g c g)) (to (g c t)) (rate Rsv * pg0 * pc1 * pt2))
  (mutate (from (t c g)) (to (t c a)) (rate Rsi * pt0 * pc1 * pa2))
  (mutate (from (t c g)) (to (t c c)) (rate Rsv * pt0 * pc1 * pc2))
  (mutate (from (t c g)) (to (a c g)) (rate Rnv * pa0 * pc1 * pg2))
  (mutate (from (t c g)) (to (c c g)) (rate Rni * pc0 * pc1 * pg2))
  (mutate (from (t c g)) (to (g c g)) (rate Rnv * pg0 * pc1 * pg2))
  (mutate (from (t c g)) (to (t g g)) (rate Rnv * pt0 * pg1 * pg2))
  (mutate (from (t c g)) (to (t t g)) (rate Rni * pt0 * pt1 * pg2))
  (mutate (from (t c g)) (to (t c t)) (rate Rsv * pt0 * pc1 * pt2))
  (mutate (from (a g g)) (to (a g a)) (rate Rsi * pa0 * pg1 * pa2))
  (mutate (from (a g g)) (to (a g c)) (rate Rnv * pa0 * pg1 * pc2))
  (mutate (from (a g g)) (to (a a g)) (rate Rni * pa0 * pa1 * pg2))
  (mutate (from (a g g)) (to (a c g)) (rate Rnv * pa0 * pc1 * pg2))
  (mutate (from (a g g)) (to (c g g)) (rate Rsv * pc0 * pg1 * pg2))
  (mutate (from (a g g)) (to (g g g)) (rate Rni * pg0 * pg1 * pg2))
  (mutate (from (a g g)) (to (t g g)) (rate Rnv * pt0 * pg1 * pg2))
  (mutate (from (a g g)) (to (a t g)) (rate Rnv * pa0 * pt1 * pg2))
  (mutate (from (a g g)) (to (a g t)) (rate Rnv * pa0 * pg1 * pt2))
  (mutate (from (c g g)) (to (c g a)) (rate Rsi * pc0 * pg1 * pa2))
  (mutate (from (c g g)) (to (c g c)) (rate Rsv * pc0 * pg1 * pc2))
  (mutate (from (c g g)) (to (c a g)) (rate Rni * pc0 * pa1 * pg2))
  (mutate (from (c g g)) (to (c c g)) (rate Rnv * pc0 * pc1 * pg2))
  (mutate (from (c g g)) (to (a g g)) (rate Rsv * pa0 * pg1 * pg2))
  (mutate (from (c g g)) (to (g g g)) (rate Rnv * pg0 * pg1 * pg2))
  (mutate (from (c g g)) (to (t g g)) (rate Rni * pt0 * pg1 * pg2))
  (mutate (from (c g g)) (to (c t g)) (rate Rnv * pc0 * pt1 * pg2))
  (mutate (from (c g g)) (to (c g t)) (rate Rsv * pc0 * pg1 * pt2))
  (mutate (from (g g g)) (to (g g a)) (rate Rsi * pg0 * pg1 * pa2))
  (mutate (from (g g g)) (to (g g c)) (rate Rsv * pg0 * pg1 * pc2))
  (mutate (from (g g g)) (to (g a g)) (rate Rni * pg0 * pa1 * pg2))
  (mutate (from (g g g)) (to (g c g)) (rate Rnv * pg0 * pc1 * pg2))
  (mutate (from (g g g)) (to (a g g)) (rate Rni * pa0 * pg1 * pg2))
  (mutate (from (g g g)) (to (c g g)) (rate Rnv * pc0 * pg1 * pg2))
  (mutate (from (g g g)) (to (t g g)) (rate Rnv * pt0 * pg1 * pg2))
  (mutate (from (g g g)) (to (g t g)) (rate Rnv * pg0 * pt1 * pg2))
  (mutate (from (g g g)) (to (g g t)) (rate Rsv * pg0 * pg1 * pt2))
  (mutate (from (t g g)) (to (t g c)) (rate Rnv * pt0 * pg1 * pc2))
  (mutate (from (t g g)) (to (t c g)) (rate Rnv * pt0 * pc1 * pg2))
  (mutate (from (t g g)) (to (a g g)) (rate Rnv * pa0 * pg1 * pg2))
  (mutate (from (t g g)) (to (c g g)) (rate Rni * pc0 * pg1 * pg2))
  (mutate (from (t g g)) (to (g g g)) (rate Rnv * pg0 * pg1 * pg2))
  (mutate (from (t g g)) (to (t t g)) (rate Rnv * pt0 * pt1 * pg2))
  (mutate (from (t g g)) (to (t g t)) (rate Rnv * pt0 * pg1 * pt2))
  (mutate (from (a t g)) (to (a t a)) (rate Rni * pa0 * pt1 * pa2))
  (mutate (from (a t g)) (to (a t c)) (rate Rnv * pa0 * pt1 * pc2))
  (mutate (from (a t g)) (to (a a g)) (rate Rnv * pa0 * pa1 * pg2))
  (mutate (from (a t g)) (to (a c g)) (rate Rni * pa0 * pc1 * pg2))
  (mutate (from (a t g)) (to (a g g)) (rate Rnv * pa0 * pg1 * pg2))
  (mutate (from (a t g)) (to (c t g)) (rate Rnv * pc0 * pt1 * pg2))
  (mutate (from (a t g)) (to (g t g)) (rate Rni * pg0 * pt1 * pg2))
  (mutate (from (a t g)) (to (t t g)) (rate Rnv * pt0 * pt1 * pg2))
  (mutate (from (a t g)) (to (a t t)) (rate Rnv * pa0 * pt1 * pt2))
  (mutate (from (c t g)) (to (c t a)) (rate Rsi * pc0 * pt1 * pa2))
  (mutate (from (c t g)) (to (c t c)) (rate Rsv * pc0 * pt1 * pc2))
  (mutate (from (c t g)) (to (c a g)) (rate Rnv * pc0 * pa1 * pg2))
  (mutate (from (c t g)) (to (c c g)) (rate Rni * pc0 * pc1 * pg2))
  (mutate (from (c t g)) (to (c g g)) (rate Rnv * pc0 * pg1 * pg2))
  (mutate (from (c t g)) (to (a t g)) (rate Rnv * pa0 * pt1 * pg2))
  (mutate (from (c t g)) (to (g t g)) (rate Rnv * pg0 * pt1 * pg2))
  (mutate (from (c t g)) (to (t t g)) (rate Rsi * pt0 * pt1 * pg2))
  (mutate (from (c t g)) (to (c t t)) (rate Rsv * pc0 * pt1 * pt2))
  (mutate (from (g t g)) (to (g t a)) (rate Rsi * pg0 * pt1 * pa2))
  (mutate (from (g t g)) (to (g t c)) (rate Rsv * pg0 * pt1 * pc2))
  (mutate (from (g t g)) (to (g a g)) (rate Rnv * pg0 * pa1 * pg2))
  (mutate (from (g t g)) (to (g c g)) (rate Rni * pg0 * pc1 * pg2))
  (mutate (from (g t g)) (to (g g g)) (rate Rnv * pg0 * pg1 * pg2))
  (mutate (from (g t g)) (to (a t g)) (rate Rni * pa0 * pt1 * pg2))
  (mutate (from (g t g)) (to (c t g)) (rate Rnv * pc0 * pt1 * pg2))
  (mutate (from (g t g)) (to (t t g)) (rate Rnv * pt0 * pt1 * pg2))
  (mutate (from (g t g)) (to (g t t)) (rate Rsv * pg0 * pt1 * pt2))
  (mutate (from (t t g)) (to (t t a)) (rate Rsi * pt0 * pt1 * pa2))
  (mutate (from (t t g)) (to (t t c)) (rate Rnv * pt0 * pt1 * pc2))
  (mutate (from (t t g)) (to (t c g)) (rate Rni * pt0 * pc1 * pg2))
  (mutate (from (t t g)) (to (t g g)) (rate Rnv * pt0 * pg1 * pg2))
  (mutate (from (t t g)) (to (a t g)) (rate Rnv * pa0 * pt1 * pg2))
  (mutate (from (t t g)) (to (c t g)) (rate Rsi * pc0 * pt1 * pg2))
  (mutate (from (t t g)) (to (g t g)) (rate Rnv * pg0 * pt1 * pg2))
  (mutate (from (t t g)) (to (t t t)) (rate Rnv * pt0 * pt1 * pt2))
  (mutate (from (a a t)) (to (a a a)) (rate Rnv * pa0 * pa1 * pa2))
  (mutate (from (a a t)) (to (a a c)) (rate Rsi * pa0 * pa1 * pc2))
  (mutate (from (a a t)) (to (a a g)) (rate Rnv * pa0 * pa1 * pg2))
  (mutate (from (a a t)) (to (c a t)) (rate Rnv * pc0 * pa1 * pt2))
  (mutate (from (a a t)) (to (g a t)) (rate Rni * pg0 * pa1 * pt2))
  (mutate (from (a a t)) (to (t a t)) (rate Rnv * pt0 * pa1 * pt2))
  (mutate (from (a a t)) (to (a c t)) (rate Rnv * pa0 * pc1 * pt2))
  (mutate (from (a a t)) (to (a g t)) (rate Rni * pa0 * pg1 * pt2))
  (mutate (from (a a t)) (to (a t t)) (rate Rnv * pa0 * pt1 * pt2))
  (mutate (from (c a t)) (to (c a a)) (rate Rnv * pc0 * pa1 * pa2))
  (mutate (from (c a t)) (to (c a c)) (rate Rsi * pc0 * pa1 * pc2))
  (mutate (from (c a t)) (to (c a g)) (rate Rnv * pc0 * pa1 * pg2))
  (mutate (from (c a t)) (to (a a t)) (rate Rnv * pa0 * pa1 * pt2))
  (mutate (from (c a t)) (to (g a t)) (rate Rnv * pg0 * pa1 * pt2))
  (mutate (from (c a t)) (to (t a t)) (rate Rni * pt0 * pa1 * pt2))
  (mutate (from (c a t)) (to (c c t)) (rate Rnv * pc0 * pc1 * pt2))
  (mutate (from (c a t)) (to (c g t)) (rate Rni * pc0 * pg1 * pt2))
  (mutate (from (c a t)) (to (c t t)) (rate Rnv * pc0 * pt1 * pt2))
  (mutate (from (g a t)) (to (g a a)) (rate Rnv * pg0 * pa1 * pa2))
  (mutate (from (g a t)) (to (g a c)) (rate Rsi * pg0 * pa1 * pc2))
  (mutate (from (g a t)) (to (g a g)) (rate Rnv * pg0 * pa1 * pg2))
  (mutate (from (g a t)) (to (a a t)) (rate Rni * pa0 * pa1 * pt2))
  (mutate (from (g a t)) (to (c a t)) (rate Rnv * pc0 * pa1 * pt2))
  (mutate (from (g a t)) (to (t a t)) (rate Rnv * pt0 * pa1 * pt2))
  (mutate (from (g a t)) (to (g c t)) (rate Rnv * pg0 * pc1 * pt2))
  (mutate (from (g a t)) (to (g g t)) (rate Rni * pg0 * pg1 * pt2))
  (mutate (from (g a t)) (to (g t t)) (rate Rnv * pg0 * pt1 * pt2))
  (mutate (from (t a t)) (to (t a c)) (rate Rsi * pt0 * pa1 * pc2))
  (mutate (from (t a t)) (to (a a t)) (rate Rnv * pa0 * pa1 * pt2))
  (mutate (from (t a t)) (to (c a t)) (rate Rni * pc0 * pa1 * pt2))
  (mutate (from (t a t)) (to (g a t)) (rate Rnv * pg0 * pa1 * pt2))
  (mutate (from (t a t)) (to (t c t)) (rate Rnv * pt0 * pc1 * pt2))
  (mutate (from (t a t)) (to (t g t)) (rate Rni * pt0 * pg1 * pt2))
  (mutate (from (t a t)) (to (t t t)) (rate Rnv * pt0 * pt1 * pt2))
  (mutate (from (a c t)) (to (a c a)) (rate Rsv * pa0 * pc1 * pa2))
  (mutate (from (a c t)) (to (a c c)) (rate Rsi * pa0 * pc1 * pc2))
  (mutate (from (a c t)) (to (a c g)) (rate Rsv * pa0 * pc1 * pg2))
  (mutate (from (a c t)) (to (a a t)) (rate Rnv * pa0 * pa1 * pt2))
  (mutate (from (a c t)) (to (c c t)) (rate Rnv * pc0 * pc1 * pt2))
  (mutate (from (a c t)) (to (g c t)) (rate Rni * pg0 * pc1 * pt2))
  (mutate (from (a c t)) (to (t c t)) (rate Rnv * pt0 * pc1 * pt2))
  (mutate (from (a c t)) (to (a g t)) (rate Rnv * pa0 * pg1 * pt2))
  (mutate (from (a c t)) (to (a t t)) (rate Rni * pa0 * pt1 * pt2))
  (mutate (from (c c t)) (to (c c a)) (rate Rsv * pc0 * pc1 * pa2))
  (mutate (from (c c t)) (to (c c c)) (rate Rsi * pc0 * pc1 * pc2))
  (mutate (from (c c t)) (to (c c g)) (rate Rsv * pc0 * pc1 * pg2))
  (mutate (from (c c t)) (to (c a t)) (rate Rnv * pc0 * pa1 * pt2))
  (mutate (from (c c t)) (to (a c t)) (rate Rnv * pa0 * pc1 * pt2))
  (mutate (from (c c t)) (to (g c t)) (rate Rnv * pg0 * pc1 * pt2))
  (mutate (from (c c t)) (to (t c t)) (rate Rni * pt0 * pc1 * pt2))
  (mutate (from (c c t)) (to (c g t)) (rate Rnv * pc0 * pg1 * pt2))
  (mutate (from (c c t)) (to (c t t)) (rate Rni * pc0 * pt1 * pt2))
  (mutate (from (g c t)) (to (g c a)) (rate Rsv * pg0 * pc1 * pa2))
  (mutate (from (g c t)) (to (g c c)) (rate Rsi * pg0 * pc1 * pc2))
  (mutate (from (g c t)) (to (g c g)) (rate Rsv * pg0 * pc1 * pg2))
  (mutate (from (g c t)) (to (g a t)) (rate Rnv * pg0 * pa1 * pt2))
  (mutate (from (g c t)) (to (a c t)) (rate Rni * pa0 * pc1 * pt2))
  (mutate (from (g c t)) (to (c c t)) (rate Rnv * pc0 * pc1 * pt2))
  (mutate (from (g c t)) (to (t c t)) (rate Rnv * pt0 * pc1 * pt2))
  (mutate (from (g c t)) (to (g g t)) (rate Rnv * pg0 * pg1 * pt2))
  (mutate (from (g c t)) (to (g t t)) (rate Rni * pg0 * pt1 * pt2))
  (mutate (from (t c t)) (to (t c a)) (rate Rsv * pt0 * pc1 * pa2))
  (mutate (from (t c t)) (to (t c c)) (rate Rsi * pt0 * pc1 * pc2))
  (mutate (from (t c t)) (to (t c g)) (rate Rsv * pt0 * pc1 * pg2))
  (mutate (from (t c t)) (to (t a t)) (rate Rnv * pt0 * pa1 * pt2))
  (mutate (from (t c t)) (to (a c t)) (rate Rnv * pa0 * pc1 * pt2))
  (mutate (from (t c t)) (to (c c t)) (rate Rni * pc0 * pc1 * pt2))
  (mutate (from (t c t)) (to (g c t)) (rate Rnv * pg0 * pc1 * pt2))
  (mutate (from (t c t)) (to (t g t)) (rate Rnv * pt0 * pg1 * pt2))
  (mutate (from (t c t)) (to (t t t)) (rate Rni * pt0 * pt1 * pt2))
  (mutate (from (a g t)) (to (a g a)) (rate Rnv * pa0 * pg1 * pa2))
  (mutate (from (a g t)) (to (a g c)) (rate Rsi * pa0 * pg1 * pc2))
  (mutate (from (a g t)) (to (a g g)) (rate Rnv * pa0 * pg1 * pg2))
  (mutate (from (a g t)) (to (a a t)) (rate Rni * pa0 * pa1 * pt2))
  (mutate (from (a g t)) (to (a c t)) (rate Rnv * pa0 * pc1 * pt2))
  (mutate (from (a g t)) (to (c g t)) (rate Rnv * pc0 * pg1 * pt2))
  (mutate (from (a g t)) (to (g g t)) (rate Rni * pg0 * pg1 * pt2))
  (mutate (from (a g t)) (to (t g t)) (rate Rnv * pt0 * pg1 * pt2))
  (mutate (from (a g t)) (to (a t t)) (rate Rnv * pa0 * pt1 * pt2))
  (mutate (from (c g t)) (to (c g a)) (rate Rsv * pc0 * pg1 * pa2))
  (mutate (from (c g t)) (to (c g c)) (rate Rsi * pc0 * pg1 * pc2))
  (mutate (from (c g t)) (to (c g g)) (rate Rsv * pc0 * pg1 * pg2))
  (mutate (from (c g t)) (to (c a t)) (rate Rni * pc0 * pa1 * pt2))
  (mutate (from (c g t)) (to (c c t)) (rate Rnv * pc0 * pc1 * pt2))
  (mutate (from (c g t)) (to (a g t)) (rate Rnv * pa0 * pg1 * pt2))
  (mutate (from (c g t)) (to (g g t)) (rate Rnv * pg0 * pg1 * pt2))
  (mutate (from (c g t)) (to (t g t)) (rate Rni * pt0 * pg1 * pt2))
  (mutate (from (c g t)) (to (c t t)) (rate Rnv * pc0 * pt1 * pt2))
  (mutate (from (g g t)) (to (g g a)) (rate Rsv * pg0 * pg1 * pa2))
  (mutate (from (g g t)) (to (g g c)) (rate Rsi * pg0 * pg1 * pc2))
  (mutate (from (g g t)) (to (g g g)) (rate Rsv * pg0 * pg1 * pg2))
  (mutate (from (g g t)) (to (g a t)) (rate Rni * pg0 * pa1 * pt2))
  (mutate (from (g g t)) (to (g c t)) (rate Rnv * pg0 * pc1 * pt2))
  (mutate (from (g g t)) (to (a g t)) (rate Rni * pa0 * pg1 * pt2))
  (mutate (from (g g t)) (to (c g t)) (rate Rnv * pc0 * pg1 * pt2))
  (mutate (from (g g t)) (to (t g t)) (rate Rnv * pt0 * pg1 * pt2))
  (mutate (from (g g t)) (to (g t t)) (rate Rnv * pg0 * pt1 * pt2))
  (mutate (from (t g t)) (to (t g c)) (rate Rsi * pt0 * pg1 * pc2))
  (mutate (from (t g t)) (to (t g g)) (rate Rnv * pt0 * pg1 * pg2))
  (mutate (from (t g t)) (to (t a t)) (rate Rni * pt0 * pa1 * pt2))
  (mutate (from (t g t)) (to (t c t)) (rate Rnv * pt0 * pc1 * pt2))
  (mutate (from (t g t)) (to (a g t)) (rate Rnv * pa0 * pg1 * pt2))
  (mutate (from (t g t)) (to (c g t)) (rate Rni * pc0 * pg1 * pt2))
  (mutate (from (t g t)) (to (g g t)) (rate Rnv * pg0 * pg1 * pt2))
  (mutate (from (t g t)) (to (t t t)) (rate Rnv * pt0 * pt1 * pt2))
  (mutate (from (a t t)) (to (a t a)) (rate Rsv * pa0 * pt1 * pa2))
  (mutate (from (a t t)) (to (a t c)) (rate Rsi * pa0 * pt1 * pc2))
  (mutate (from (a t t)) (to (a t g)) (rate Rnv * pa0 * pt1 * pg2))
  (mutate (from (a t t)) (to (a a t)) (rate Rnv * pa0 * pa1 * pt2))
  (mutate (from (a t t)) (to (a c t)) (rate Rni * pa0 * pc1 * pt2))
  (mutate (from (a t t)) (to (a g t)) (rate Rnv * pa0 * pg1 * pt2))
  (mutate (from (a t t)) (to (c t t)) (rate Rnv * pc0 * pt1 * pt2))
  (mutate (from (a t t)) (to (g t t)) (rate Rni * pg0 * pt1 * pt2))
  (mutate (from (a t t)) (to (t t t)) (rate Rnv * pt0 * pt1 * pt2))
  (mutate (from (c t t)) (to (c t a)) (rate Rsv * pc0 * pt1 * pa2))
  (mutate (from (c t t)) (to (c t c)) (rate Rsi * pc0 * pt1 * pc2))
  (mutate (from (c t t)) (to (c t g)) (rate Rsv * pc0 * pt1 * pg2))
  (mutate (from (c t t)) (to (c a t)) (rate Rnv * pc0 * pa1 * pt2))
  (mutate (from (c t t)) (to (c c t)) (rate Rni * pc0 * pc1 * pt2))
  (mutate (from (c t t)) (to (c g t)) (rate Rnv * pc0 * pg1 * pt2))
  (mutate (from (c t t)) (to (a t t)) (rate Rnv * pa0 * pt1 * pt2))
  (mutate (from (c t t)) (to (g t t)) (rate Rnv * pg0 * pt1 * pt2))
  (mutate (from (c t t)) (to (t t t)) (rate Rni * pt0 * pt1 * pt2))
  (mutate (from (g t t)) (to (g t a)) (rate Rsv * pg0 * pt1 * pa2))
  (mutate (from (g t t)) (to (g t c)) (rate Rsi * pg0 * pt1 * pc2))
  (mutate (from (g t t)) (to (g t g)) (rate Rsv * pg0 * pt1 * pg2))
  (mutate (from (g t t)) (to (g a t)) (rate Rnv * pg0 * pa1 * pt2))
  (mutate (from (g t t)) (to (g c t)) (rate Rni * pg0 * pc1 * pt2))
  (mutate (from (g t t)) (to (g g t)) (rate Rnv * pg0 * pg1 * pt2))
  (mutate (from (g t t)) (to (a t t)) (rate Rni * pa0 * pt1 * pt2))
  (mutate (from (g t t)) (to (c t t)) (rate Rnv * pc0 * pt1 * pt2))
  (mutate (from (g t t)) (to (t t t)) (rate Rnv * pt0 * pt1 * pt2))
  (mutate (from (t t t)) (to (t t a)) (rate Rnv * pt0 * pt1 * pa2))
  (mutate (from (t t t)) (to (t t c)) (rate Rsi * pt0 * pt1 * pc2))
  (mutate (from (t t t)) (to (t t g)) (rate Rnv * pt0 * pt1 * pg2))
  (mutate (from (t t t)) (to (t a t)) (rate Rnv * pt0 * pa1 * pt2))
  (mutate (from (t t t)) (to (t c t)) (rate Rni * pt0 * pc1 * pt2))
  (mutate (from (t t t)) (to (t g t)) (rate Rnv * pt0 * pg1 * pt2))
  (mutate (from (t t t)) (to (a t t)) (rate Rnv * pa0 * pt1 * pt2))
  (mutate (from (t t t)) (to (c t t)) (rate Rni * pc0 * pt1 * pt2))
  (mutate (from (t t t)) (to (g t t)) (rate Rnv * pg0 * pt1 * pt2))
 )  ;; end hybrid chain COD0 COD1 COD2

)  ;; end grammar Ancestral_GC_content

;; Alphabet DNA
;;
(alphabet
 (name DNA)
 (token (a c g t))
 (complement (t g c a))
 (extend (to n) (from a) (from c) (from g) (from t))
 (extend (to x) (from a) (from c) (from g) (from t))
 (extend (to u) (from t))
 (extend (to r) (from a) (from g))
 (extend (to y) (from c) (from t))
 (extend (to m) (from a) (from c))
 (extend (to k) (from g) (from t))
 (extend (to s) (from c) (from g))
 (extend (to w) (from a) (from t))
 (extend (to h) (from a) (from c) (from t))
 (extend (to b) (from c) (from g) (from t))
 (extend (to v) (from a) (from c) (from g))
 (extend (to d) (from a) (from g) (from t))
 (wildcard *)
)  ;; end alphabet DNA

