;; Pole-daughter model
(grammar
 (name pole-daughter)

 (hybrid-chain
  (terminal (X))
  (row TYPE)
  (components
   ((label POLE) (terminal (P)))
   ((label DAUGHTER) (terminal (D)))))

 (transform (from (S)) (to (X S*)))
 (transform (from (S*)) (to ()) (prob 1))
 (transform (from (S*)) (to (S)) (prob 1))

 (&foreach-token
  SRC
  (&foreach-token
   DEST
   (&if
    (&eq SRC DEST)
    ()
    (rate
     ((&cat pole_rate_ SRC DEST) .1)
     ((&cat daughter_rate_ SRC DEST) .2)))))

 (pgroup
  ((&foreach-token
    TOK
    ((&cat pole_prob_ TOK)
     (&div 1 &TOKENS))))
  ((&foreach-token
    TOK
    ((&cat daughter_prob_ TOK)
     (&div 1 &TOKENS)))))
 
 (chain
  (update-policy parametric)
  (terminal (P))

  ;; initial probability distribution
  (&foreach-token
   TOK
   (initial (state (TOK)) (prob (&cat pole_prob_ TOK))))

  ;; mutation rates
  (&foreach-token
   SRC
   (&foreach-token
    DEST
    (&if
     (&eq SRC DEST)
     ()
     (mutate (from (SRC)) (to (DEST)) (rate (&cat pole_rate_ SRC DEST)))))))

 (chain
  (update-policy parametric)
  (terminal (D))
  
  ;; initial probability distribution
  (&foreach-token
   TOK
   (initial (state (TOK)) (prob (&cat daughter_prob_ TOK))))

  ;; mutation rates
  (&foreach-token
   SRC
   (&foreach-token
    DEST
    (&if
     (&eq SRC DEST)
     ()
     (mutate (from (SRC)) (to (DEST)) (rate (&cat daughter_rate_ SRC DEST)))))))

 )  ;; end grammar

(alphabet
 (name DNA)
 (token (a c g t))
 (complement (t g c a))
 (extend (to n) (from a) (from c) (from g) (from t))
 (extend (to x) (from a) (from c) (from g) (from t))
 (extend (to u) (from t))
 (extend (to r) (from a) (from g))
 (extend (to y) (from c) (from t))
 (extend (to m) (from a) (from c))
 (extend (to k) (from g) (from t))
 (extend (to s) (from c) (from g))
 (extend (to w) (from a) (from t))
 (extend (to h) (from a) (from c) (from t))
 (extend (to b) (from c) (from g) (from t))
 (extend (to v) (from a) (from c) (from g))
 (extend (to d) (from a) (from g) (from t))
 (wildcard *))
