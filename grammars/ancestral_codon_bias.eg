;; Model for measuring ancestral codon bias
;; To see how the macros expand, use the -x option to xrate

;; Here's the grammar...
(grammar
 (name Ancestral_codon_bias)
 (parametric)

 ;; Define a hybrid chain with a different chain on each branch.
 (hybrid-chain
  (terminal (HYBRID0 HYBRID1 HYBRID2))
  (row ?)   ;; the #=GS tag used to select substitution models (automagically equal to the node name)
  (components
   (&foreach-branch  ;; loop over node names
    NODE
    ((label NODE) (terminal ((&. COD0_ NODE)
			     (&. COD1_ NODE)
			     (&. COD2_ NODE))))
    )
   )
  )

 ;; Main loop over branches
 (&foreach-branch
  NODE

  ;; Parameters
  ;; Branch-specific codon bias
  (pgroup
   (
    (&foreach-token
     i
     (&foreach-token
      j
      (&foreach-token
       k
       ((&. P i j k _ NODE) (&/ 1 (&* &TOKENS &TOKENS &TOKENS)))
       )
      )
     )
    )
   )

  ;; Branch-specific substitution rate
  (rate
   ((&. RATE_ NODE) 1)
   )

  ;; Branch-specific substitution rate matrix
  (chain
   (update-policy parametric)
   (terminal ((&. COD0_ NODE)
	      (&. COD1_ NODE)
	      (&. COD2_ NODE)))

   (&foreach-token
    i
    (&foreach-token
     j
     (&foreach-token
      k
      (&warn Initializing: codon (&. i j k) , branch NODE)
      ;; initial probability distribution
      (initial (state (i j k)) (prob ((&. P i j k _ NODE))))

    ;; mutation rates
      (&foreach-token
       x
       (&foreach-token
	y
	(&foreach-token
	 z
	 (&?
	  (&and (&= i x) (&= j y) (&= k z))
	  ()
	  (mutate
	   (from (i j k))
	   (to (x y z))
	   (rate (((&. RATE_ NODE) * (&. P x y z _ NODE))))
	   )
	  )
	 )
	)
       )  ;; end xyz loop
      )
     )
    )  ;; end ijk loop
   ) ;; end chain

  ) ;; end loop over branches

 ;; transformation rules
 ;; START state
 (transform
  (from (START))
  (to (EMIT)))

 (transform
  (from (START))
  (to ()))

 ;; EMIT state
 (transform
  (from (EMIT))
  (to (HYBRID0 HYBRID1 HYBRID2 EMIT*)))

 (transform
  (from (EMIT*))
  (to (EMIT)))

 (transform
  (from (EMIT*))
  (to ()))

 ) ;; end grammar Ancestral_GC_content


; Uncomment binary alphabet to use it for testing
; (alphabet (name Binary) (token (0 1)))

(alphabet
 (name RNA)
 (token (a c g u))
 (complement (u g c a))
 (extend (to n) (from a) (from c) (from g) (from u))
 (extend (to x) (from a) (from c) (from g) (from u))
 (extend (to t) (from u))
 (extend (to r) (from a) (from g))
 (extend (to y) (from c) (from u))
 (extend (to m) (from a) (from c))
 (extend (to k) (from g) (from u))
 (extend (to s) (from c) (from g))
 (extend (to w) (from a) (from u))
 (extend (to h) (from a) (from c) (from u))
 (extend (to b) (from c) (from g) (from u))
 (extend (to v) (from a) (from c) (from g))
 (extend (to d) (from a) (from g) (from u))
 (wildcard *)
 ) ;; end alphabet RNA

