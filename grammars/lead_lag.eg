;; Lead-lag model
(grammar
 (name lead-lag)

 ;; Hybrid chain mapping "#=GS SEQNAME STRAND ..." values in Stockholm file to the appropriate continuous-time Markov chain model for the corresponding phylogenetic branch
 (hybrid-chain
  (terminal (X))
  (row STRAND)
  (components
   ((label LEAD) (terminal (P)))
   ((label LAG) (terminal (D)))))

 ;; Alignment grammar (a straightforward IID model)
 (transform (from (S)) (to (X S*)))
 (transform (from (S*)) (to ()) (prob 1))
 (transform (from (S*)) (to (S)) (prob 1))

 ;; Declaration of parameters, XXX_rate_SRC_DEST and XXX_prob_TOK, for XXX in {LEAD,LAG} and nucleotides SRC,DEST,TOK
 (&foreach-token
  SRC
  (&foreach-token
   DEST
   (&if
    (&eq SRC DEST)
    ()
    (rate
     ((&cat lead_rate_ SRC DEST) .1)
     ((&cat lag_rate_ SRC DEST) .2)))))

 (pgroup
  ((&foreach-token
    TOK
    ((&cat lead_prob_ TOK)
     (&div 1 &TOKENS))))
  ((&foreach-token
    TOK
    ((&cat lag_prob_ TOK)
     (&div 1 &TOKENS)))))
 
 (chain
  (update-policy parametric)
  (terminal (P))

  ;; Leading strand model
  ;; initial probability distribution
  (&foreach-token
   TOK
   (initial (state (TOK)) (prob (&cat lead_prob_ TOK))))

  ;; mutation rates
  (&foreach-token
   SRC
   (&foreach-token
    DEST
    (&if
     (&eq SRC DEST)
     ()
     (mutate (from (SRC)) (to (DEST)) (rate (&cat lead_rate_ SRC DEST)))))))

 (chain
  (update-policy parametric)
  (terminal (D))

  ;; Lagging strand model
  ;; initial probability distribution
  (&foreach-token
   TOK
   (initial (state (TOK)) (prob (&cat lag_prob_ TOK))))

  ;; mutation rates
  (&foreach-token
   SRC
   (&foreach-token
    DEST
    (&if
     (&eq SRC DEST)
     ()
     (mutate (from (SRC)) (to (DEST)) (rate (&cat lag_rate_ SRC DEST)))))))

 )  ;; end grammar

;; DNA alphabet
(alphabet
 (name DNA)
 (token (a c g t))
 (complement (t g c a))
 (extend (to n) (from a) (from c) (from g) (from t))
 (extend (to x) (from a) (from c) (from g) (from t))
 (extend (to u) (from t))
 (extend (to r) (from a) (from g))
 (extend (to y) (from c) (from t))
 (extend (to m) (from a) (from c))
 (extend (to k) (from g) (from t))
 (extend (to s) (from c) (from g))
 (extend (to w) (from a) (from t))
 (extend (to h) (from a) (from c) (from t))
 (extend (to b) (from c) (from g) (from t))
 (extend (to v) (from a) (from c) (from g))
 (extend (to d) (from a) (from g) (from t))
 (wildcard *))
